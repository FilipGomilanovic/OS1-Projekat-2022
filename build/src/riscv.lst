GAS LISTING /tmp/ccbs3j1o.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   8              	_Z41__static_initialization_and_destruction_0ii:
   9              	.LFB62:
  10              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by marko on 20.4.22..
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../h/codes.h"
   7:src/riscv.cpp **** #include "../h/syscall_c.h"
   8:src/riscv.cpp **** #include "../lib/console.h"
   9:src/riscv.cpp **** 
  10:src/riscv.cpp **** 
  11:src/riscv.cpp **** SleepingThreadList Riscv::sleepingThreads;
  12:src/riscv.cpp **** Buffer Riscv::putCBuffer;
  13:src/riscv.cpp **** Buffer Riscv::getCBuffer;
  14:src/riscv.cpp **** 
  15:src/riscv.cpp **** 
  16:src/riscv.cpp **** void Riscv::popSppSpie()
  17:src/riscv.cpp **** {
  18:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  19:src/riscv.cpp ****     __asm__ volatile("sret");
  20:src/riscv.cpp **** }
  21:src/riscv.cpp **** 
  22:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  23:src/riscv.cpp **** {
  24:src/riscv.cpp ****     uint64 scause = r_scause();
  25:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
  26:src/riscv.cpp ****     {
  27:src/riscv.cpp **** //         interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  28:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
  29:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
  30:src/riscv.cpp **** 
  31:src/riscv.cpp ****         uint64 code;
  32:src/riscv.cpp ****         __asm__ volatile("ld t1, 8*10(fp)");
  33:src/riscv.cpp ****         __asm__ volatile("mv %0, t1" : "=r" (code));
  34:src/riscv.cpp **** 
  35:src/riscv.cpp ****         if (code == MEM_ALLOC) {
  36:src/riscv.cpp **** 
  37:src/riscv.cpp ****         }
  38:src/riscv.cpp ****         else if (code == MEM_FREE) {
  39:src/riscv.cpp **** 
  40:src/riscv.cpp ****         }
  41:src/riscv.cpp ****         else if (code == THREAD_CREATE){
  42:src/riscv.cpp ****             TCB::Body start_routine;
  43:src/riscv.cpp ****             void* args = nullptr;
  44:src/riscv.cpp ****             uint64 *stack;
  45:src/riscv.cpp ****             thread_t* handle;
  46:src/riscv.cpp **** 
  47:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
  48:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (handle));
GAS LISTING /tmp/ccbs3j1o.s 			page 2


  49:src/riscv.cpp **** 
  50:src/riscv.cpp ****             __asm__ volatile("ld t1, 8*12(fp)");
  51:src/riscv.cpp ****             __asm__ volatile("mv %0, t1" : "=r" (start_routine));
  52:src/riscv.cpp **** 
  53:src/riscv.cpp ****             __asm__ volatile("ld t1, 8*13(fp)");
  54:src/riscv.cpp ****             __asm__ volatile("mv %0, t1" : "=r" (args));
  55:src/riscv.cpp **** 
  56:src/riscv.cpp ****             __asm__ volatile("ld t1, 8*14(fp)");
  57:src/riscv.cpp ****             __asm__ volatile("mv %0, t1" : "=r" (stack));
  58:src/riscv.cpp **** 
  59:src/riscv.cpp ****             TCB::createThread(handle, start_routine, args, stack);
  60:src/riscv.cpp **** 
  61:src/riscv.cpp ****         }
  62:src/riscv.cpp ****         else if (code == THREAD_EXIT){
  63:src/riscv.cpp ****             TCB::running->setFinished(true);
  64:src/riscv.cpp ****             TCB::dispatch();
  65:src/riscv.cpp ****             w_sstatus(sstatus);
  66:src/riscv.cpp ****             w_sepc(sepc);
  67:src/riscv.cpp ****         }
  68:src/riscv.cpp ****         else if (code == THREAD_DISPATCH){
  69:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
  70:src/riscv.cpp ****             TCB::dispatch();
  71:src/riscv.cpp ****             w_sstatus(sstatus);
  72:src/riscv.cpp ****             w_sepc(sepc);
  73:src/riscv.cpp ****         }
  74:src/riscv.cpp ****         else if (code == SEM_OPEN){
  75:src/riscv.cpp ****             sem_t* handle;
  76:src/riscv.cpp ****             unsigned init;
  77:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
  78:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (handle));
  79:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*12(fp)");
  80:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (init));
  81:src/riscv.cpp ****             _sem::createSemaphore(handle, init);
  82:src/riscv.cpp **** 
  83:src/riscv.cpp ****         }
  84:src/riscv.cpp ****         else if (code == SEM_CLOSE){
  85:src/riscv.cpp ****             sem_t* handle;
  86:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
  87:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (handle));
  88:src/riscv.cpp **** 
  89:src/riscv.cpp ****         }
  90:src/riscv.cpp ****         else if (code == SEM_WAIT){
  91:src/riscv.cpp ****             sem_t id;
  92:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
  93:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (id));
  94:src/riscv.cpp **** 
  95:src/riscv.cpp ****             id->wait();
  96:src/riscv.cpp **** 
  97:src/riscv.cpp ****         }
  98:src/riscv.cpp ****         else if (code == SEM_SIGNAL){
  99:src/riscv.cpp ****             sem_t id;
 100:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 101:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (id));
 102:src/riscv.cpp ****             id->signal();
 103:src/riscv.cpp ****         }
 104:src/riscv.cpp ****         else if (code == TIME_SLEEP){
 105:src/riscv.cpp ****             //TReba da smestim nit u sleepingThreads i da promenim kontekst, ali ne smem da je opet
GAS LISTING /tmp/ccbs3j1o.s 			page 3


 106:src/riscv.cpp **** 
 107:src/riscv.cpp ****             time_t slice;
 108:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 109:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (slice));
 110:src/riscv.cpp **** //            printString("\nSlice = ");
 111:src/riscv.cpp **** //            printInteger(slice);
 112:src/riscv.cpp **** //            printString("\n");
 113:src/riscv.cpp ****             if(slice != 0) {
 114:src/riscv.cpp ****                 TCB::running->setSleeping(true);
 115:src/riscv.cpp ****                 Riscv::sleepingThreads.put(TCB::running, slice);
 116:src/riscv.cpp ****             }
 117:src/riscv.cpp **** 
 118:src/riscv.cpp ****             TCB::dispatch();
 119:src/riscv.cpp **** 
 120:src/riscv.cpp ****         }
 121:src/riscv.cpp ****         else if (code == GET_C){
 122:src/riscv.cpp ****             char *ret;
 123:src/riscv.cpp **** 
 124:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 125:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (ret));
 126:src/riscv.cpp **** 
 127:src/riscv.cpp ****             *ret = getCBuffer.getc();
 128:src/riscv.cpp ****             if (ret == nullptr){
 129:src/riscv.cpp ****                 printString("pusenje");
 130:src/riscv.cpp ****             }
 131:src/riscv.cpp **** //            printString("c = ");
 132:src/riscv.cpp **** //            putc(c);
 133:src/riscv.cpp **** //            printString("\n");
 134:src/riscv.cpp **** //            returnValue[count++] = uint64(c);
 135:src/riscv.cpp **** //            __asm__ volatile("mv %0, a0" : "=r" (ret));
 136:src/riscv.cpp ****             w_sstatus(sstatus);
 137:src/riscv.cpp ****             w_sepc(sepc);
 138:src/riscv.cpp ****         }
 139:src/riscv.cpp ****         else if (code == PUT_C){
 140:src/riscv.cpp ****             char c;
 141:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 142:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (c));
 143:src/riscv.cpp **** 
 144:src/riscv.cpp ****             putCBuffer.putc(c);
 145:src/riscv.cpp **** 
 146:src/riscv.cpp ****         }
 147:src/riscv.cpp ****         else {
 148:src/riscv.cpp ****             uint64 volatile sepc = r_sepc() + 4;
 149:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 150:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 151:src/riscv.cpp ****             TCB::dispatch();
 152:src/riscv.cpp ****             w_sstatus(sstatus);
 153:src/riscv.cpp ****             w_sepc(sepc);
 154:src/riscv.cpp ****         }
 155:src/riscv.cpp **** 
 156:src/riscv.cpp ****         w_sstatus(sstatus);
 157:src/riscv.cpp ****         w_sepc(sepc);
 158:src/riscv.cpp ****     }
 159:src/riscv.cpp ****     else if (scause == 0x8000000000000001UL)
 160:src/riscv.cpp ****     {
 161:src/riscv.cpp **** //         TIMER
 162:src/riscv.cpp **** //         interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
GAS LISTING /tmp/ccbs3j1o.s 			page 4


 163:src/riscv.cpp ****         time_t temp = Riscv::sleepingThreads.peekFirstSlice();
 164:src/riscv.cpp ****         time_t t1 = -1;
 165:src/riscv.cpp **** 
 166:src/riscv.cpp ****         if (temp != t1){
 167:src/riscv.cpp ****             Riscv::sleepingThreads.decFirst();
 168:src/riscv.cpp ****             if (Riscv::sleepingThreads.peekFirstSlice() == 0) {
 169:src/riscv.cpp ****                 Riscv::sleepingThreads.removeFinishedThreads();
 170:src/riscv.cpp ****             }
 171:src/riscv.cpp ****         }
 172:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 173:src/riscv.cpp ****         TCB::timeSliceCounter++;
 174:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 175:src/riscv.cpp ****         {
 176:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 177:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 178:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 179:src/riscv.cpp ****             TCB::dispatch();
 180:src/riscv.cpp ****             w_sstatus(sstatus);
 181:src/riscv.cpp ****             w_sepc(sepc);
 182:src/riscv.cpp ****         }
 183:src/riscv.cpp ****     }
 184:src/riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 185:src/riscv.cpp ****     {
 186:src/riscv.cpp **** //          interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 187:src/riscv.cpp ****         uint64 irq = plic_claim();
 188:src/riscv.cpp ****         while (*((char*)(CONSOLE_STATUS)) & CONSOLE_RX_STATUS_BIT) {
 189:src/riscv.cpp ****             if (getCBuffer.itemAvailable == nullptr) {
 190:src/riscv.cpp ****                 getCBuffer.itemAvailable = new _sem(0);
 191:src/riscv.cpp ****             }
 192:src/riscv.cpp ****             char c = (*(char*)CONSOLE_RX_DATA);
 193:src/riscv.cpp ****             getCBuffer.putc(c);
 194:src/riscv.cpp **** 
 195:src/riscv.cpp ****         }
 196:src/riscv.cpp ****         plic_complete(irq);
 197:src/riscv.cpp ****     }
 198:src/riscv.cpp ****     else
 199:src/riscv.cpp ****     {
 200:src/riscv.cpp ****         // unexpected trap cause
 201:src/riscv.cpp ****     }
 202:src/riscv.cpp **** }...
  11              		.loc 1 202 1
  12              		.cfi_startproc
  13              	.LVL0:
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  20              		.loc 1 202 1 is_stmt 0
  21 000c 93071000 		li	a5,1
  22 0010 6308F500 		beq	a0,a5,.L4
  23              	.L1:
  24 0014 03348100 		ld	s0,8(sp)
  25              		.cfi_remember_state
  26              		.cfi_restore 8
  27              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/ccbs3j1o.s 			page 5


  28 0018 13010101 		addi	sp,sp,16
  29              		.cfi_def_cfa_offset 0
  30 001c 67800000 		jr	ra
  31              	.L4:
  32              		.cfi_restore_state
  33              		.loc 1 202 1 discriminator 1
  34 0020 B7070100 		li	a5,65536
  35 0024 9387F7FF 		addi	a5,a5,-1
  36 0028 E396F5FE 		bne	a1,a5,.L1
  37              	.LVL1:
  38              	.LBB125:
  39              	.LBB126:
  40              	.LBB127:
  41              		.file 2 "src/../h/../h/sleepingThreadsList.h"
   1:src/../h/../h/sleepingThreadsList.h **** //
   2:src/../h/../h/sleepingThreadsList.h **** // Created by os on 9/6/22.
   3:src/../h/../h/sleepingThreadsList.h **** //
   4:src/../h/../h/sleepingThreadsList.h **** 
   5:src/../h/../h/sleepingThreadsList.h **** #ifndef PROJECT_BASE_V1_1_SLEEPINGTHREADSLIST_H
   6:src/../h/../h/sleepingThreadsList.h **** #define PROJECT_BASE_V1_1_SLEEPINGTHREADSLIST_H
   7:src/../h/../h/sleepingThreadsList.h **** 
   8:src/../h/../h/sleepingThreadsList.h **** #include "syscall_c.h"
   9:src/../h/../h/sleepingThreadsList.h **** #include "scheduler.hpp"
  10:src/../h/../h/sleepingThreadsList.h **** 
  11:src/../h/../h/sleepingThreadsList.h **** class SleepingThreadList
  12:src/../h/../h/sleepingThreadsList.h **** {
  13:src/../h/../h/sleepingThreadsList.h **** private:
  14:src/../h/../h/sleepingThreadsList.h ****     struct Elem
  15:src/../h/../h/sleepingThreadsList.h ****     {
  16:src/../h/../h/sleepingThreadsList.h ****         TCB *data;
  17:src/../h/../h/sleepingThreadsList.h ****         Elem *next;
  18:src/../h/../h/sleepingThreadsList.h ****         time_t relativeTime;
  19:src/../h/../h/sleepingThreadsList.h **** 
  20:src/../h/../h/sleepingThreadsList.h ****         Elem(TCB *data, Elem *next, time_t relativeTime) : data(data), next(next), relativeTime(rel
  21:src/../h/../h/sleepingThreadsList.h ****     };
  22:src/../h/../h/sleepingThreadsList.h **** 
  23:src/../h/../h/sleepingThreadsList.h ****     Elem *head, *tail;
  24:src/../h/../h/sleepingThreadsList.h **** 
  25:src/../h/../h/sleepingThreadsList.h **** public:
  26:src/../h/../h/sleepingThreadsList.h ****     SleepingThreadList() : head(nullptr), tail(nullptr) {}
  42              		.loc 2 26 55
  43 002c 97070000 		lla	a5,.LANCHOR0
  43      93870700 
  44 0034 23B00700 		sd	zero,0(a5)
  45 0038 23B40700 		sd	zero,8(a5)
  46              	.LVL2:
  47              	.LBE127:
  48              	.LBE126:
  49              	.LBE125:
  50              	.LBB128:
  51              	.LBB129:
  52              	.LBB130:
  53              		.file 3 "src/../h/buffer.h"
   1:src/../h/buffer.h **** //
   2:src/../h/buffer.h **** // Created by os on 9/10/22.
   3:src/../h/buffer.h **** //
   4:src/../h/buffer.h **** 
GAS LISTING /tmp/ccbs3j1o.s 			page 6


   5:src/../h/buffer.h **** #ifndef PROJECT_BASE_V1_1_BUFFER_H
   6:src/../h/buffer.h **** #define PROJECT_BASE_V1_1_BUFFER_H
   7:src/../h/buffer.h **** #include "../h/_sem.h"
   8:src/../h/buffer.h **** 
   9:src/../h/buffer.h **** class Buffer {
  10:src/../h/buffer.h **** public:
  11:src/../h/buffer.h ****     Buffer() : head(0),tail(0),count(0) {}
  54              		.loc 3 11 39
  55 003c 23BC0710 		sd	zero,280(a5)
  56 0040 23B00712 		sd	zero,288(a5)
  57 0044 23B40712 		sd	zero,296(a5)
  58              	.LVL3:
  59              	.LBE130:
  60              	.LBE129:
  61              	.LBE128:
  62              	.LBB131:
  63              	.LBB132:
  64              	.LBB133:
  65 0048 23BC0722 		sd	zero,568(a5)
  66 004c 23B00724 		sd	zero,576(a5)
  67 0050 23B40724 		sd	zero,584(a5)
  68              	.LVL4:
  69              	.LBE133:
  70              	.LBE132:
  71              	.LBE131:
  72              		.loc 1 202 1
  73 0054 6FF01FFC 		j	.L1
  74              		.cfi_endproc
  75              	.LFE62:
  77              		.align	2
  78              		.globl	_ZN5Riscv10popSppSpieEv
  80              	_ZN5Riscv10popSppSpieEv:
  81              	.LFB57:
  17:src/riscv.cpp **** {
  82              		.loc 1 17 1 is_stmt 1
  83              		.cfi_startproc
  84 0058 130101FF 		addi	sp,sp,-16
  85              		.cfi_def_cfa_offset 16
  86 005c 23348100 		sd	s0,8(sp)
  87              		.cfi_offset 8, -8
  88 0060 13040101 		addi	s0,sp,16
  89              		.cfi_def_cfa 8, 0
  18:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  90              		.loc 1 18 5
  18:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  91              		.loc 1 18 38 is_stmt 0
  92              	#APP
  93              	# 18 "src/riscv.cpp" 1
  19:src/riscv.cpp ****     __asm__ volatile("sret");
  94              		csrw sepc, ra
  95              	# 0 "" 2
  96              		.loc 1 19 5 is_stmt 1
  19:src/riscv.cpp ****     __asm__ volatile("sret");
  97              		.loc 1 19 29 is_stmt 0
  98              	# 19 "src/riscv.cpp" 1
  20:src/riscv.cpp **** }
  99              		sret
GAS LISTING /tmp/ccbs3j1o.s 			page 7


 100              	# 0 "" 2
 101              		.loc 1 20 1
 102              	#NO_APP
 103 006c 03348100 		ld	s0,8(sp)
 104              		.cfi_restore 8
 105              		.cfi_def_cfa 2, 16
 106 0070 13010101 		addi	sp,sp,16
 107              		.cfi_def_cfa_offset 0
 108 0074 67800000 		jr	ra
 109              		.cfi_endproc
 110              	.LFE57:
 112              		.section	.rodata.str1.8,"aMS",@progbits,1
 113              		.align	3
 114              	.LC0:
 115 0000 70757365 		.string	"pusenje"
 115      6E6A6500 
 116              		.text
 117              		.align	2
 118              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 120              	_ZN5Riscv20handleSupervisorTrapEv:
 121              	.LFB58:
  23:src/riscv.cpp **** {
 122              		.loc 1 23 1 is_stmt 1
 123              		.cfi_startproc
 124 0078 130101F6 		addi	sp,sp,-160
 125              		.cfi_def_cfa_offset 160
 126 007c 233C1108 		sd	ra,152(sp)
 127 0080 23388108 		sd	s0,144(sp)
 128 0084 23349108 		sd	s1,136(sp)
 129 0088 23302109 		sd	s2,128(sp)
 130 008c 233C3107 		sd	s3,120(sp)
 131 0090 23384107 		sd	s4,112(sp)
 132              		.cfi_offset 1, -8
 133              		.cfi_offset 8, -16
 134              		.cfi_offset 9, -24
 135              		.cfi_offset 18, -32
 136              		.cfi_offset 19, -40
 137              		.cfi_offset 20, -48
 138 0094 1304010A 		addi	s0,sp,160
 139              		.cfi_def_cfa 8, 0
  24:src/riscv.cpp ****     uint64 scause = r_scause();
 140              		.loc 1 24 5
 141              	.LBB246:
 142              	.LBB247:
 143              		.file 4 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** #include "tcb.hpp"
  10:src/../h/riscv.hpp **** #include "../h/sleepingThreadsList.h"
  11:src/../h/riscv.hpp **** #include "buffer.h"
  12:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccbs3j1o.s 			page 8


  13:src/../h/riscv.hpp **** class Riscv
  14:src/../h/riscv.hpp **** {
  15:src/../h/riscv.hpp **** public:
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  18:src/../h/riscv.hpp ****     static void popSppSpie();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // read register scause
  21:src/../h/riscv.hpp ****     static uint64 r_scause();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // write register scause
  24:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // read register sepc
  27:src/../h/riscv.hpp ****     static uint64 r_sepc();
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // write register sepc
  30:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // read register stvec
  33:src/../h/riscv.hpp ****     static uint64 r_stvec();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // write register stvec
  36:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // read register stval
  39:src/../h/riscv.hpp ****     static uint64 r_stval();
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     // write register stval
  42:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  43:src/../h/riscv.hpp **** 
  44:src/../h/riscv.hpp ****     enum BitMaskSip
  45:src/../h/riscv.hpp ****     {
  46:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  47:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  48:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  49:src/../h/riscv.hpp ****     };
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask set register sip
  52:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // mask clear register sip
  55:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // read register sip
  58:src/../h/riscv.hpp ****     static uint64 r_sip();
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     // write register sip
  61:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     enum BitMaskSstatus
  64:src/../h/riscv.hpp ****     {
  65:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  66:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  67:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  68:src/../h/riscv.hpp ****     };
  69:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccbs3j1o.s 			page 9


  70:src/../h/riscv.hpp ****     // mask set register sstatus
  71:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // mask clear register sstatus
  74:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // read register sstatus
  77:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // write register sstatus
  80:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     // supervisor trap
  83:src/../h/riscv.hpp ****     static void supervisorTrap();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     static Buffer putCBuffer;
  86:src/../h/riscv.hpp ****     static Buffer getCBuffer;
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** private:
  89:src/../h/riscv.hpp **** 
  90:src/../h/riscv.hpp ****     // supervisor trap handler
  91:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  92:src/../h/riscv.hpp ****     static SleepingThreadList sleepingThreads;
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp **** };
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  98:src/../h/riscv.hpp **** {
  99:src/../h/riscv.hpp ****     uint64 volatile scause;
 144              		.loc 4 99 5
 100:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 145              		.loc 4 100 5
 146              		.loc 4 100 72 is_stmt 0
 147              	#APP
 148              	# 100 "src/../h/riscv.hpp" 1
 101              	    return scause;
 149              		csrr a5, scause
 150              	# 0 "" 2
 151              	#NO_APP
 152 009c 233CF4F8 		sd	a5,-104(s0)
 153              		.loc 4 101 5 is_stmt 1
 154              		.loc 4 101 12 is_stmt 0
 155 00a0 033784F9 		ld	a4,-104(s0)
 156              	.LVL5:
 157              	.LBE247:
 158              	.LBE246:
  25:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
 159              		.loc 1 25 5 is_stmt 1
 160              	.LBB248:
  25:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
 161              		.loc 1 25 40 is_stmt 0
 162 00a4 930687FF 		addi	a3,a4,-8
  25:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
 163              		.loc 1 25 5
 164 00a8 93071000 		li	a5,1
 165 00ac 63FAD702 		bleu	a3,a5,.L42
GAS LISTING /tmp/ccbs3j1o.s 			page 10


 166              	.LBE248:
 159:src/riscv.cpp ****     else if (scause == 0x8000000000000001UL)
 167              		.loc 1 159 10 is_stmt 1
 168              	.LBB470:
 169              	.LBB249:
 170 00b0 9307F0FF 		li	a5,-1
 171 00b4 9397F703 		slli	a5,a5,63
 172 00b8 93871700 		addi	a5,a5,1
 173 00bc 6300F73C 		beq	a4,a5,.L43
 174              	.LBE249:
 175              	.LBE470:
 184:src/riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 176              		.loc 1 184 10
 177              	.LBB471:
 178              	.LBB286:
 179              	.LBB250:
 180 00c0 9307F0FF 		li	a5,-1
 181 00c4 9397F703 		slli	a5,a5,63
 182 00c8 93879700 		addi	a5,a5,9
 183 00cc 6312F712 		bne	a4,a5,.L7
 184              	.LBB251:
 187:src/riscv.cpp ****         uint64 irq = plic_claim();
 185              		.loc 1 187 9
 187:src/riscv.cpp ****         uint64 irq = plic_claim();
 186              		.loc 1 187 32 is_stmt 0
 187 00d0 97000000 		call	plic_claim@plt
 187      E7800000 
 188              	.LVL6:
 189 00d8 93040500 		mv	s1,a0
 190              	.LVL7:
 191 00dc 6F00404B 		j	.L39
 192              	.LVL8:
 193              	.L42:
 194              	.LBE251:
 195              	.LBE250:
 196              	.LBE286:
 197              	.LBB287:
  28:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 198              		.loc 1 28 9 is_stmt 1
 199              	.LBB288:
 200              	.LBB289:
 102:src/../h/riscv.hpp **** }
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 105:src/../h/riscv.hpp **** {
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 110:src/../h/riscv.hpp **** {
 111:src/../h/riscv.hpp ****     uint64 volatile sepc;
 201              		.loc 4 111 5
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 202              		.loc 4 112 5
 203              		.loc 4 112 64 is_stmt 0
 204              	#APP
 205              	# 112 "src/../h/riscv.hpp" 1
GAS LISTING /tmp/ccbs3j1o.s 			page 11


 113              	    return sepc;
 206              		csrr a5, sepc
 207              	# 0 "" 2
 208              	#NO_APP
 209 00e4 2334F4FA 		sd	a5,-88(s0)
 210              		.loc 4 113 5 is_stmt 1
 211              		.loc 4 113 12 is_stmt 0
 212 00e8 833784FA 		ld	a5,-88(s0)
 213              	.LBE289:
 214              	.LBE288:
  28:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 215              		.loc 1 28 41
 216 00ec 93874700 		addi	a5,a5,4
  28:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 217              		.loc 1 28 43
 218 00f0 2334F4F6 		sd	a5,-152(s0)
  29:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 219              		.loc 1 29 9 is_stmt 1
 220              	.LBB290:
 221              	.LBB291:
 114:src/../h/riscv.hpp **** }
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 117:src/../h/riscv.hpp **** {
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 119:src/../h/riscv.hpp **** }
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 122:src/../h/riscv.hpp **** {
 123:src/../h/riscv.hpp ****     uint64 volatile stvec;
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 125:src/../h/riscv.hpp ****     return stvec;
 126:src/../h/riscv.hpp **** }
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 129:src/../h/riscv.hpp **** {
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 134:src/../h/riscv.hpp **** {
 135:src/../h/riscv.hpp ****     uint64 volatile stval;
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 137:src/../h/riscv.hpp ****     return stval;
 138:src/../h/riscv.hpp **** }
 139:src/../h/riscv.hpp **** 
 140:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 141:src/../h/riscv.hpp **** {
 142:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 143:src/../h/riscv.hpp **** }
 144:src/../h/riscv.hpp **** 
 145:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 146:src/../h/riscv.hpp **** {
 147:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 148:src/../h/riscv.hpp **** }
 149:src/../h/riscv.hpp **** 
 150:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
GAS LISTING /tmp/ccbs3j1o.s 			page 12


 151:src/../h/riscv.hpp **** {
 152:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 156:src/../h/riscv.hpp **** {
 157:src/../h/riscv.hpp ****     uint64 volatile sip;
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 159:src/../h/riscv.hpp ****     return sip;
 160:src/../h/riscv.hpp **** }
 161:src/../h/riscv.hpp **** 
 162:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 163:src/../h/riscv.hpp **** {
 164:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 165:src/../h/riscv.hpp **** }
 166:src/../h/riscv.hpp **** 
 167:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 168:src/../h/riscv.hpp **** {
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 170:src/../h/riscv.hpp **** }
 171:src/../h/riscv.hpp **** 
 172:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 173:src/../h/riscv.hpp **** {
 174:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 175:src/../h/riscv.hpp **** }
 176:src/../h/riscv.hpp **** 
 177:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 178:src/../h/riscv.hpp **** {
 179:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 222              		.loc 4 179 5
 180:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 223              		.loc 4 180 5
 224              		.loc 4 180 76 is_stmt 0
 225              	#APP
 226              	# 180 "src/../h/riscv.hpp" 1
 181              	    return sstatus;
 227              		csrr a5, sstatus
 228              	# 0 "" 2
 229              	#NO_APP
 230 00f8 2330F4FA 		sd	a5,-96(s0)
 231              		.loc 4 181 5 is_stmt 1
 232              		.loc 4 181 12 is_stmt 0
 233 00fc 833704FA 		ld	a5,-96(s0)
 234              	.LBE291:
 235              	.LBE290:
  29:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 236              		.loc 1 29 45
 237 0100 2338F4F6 		sd	a5,-144(s0)
  31:src/riscv.cpp ****         uint64 code;
 238              		.loc 1 31 9 is_stmt 1
  32:src/riscv.cpp ****         __asm__ volatile("ld t1, 8*10(fp)");
 239              		.loc 1 32 9
  32:src/riscv.cpp ****         __asm__ volatile("ld t1, 8*10(fp)");
 240              		.loc 1 32 44 is_stmt 0
 241              	#APP
 242              	# 32 "src/riscv.cpp" 1
  33:src/riscv.cpp ****         __asm__ volatile("mv %0, t1" : "=r" (code));
GAS LISTING /tmp/ccbs3j1o.s 			page 13


 243              		ld t1, 8*10(fp)
 244              	# 0 "" 2
 245              		.loc 1 33 9 is_stmt 1
  33:src/riscv.cpp ****         __asm__ volatile("mv %0, t1" : "=r" (code));
 246              		.loc 1 33 52 is_stmt 0
 247              	# 33 "src/riscv.cpp" 1
 248              		mv a5, t1
 249              	# 0 "" 2
 250              	.LVL9:
  35:src/riscv.cpp ****         if (code == MEM_ALLOC) {
 251              		.loc 1 35 9 is_stmt 1
 252              	#NO_APP
 253              	.LBB292:
 254 010c 13071000 		li	a4,1
 255              	.LVL10:
 256 0110 6388E70C 		beq	a5,a4,.L9
 257              	.LBE292:
 258              	.LBE287:
 259              	.LBE471:
  38:src/riscv.cpp ****         else if (code == MEM_FREE) {
 260              		.loc 1 38 14
 261              	.LBB472:
 262              	.LBB455:
 263              	.LBB438:
 264              	.LBB293:
 265 0114 13072000 		li	a4,2
 266 0118 6384E70C 		beq	a5,a4,.L9
 267              	.LBE293:
 268              	.LBE438:
 269              	.LBE455:
 270              	.LBE472:
  41:src/riscv.cpp ****         else if (code == THREAD_CREATE){
 271              		.loc 1 41 14
 272              	.LBB473:
 273              	.LBB456:
 274              	.LBB439:
 275              	.LBB426:
 276              	.LBB294:
 277 011c 1307B000 		li	a4,11
 278 0120 638CE708 		beq	a5,a4,.L44
 279              	.LBE294:
 280              	.LBE426:
 281              	.LBE439:
 282              	.LBE456:
 283              	.LBE473:
  62:src/riscv.cpp ****         else if (code == THREAD_EXIT){
 284              		.loc 1 62 14
 285              	.LBB474:
 286              	.LBB457:
 287              	.LBB440:
 288              	.LBB427:
 289              	.LBB415:
 290              	.LBB295:
 291 0124 1307C000 		li	a4,12
 292 0128 6384E70E 		beq	a5,a4,.L45
 293              	.LBE295:
 294              	.LBE415:
GAS LISTING /tmp/ccbs3j1o.s 			page 14


 295              	.LBE427:
 296              	.LBE440:
 297              	.LBE457:
 298              	.LBE474:
  68:src/riscv.cpp ****         else if (code == THREAD_DISPATCH){
 299              		.loc 1 68 14
 300              	.LBB475:
 301              	.LBB458:
 302              	.LBB441:
 303              	.LBB428:
 304              	.LBB416:
 305              	.LBB404:
 306              	.LBB296:
 307 012c 1307D000 		li	a4,13
 308 0130 6388E710 		beq	a5,a4,.L46
 309              	.LBE296:
 310              	.LBE404:
 311              	.LBE416:
 312              	.LBE428:
 313              	.LBE441:
 314              	.LBE458:
 315              	.LBE475:
  74:src/riscv.cpp ****         else if (code == SEM_OPEN){
 316              		.loc 1 74 14
 317              	.LBB476:
 318              	.LBB459:
 319              	.LBB442:
 320              	.LBB429:
 321              	.LBB417:
 322              	.LBB405:
 323              	.LBB389:
 324              	.LBB297:
 325 0134 13075001 		li	a4,21
 326 0138 6388E712 		beq	a5,a4,.L47
 327              	.LBE297:
 328              	.LBE389:
 329              	.LBE405:
 330              	.LBE417:
 331              	.LBE429:
 332              	.LBE442:
 333              	.LBE459:
 334              	.LBE476:
  84:src/riscv.cpp ****         else if (code == SEM_CLOSE){
 335              		.loc 1 84 14
 336              	.LBB477:
 337              	.LBB460:
 338              	.LBB443:
 339              	.LBB430:
 340              	.LBB418:
 341              	.LBB406:
 342              	.LBB390:
 343              	.LBB377:
 344              	.LBB298:
 345 013c 13076001 		li	a4,22
 346 0140 6384E714 		beq	a5,a4,.L48
 347              	.LBE298:
 348              	.LBE377:
GAS LISTING /tmp/ccbs3j1o.s 			page 15


 349              	.LBE390:
 350              	.LBE406:
 351              	.LBE418:
 352              	.LBE430:
 353              	.LBE443:
 354              	.LBE460:
 355              	.LBE477:
  90:src/riscv.cpp ****         else if (code == SEM_WAIT){
 356              		.loc 1 90 14
 357              	.LBB478:
 358              	.LBB461:
 359              	.LBB444:
 360              	.LBB431:
 361              	.LBB419:
 362              	.LBB407:
 363              	.LBB391:
 364              	.LBB378:
 365              	.LBB369:
 366              	.LBB299:
 367 0144 13077001 		li	a4,23
 368 0148 6386E714 		beq	a5,a4,.L49
 369              	.LBE299:
 370              	.LBE369:
 371              	.LBE378:
 372              	.LBE391:
 373              	.LBE407:
 374              	.LBE419:
 375              	.LBE431:
 376              	.LBE444:
 377              	.LBE461:
 378              	.LBE478:
  98:src/riscv.cpp ****         else if (code == SEM_SIGNAL){
 379              		.loc 1 98 14
 380              	.LBB479:
 381              	.LBB462:
 382              	.LBB445:
 383              	.LBB432:
 384              	.LBB420:
 385              	.LBB408:
 386              	.LBB392:
 387              	.LBB379:
 388              	.LBB370:
 389              	.LBB362:
 390              	.LBB300:
 391 014c 13078001 		li	a4,24
 392 0150 638CE714 		beq	a5,a4,.L50
 393              	.LBE300:
 394              	.LBE362:
 395              	.LBE370:
 396              	.LBE379:
 397              	.LBE392:
 398              	.LBE408:
 399              	.LBE420:
 400              	.LBE432:
 401              	.LBE445:
 402              	.LBE462:
 403              	.LBE479:
GAS LISTING /tmp/ccbs3j1o.s 			page 16


 104:src/riscv.cpp ****         else if (code == TIME_SLEEP){
 404              		.loc 1 104 14
 405              	.LBB480:
 406              	.LBB463:
 407              	.LBB446:
 408              	.LBB433:
 409              	.LBB421:
 410              	.LBB409:
 411              	.LBB393:
 412              	.LBB380:
 413              	.LBB371:
 414              	.LBB363:
 415              	.LBB356:
 416              	.LBB301:
 417 0154 1307F001 		li	a4,31
 418 0158 6382E716 		beq	a5,a4,.L51
 419              	.LBE301:
 420              	.LBE356:
 421              	.LBE363:
 422              	.LBE371:
 423              	.LBE380:
 424              	.LBE393:
 425              	.LBE409:
 426              	.LBE421:
 427              	.LBE433:
 428              	.LBE446:
 429              	.LBE463:
 430              	.LBE480:
 121:src/riscv.cpp ****         else if (code == GET_C){
 431              		.loc 1 121 14
 432              	.LBB481:
 433              	.LBB464:
 434              	.LBB447:
 435              	.LBB434:
 436              	.LBB422:
 437              	.LBB410:
 438              	.LBB394:
 439              	.LBB381:
 440              	.LBB372:
 441              	.LBB364:
 442              	.LBB357:
 443              	.LBB351:
 444              	.LBB302:
 445 015c 13079002 		li	a4,41
 446 0160 638AE72A 		beq	a5,a4,.L52
 447              	.LBE302:
 448              	.LBE351:
 449              	.LBE357:
 450              	.LBE364:
 451              	.LBE372:
 452              	.LBE381:
 453              	.LBE394:
 454              	.LBE410:
 455              	.LBE422:
 456              	.LBE434:
 457              	.LBE447:
 458              	.LBE464:
GAS LISTING /tmp/ccbs3j1o.s 			page 17


 459              	.LBE481:
 139:src/riscv.cpp ****         else if (code == PUT_C){
 460              		.loc 1 139 14
 461              	.LBB482:
 462              	.LBB465:
 463              	.LBB448:
 464              	.LBB435:
 465              	.LBB423:
 466              	.LBB411:
 467              	.LBB395:
 468              	.LBB382:
 469              	.LBB373:
 470              	.LBB365:
 471              	.LBB358:
 472              	.LBB352:
 473              	.LBB320:
 474              	.LBB303:
 475 0164 1307A002 		li	a4,42
 476 0168 638AE72E 		beq	a5,a4,.L53
 477              	.LBB304:
 148:src/riscv.cpp ****             uint64 volatile sepc = r_sepc() + 4;
 478              		.loc 1 148 13
 479              	.LBB305:
 480              	.LBB306:
 111:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 481              		.loc 4 111 5
 112:src/../h/riscv.hpp ****     return sepc;
 482              		.loc 4 112 5
 112:src/../h/riscv.hpp ****     return sepc;
 483              		.loc 4 112 64 is_stmt 0
 484              	#APP
 485              	# 112 "src/../h/riscv.hpp" 1
 486              		csrr a5, sepc
 487              	# 0 "" 2
 488              	.LVL11:
 489              	#NO_APP
 490 0170 233CF4FA 		sd	a5,-72(s0)
 113:src/../h/riscv.hpp **** }
 491              		.loc 4 113 5 is_stmt 1
 113:src/../h/riscv.hpp **** }
 492              		.loc 4 113 12 is_stmt 0
 493 0174 833784FB 		ld	a5,-72(s0)
 494              	.LBE306:
 495              	.LBE305:
 148:src/riscv.cpp ****             uint64 volatile sepc = r_sepc() + 4;
 496              		.loc 1 148 45
 497 0178 93874700 		addi	a5,a5,4
 148:src/riscv.cpp ****             uint64 volatile sepc = r_sepc() + 4;
 498              		.loc 1 148 47
 499 017c 233CF4F6 		sd	a5,-136(s0)
 149:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 500              		.loc 1 149 13 is_stmt 1
 501              	.LBB307:
 502              	.LBB308:
 179:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 503              		.loc 4 179 5
 180:src/../h/riscv.hpp ****     return sstatus;
GAS LISTING /tmp/ccbs3j1o.s 			page 18


 504              		.loc 4 180 5
 180:src/../h/riscv.hpp ****     return sstatus;
 505              		.loc 4 180 76 is_stmt 0
 506              	#APP
 507              	# 180 "src/../h/riscv.hpp" 1
 508              		csrr a5, sstatus
 509              	# 0 "" 2
 510              	#NO_APP
 511 0184 2338F4FA 		sd	a5,-80(s0)
 512              		.loc 4 181 5 is_stmt 1
 513              		.loc 4 181 12 is_stmt 0
 514 0188 833704FB 		ld	a5,-80(s0)
 515              	.LBE308:
 516              	.LBE307:
 149:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 517              		.loc 1 149 49
 518 018c 2330F4F8 		sd	a5,-128(s0)
 150:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 519              		.loc 1 150 13 is_stmt 1
 150:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 520              		.loc 1 150 35 is_stmt 0
 521 0190 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 521      83B70700 
 522 0198 23B00700 		sd	zero,0(a5)
 151:src/riscv.cpp ****             TCB::dispatch();
 523              		.loc 1 151 13 is_stmt 1
 151:src/riscv.cpp ****             TCB::dispatch();
 524              		.loc 1 151 26 is_stmt 0
 525 019c 97000000 		call	_ZN3TCB8dispatchEv@plt
 525      E7800000 
 526              	.LVL12:
 152:src/riscv.cpp ****             w_sstatus(sstatus);
 527              		.loc 1 152 13 is_stmt 1
 152:src/riscv.cpp ****             w_sstatus(sstatus);
 528              		.loc 1 152 22 is_stmt 0
 529 01a4 833704F8 		ld	a5,-128(s0)
 530              	.LVL13:
 531              	.LBB309:
 532              	.LBB310:
 182:src/../h/riscv.hpp **** }
 183:src/../h/riscv.hpp **** 
 184:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 185:src/../h/riscv.hpp **** {
 186:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 533              		.loc 4 186 5 is_stmt 1
 534              		.loc 4 186 77 is_stmt 0
 535              	#APP
 536              	# 186 "src/../h/riscv.hpp" 1
 187              	}
 537              		csrw sstatus, a5
 538              	# 0 "" 2
 539              	.LVL14:
 540              	#NO_APP
 541              	.LBE310:
 542              	.LBE309:
 153:src/riscv.cpp ****             w_sepc(sepc);
 543              		.loc 1 153 13 is_stmt 1
GAS LISTING /tmp/ccbs3j1o.s 			page 19


 153:src/riscv.cpp ****             w_sepc(sepc);
 544              		.loc 1 153 19 is_stmt 0
 545 01ac 833784F7 		ld	a5,-136(s0)
 546              	.LVL15:
 547              	.LBB311:
 548              	.LBB312:
 118:src/../h/riscv.hpp **** }
 549              		.loc 4 118 5 is_stmt 1
 118:src/../h/riscv.hpp **** }
 550              		.loc 4 118 65 is_stmt 0
 551              	#APP
 552              	# 118 "src/../h/riscv.hpp" 1
 119:src/../h/riscv.hpp **** 
 553              		csrw sepc, a5
 554              	# 0 "" 2
 555              		.loc 4 119 1
 556              	#NO_APP
 557 01b4 6F00C002 		j	.L9
 558              	.LVL16:
 559              	.L44:
 560              	.LBE312:
 561              	.LBE311:
 562              	.LBE304:
 563              	.LBE303:
 564              	.LBE320:
 565              	.LBE352:
 566              	.LBE358:
 567              	.LBE365:
 568              	.LBE373:
 569              	.LBE382:
 570              	.LBE395:
 571              	.LBE411:
 572              	.LBB412:
  42:src/riscv.cpp ****             TCB::Body start_routine;
 573              		.loc 1 42 13 is_stmt 1
  43:src/riscv.cpp ****             void* args = nullptr;
 574              		.loc 1 43 13
  44:src/riscv.cpp ****             uint64 *stack;
 575              		.loc 1 44 13
  45:src/riscv.cpp ****             thread_t* handle;
 576              		.loc 1 45 13
  47:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 577              		.loc 1 47 13
  47:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 578              		.loc 1 47 48 is_stmt 0
 579              	#APP
 580              	# 47 "src/riscv.cpp" 1
  48:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (handle));
 581              		ld t2, 8*11(fp)
 582              	# 0 "" 2
 583              		.loc 1 48 13 is_stmt 1
  48:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (handle));
 584              		.loc 1 48 58 is_stmt 0
 585              	# 48 "src/riscv.cpp" 1
 586              		mv a0, t2
 587              	# 0 "" 2
 588              	.LVL17:
GAS LISTING /tmp/ccbs3j1o.s 			page 20


  50:src/riscv.cpp ****             __asm__ volatile("ld t1, 8*12(fp)");
 589              		.loc 1 50 13 is_stmt 1
  50:src/riscv.cpp ****             __asm__ volatile("ld t1, 8*12(fp)");
 590              		.loc 1 50 48 is_stmt 0
 591              	# 50 "src/riscv.cpp" 1
  51:src/riscv.cpp ****             __asm__ volatile("mv %0, t1" : "=r" (start_routine));
 592              		ld t1, 8*12(fp)
 593              	# 0 "" 2
 594              		.loc 1 51 13 is_stmt 1
  51:src/riscv.cpp ****             __asm__ volatile("mv %0, t1" : "=r" (start_routine));
 595              		.loc 1 51 65 is_stmt 0
 596              	# 51 "src/riscv.cpp" 1
 597              		mv a1, t1
 598              	# 0 "" 2
 599              	.LVL18:
  53:src/riscv.cpp ****             __asm__ volatile("ld t1, 8*13(fp)");
 600              		.loc 1 53 13 is_stmt 1
  53:src/riscv.cpp ****             __asm__ volatile("ld t1, 8*13(fp)");
 601              		.loc 1 53 48 is_stmt 0
 602              	# 53 "src/riscv.cpp" 1
  54:src/riscv.cpp ****             __asm__ volatile("mv %0, t1" : "=r" (args));
 603              		ld t1, 8*13(fp)
 604              	# 0 "" 2
 605              		.loc 1 54 13 is_stmt 1
  54:src/riscv.cpp ****             __asm__ volatile("mv %0, t1" : "=r" (args));
 606              		.loc 1 54 56 is_stmt 0
 607              	# 54 "src/riscv.cpp" 1
 608              		mv a2, t1
 609              	# 0 "" 2
 610              	.LVL19:
  56:src/riscv.cpp ****             __asm__ volatile("ld t1, 8*14(fp)");
 611              		.loc 1 56 13 is_stmt 1
  56:src/riscv.cpp ****             __asm__ volatile("ld t1, 8*14(fp)");
 612              		.loc 1 56 48 is_stmt 0
 613              	# 56 "src/riscv.cpp" 1
  57:src/riscv.cpp ****             __asm__ volatile("mv %0, t1" : "=r" (stack));
 614              		ld t1, 8*14(fp)
 615              	# 0 "" 2
 616              		.loc 1 57 13 is_stmt 1
  57:src/riscv.cpp ****             __asm__ volatile("mv %0, t1" : "=r" (stack));
 617              		.loc 1 57 57 is_stmt 0
 618              	# 57 "src/riscv.cpp" 1
 619              		mv a3, t1
 620              	# 0 "" 2
 621              	.LVL20:
  59:src/riscv.cpp ****             TCB::createThread(handle, start_routine, args, stack);
 622              		.loc 1 59 13 is_stmt 1
  59:src/riscv.cpp ****             TCB::createThread(handle, start_routine, args, stack);
 623              		.loc 1 59 30 is_stmt 0
 624              	#NO_APP
 625 01d8 97000000 		call	_ZN3TCB12createThreadEPPS_PFvPvES2_Pm@plt
 625      E7800000 
 626              	.LVL21:
 627              	.L9:
 628              	.LBE412:
 629              	.LBE423:
 630              	.LBE435:
GAS LISTING /tmp/ccbs3j1o.s 			page 21


 631              	.LBE448:
 156:src/riscv.cpp ****         w_sstatus(sstatus);
 632              		.loc 1 156 9 is_stmt 1
 156:src/riscv.cpp ****         w_sstatus(sstatus);
 633              		.loc 1 156 18 is_stmt 0
 634 01e0 833704F7 		ld	a5,-144(s0)
 635              	.LVL22:
 636              	.LBB449:
 637              	.LBB450:
 186:src/../h/riscv.hpp **** }
 638              		.loc 4 186 5 is_stmt 1
 186:src/../h/riscv.hpp **** }
 639              		.loc 4 186 77 is_stmt 0
 640              	#APP
 641              	# 186 "src/../h/riscv.hpp" 1
 642              		csrw sstatus, a5
 643              	# 0 "" 2
 644              	.LVL23:
 645              	#NO_APP
 646              	.LBE450:
 647              	.LBE449:
 157:src/riscv.cpp ****         w_sepc(sepc);
 648              		.loc 1 157 9 is_stmt 1
 157:src/riscv.cpp ****         w_sepc(sepc);
 649              		.loc 1 157 15 is_stmt 0
 650 01e8 833784F6 		ld	a5,-152(s0)
 651              	.LVL24:
 652              	.LBB451:
 653              	.LBB452:
 118:src/../h/riscv.hpp **** }
 654              		.loc 4 118 5 is_stmt 1
 118:src/../h/riscv.hpp **** }
 655              		.loc 4 118 65 is_stmt 0
 656              	#APP
 657              	# 118 "src/../h/riscv.hpp" 1
 658              		csrw sepc, a5
 659              	# 0 "" 2
 660              	.LVL25:
 661              	#NO_APP
 662              	.L7:
 663              	.LBE452:
 664              	.LBE451:
 665              	.LBE465:
 666              	.LBE482:
 667              		.loc 1 202 1
 668 01f0 83308109 		ld	ra,152(sp)
 669              		.cfi_remember_state
 670              		.cfi_restore 1
 671 01f4 03340109 		ld	s0,144(sp)
 672              		.cfi_restore 8
 673              		.cfi_def_cfa 2, 160
 674 01f8 83348108 		ld	s1,136(sp)
 675              		.cfi_restore 9
 676 01fc 03390108 		ld	s2,128(sp)
 677              		.cfi_restore 18
 678 0200 83398107 		ld	s3,120(sp)
 679              		.cfi_restore 19
GAS LISTING /tmp/ccbs3j1o.s 			page 22


 680 0204 033A0107 		ld	s4,112(sp)
 681              		.cfi_restore 20
 682 0208 1301010A 		addi	sp,sp,160
 683              		.cfi_def_cfa_offset 0
 684 020c 67800000 		jr	ra
 685              	.LVL26:
 686              	.L45:
 687              		.cfi_restore_state
 688              	.LBB483:
 689              	.LBB466:
 690              	.LBB453:
 691              	.LBB436:
 692              	.LBB424:
 693              	.LBB413:
  63:src/riscv.cpp ****             TCB::running->setFinished(true);
 694              		.loc 1 63 13 is_stmt 1
  63:src/riscv.cpp ****             TCB::running->setFinished(true);
 695              		.loc 1 63 38 is_stmt 0
 696 0210 97070000 		la	a5,_ZN3TCB7runningE
 696      83B70700 
 697              	.LVL27:
 698 0218 83B70700 		ld	a5,0(a5)
 699              	.LVL28:
 700              	.LBB396:
 701              	.LBB397:
 702              		.file 5 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** #include "../h/print.hpp"
  11:src/../h/tcb.hpp **** 
  12:src/../h/tcb.hpp **** // Thread Control Block
  13:src/../h/tcb.hpp **** class TCB
  14:src/../h/tcb.hpp **** {
  15:src/../h/tcb.hpp **** public:
  16:src/../h/tcb.hpp ****     ~TCB() {
  17:src/../h/tcb.hpp ****         delete[] stack;
  18:src/../h/tcb.hpp ****     }
  19:src/../h/tcb.hpp **** 
  20:src/../h/tcb.hpp ****     static void outputThreadBody(void*);
  21:src/../h/tcb.hpp **** 
  22:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  23:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
 703              		.loc 5 23 36 is_stmt 1
 704              		.loc 5 23 45 is_stmt 0
 705 021c 13071000 		li	a4,1
 706 0220 238AE702 		sb	a4,52(a5)
 707              	.LVL29:
 708              	.LBE397:
 709              	.LBE396:
  64:src/riscv.cpp ****             TCB::dispatch();
GAS LISTING /tmp/ccbs3j1o.s 			page 23


 710              		.loc 1 64 13 is_stmt 1
  64:src/riscv.cpp ****             TCB::dispatch();
 711              		.loc 1 64 26 is_stmt 0
 712 0224 97000000 		call	_ZN3TCB8dispatchEv@plt
 712      E7800000 
 713              	.LVL30:
  65:src/riscv.cpp ****             w_sstatus(sstatus);
 714              		.loc 1 65 13 is_stmt 1
  65:src/riscv.cpp ****             w_sstatus(sstatus);
 715              		.loc 1 65 22 is_stmt 0
 716 022c 833704F7 		ld	a5,-144(s0)
 717              	.LVL31:
 718              	.LBB398:
 719              	.LBB399:
 186:src/../h/riscv.hpp **** }
 720              		.loc 4 186 5 is_stmt 1
 186:src/../h/riscv.hpp **** }
 721              		.loc 4 186 77 is_stmt 0
 722              	#APP
 723              	# 186 "src/../h/riscv.hpp" 1
 724              		csrw sstatus, a5
 725              	# 0 "" 2
 726              	.LVL32:
 727              	#NO_APP
 728              	.LBE399:
 729              	.LBE398:
  66:src/riscv.cpp ****             w_sepc(sepc);
 730              		.loc 1 66 13 is_stmt 1
  66:src/riscv.cpp ****             w_sepc(sepc);
 731              		.loc 1 66 19 is_stmt 0
 732 0234 833784F6 		ld	a5,-152(s0)
 733              	.LVL33:
 734              	.LBB400:
 735              	.LBB401:
 118:src/../h/riscv.hpp **** }
 736              		.loc 4 118 5 is_stmt 1
 118:src/../h/riscv.hpp **** }
 737              		.loc 4 118 65 is_stmt 0
 738              	#APP
 739              	# 118 "src/../h/riscv.hpp" 1
 119:src/../h/riscv.hpp **** 
 740              		csrw sepc, a5
 741              	# 0 "" 2
 742              		.loc 4 119 1
 743              	#NO_APP
 744 023c 6FF05FFA 		j	.L9
 745              	.LVL34:
 746              	.L46:
 747              	.LBE401:
 748              	.LBE400:
 749              	.LBB402:
  69:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 750              		.loc 1 69 13 is_stmt 1
  69:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 751              		.loc 1 69 35 is_stmt 0
 752 0240 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 752      83B70700 
GAS LISTING /tmp/ccbs3j1o.s 			page 24


 753              	.LVL35:
 754 0248 23B00700 		sd	zero,0(a5)
  70:src/riscv.cpp ****             TCB::dispatch();
 755              		.loc 1 70 13 is_stmt 1
  70:src/riscv.cpp ****             TCB::dispatch();
 756              		.loc 1 70 26 is_stmt 0
 757 024c 97000000 		call	_ZN3TCB8dispatchEv@plt
 757      E7800000 
 758              	.LVL36:
  71:src/riscv.cpp ****             w_sstatus(sstatus);
 759              		.loc 1 71 13 is_stmt 1
  71:src/riscv.cpp ****             w_sstatus(sstatus);
 760              		.loc 1 71 22 is_stmt 0
 761 0254 833704F7 		ld	a5,-144(s0)
 762              	.LVL37:
 763              	.LBB383:
 764              	.LBB384:
 186:src/../h/riscv.hpp **** }
 765              		.loc 4 186 5 is_stmt 1
 186:src/../h/riscv.hpp **** }
 766              		.loc 4 186 77 is_stmt 0
 767              	#APP
 768              	# 186 "src/../h/riscv.hpp" 1
 769              		csrw sstatus, a5
 770              	# 0 "" 2
 771              	.LVL38:
 772              	#NO_APP
 773              	.LBE384:
 774              	.LBE383:
  72:src/riscv.cpp ****             w_sepc(sepc);
 775              		.loc 1 72 13 is_stmt 1
  72:src/riscv.cpp ****             w_sepc(sepc);
 776              		.loc 1 72 19 is_stmt 0
 777 025c 833784F6 		ld	a5,-152(s0)
 778              	.LVL39:
 779              	.LBB385:
 780              	.LBB386:
 118:src/../h/riscv.hpp **** }
 781              		.loc 4 118 5 is_stmt 1
 118:src/../h/riscv.hpp **** }
 782              		.loc 4 118 65 is_stmt 0
 783              	#APP
 784              	# 118 "src/../h/riscv.hpp" 1
 119:src/../h/riscv.hpp **** 
 785              		csrw sepc, a5
 786              	# 0 "" 2
 787              		.loc 4 119 1
 788              	#NO_APP
 789 0264 6FF0DFF7 		j	.L9
 790              	.LVL40:
 791              	.L47:
 792              	.LBE386:
 793              	.LBE385:
 794              	.LBB387:
 795              	.LBB374:
  75:src/riscv.cpp ****             sem_t* handle;
 796              		.loc 1 75 13 is_stmt 1
GAS LISTING /tmp/ccbs3j1o.s 			page 25


  76:src/riscv.cpp ****             unsigned init;
 797              		.loc 1 76 13
  77:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 798              		.loc 1 77 13
  77:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 799              		.loc 1 77 48 is_stmt 0
 800              	#APP
 801              	# 77 "src/riscv.cpp" 1
  78:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (handle));
 802              		ld t2, 8*11(fp)
 803              	# 0 "" 2
 804              		.loc 1 78 13 is_stmt 1
  78:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (handle));
 805              		.loc 1 78 58 is_stmt 0
 806              	# 78 "src/riscv.cpp" 1
 807              		mv a0, t2
 808              	# 0 "" 2
 809              	.LVL41:
  79:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*12(fp)");
 810              		.loc 1 79 13 is_stmt 1
  79:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*12(fp)");
 811              		.loc 1 79 48 is_stmt 0
 812              	# 79 "src/riscv.cpp" 1
  80:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (init));
 813              		ld t2, 8*12(fp)
 814              	# 0 "" 2
 815              		.loc 1 80 13 is_stmt 1
  80:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (init));
 816              		.loc 1 80 56 is_stmt 0
 817              	# 80 "src/riscv.cpp" 1
 818              		mv a1, t2
 819              	# 0 "" 2
 820              	.LVL42:
  81:src/riscv.cpp ****             _sem::createSemaphore(handle, init);
 821              		.loc 1 81 13 is_stmt 1
  81:src/riscv.cpp ****             _sem::createSemaphore(handle, init);
 822              		.loc 1 81 34 is_stmt 0
 823              	#NO_APP
 824 0278 9B850500 		sext.w	a1,a1
 825 027c 97000000 		call	_ZN4_sem15createSemaphoreEPPS_j@plt
 825      E7800000 
 826              	.LVL43:
 827              	.LBE374:
 828 0284 6FF0DFF5 		j	.L9
 829              	.LVL44:
 830              	.L48:
 831              	.LBB375:
 832              	.LBB366:
  85:src/riscv.cpp ****             sem_t* handle;
 833              		.loc 1 85 13 is_stmt 1
  86:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 834              		.loc 1 86 13
  86:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 835              		.loc 1 86 48 is_stmt 0
 836              	#APP
 837              	# 86 "src/riscv.cpp" 1
  87:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (handle));
GAS LISTING /tmp/ccbs3j1o.s 			page 26


 838              		ld t2, 8*11(fp)
 839              	# 0 "" 2
 840              		.loc 1 87 13 is_stmt 1
  87:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (handle));
 841              		.loc 1 87 58 is_stmt 0
 842              	# 87 "src/riscv.cpp" 1
 843              		mv a5, t2
 844              	# 0 "" 2
 845              	.LVL45:
 846              	#NO_APP
 847              	.LBE366:
 848 0290 6FF01FF5 		j	.L9
 849              	.LVL46:
 850              	.L49:
 851              	.LBB367:
 852              	.LBB359:
  91:src/riscv.cpp ****             sem_t id;
 853              		.loc 1 91 13 is_stmt 1
  92:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 854              		.loc 1 92 13
  92:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 855              		.loc 1 92 48 is_stmt 0
 856              	#APP
 857              	# 92 "src/riscv.cpp" 1
  93:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (id));
 858              		ld t2, 8*11(fp)
 859              	# 0 "" 2
 860              		.loc 1 93 13 is_stmt 1
  93:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (id));
 861              		.loc 1 93 54 is_stmt 0
 862              	# 93 "src/riscv.cpp" 1
 863              		mv a0, t2
 864              	# 0 "" 2
 865              	.LVL47:
  95:src/riscv.cpp ****             id->wait();
 866              		.loc 1 95 13 is_stmt 1
  95:src/riscv.cpp ****             id->wait();
 867              		.loc 1 95 21 is_stmt 0
 868              	#NO_APP
 869 029c 97000000 		call	_ZN4_sem4waitEv@plt
 869      E7800000 
 870              	.LVL48:
 871              	.LBE359:
 872 02a4 6FF0DFF3 		j	.L9
 873              	.LVL49:
 874              	.L50:
 875              	.LBB360:
 876              	.LBB353:
  99:src/riscv.cpp ****             sem_t id;
 877              		.loc 1 99 13 is_stmt 1
 100:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 878              		.loc 1 100 13
 100:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 879              		.loc 1 100 48 is_stmt 0
 880              	#APP
 881              	# 100 "src/riscv.cpp" 1
 101:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (id));
GAS LISTING /tmp/ccbs3j1o.s 			page 27


 882              		ld t2, 8*11(fp)
 883              	# 0 "" 2
 884              		.loc 1 101 13 is_stmt 1
 101:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (id));
 885              		.loc 1 101 54 is_stmt 0
 886              	# 101 "src/riscv.cpp" 1
 887              		mv a0, t2
 888              	# 0 "" 2
 889              	.LVL50:
 102:src/riscv.cpp ****             id->signal();
 890              		.loc 1 102 13 is_stmt 1
 102:src/riscv.cpp ****             id->signal();
 891              		.loc 1 102 23 is_stmt 0
 892              	#NO_APP
 893 02b0 97000000 		call	_ZN4_sem6signalEv@plt
 893      E7800000 
 894              	.LVL51:
 895              	.LBE353:
 896 02b8 6FF09FF2 		j	.L9
 897              	.LVL52:
 898              	.L51:
 899              	.LBB354:
 900              	.LBB321:
 107:src/riscv.cpp ****             time_t slice;
 901              		.loc 1 107 13 is_stmt 1
 108:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 902              		.loc 1 108 13
 108:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 903              		.loc 1 108 48 is_stmt 0
 904              	#APP
 905              	# 108 "src/riscv.cpp" 1
 109:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (slice));
 906              		ld t2, 8*11(fp)
 907              	# 0 "" 2
 908              		.loc 1 109 13 is_stmt 1
 109:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (slice));
 909              		.loc 1 109 57 is_stmt 0
 910              	# 109 "src/riscv.cpp" 1
 911              		mv s2, t2
 912              	# 0 "" 2
 913              	.LVL53:
 113:src/riscv.cpp ****             if(slice != 0) {
 914              		.loc 1 113 13 is_stmt 1
 915              	#NO_APP
 916 02c4 63180900 		bnez	s2,.L54
 917              	.LVL54:
 918              	.L18:
 118:src/riscv.cpp ****             TCB::dispatch();
 919              		.loc 1 118 13
 118:src/riscv.cpp ****             TCB::dispatch();
 920              		.loc 1 118 26 is_stmt 0
 921 02c8 97000000 		call	_ZN3TCB8dispatchEv@plt
 921      E7800000 
 922              	.LVL55:
 923              	.LBE321:
 924 02d0 6FF01FF1 		j	.L9
 925              	.LVL56:
GAS LISTING /tmp/ccbs3j1o.s 			page 28


 926              	.L54:
 927              	.LBB348:
 114:src/riscv.cpp ****                 TCB::running->setSleeping(true);
 928              		.loc 1 114 17 is_stmt 1
 114:src/riscv.cpp ****                 TCB::running->setSleeping(true);
 929              		.loc 1 114 42 is_stmt 0
 930 02d4 97070000 		la	a5,_ZN3TCB7runningE
 930      83B70700 
 931              	.LVL57:
 932 02dc 03BA0700 		ld	s4,0(a5)
 933              	.LVL58:
 934              	.LBB322:
 935              	.LBB323:
  24:src/../h/tcb.hpp **** 
  25:src/../h/tcb.hpp ****     bool isSleeping() const { return sleeping; }
  26:src/../h/tcb.hpp ****     void setSleeping(bool value) { sleeping = value; }
 936              		.loc 5 26 36 is_stmt 1
 937              		.loc 5 26 45 is_stmt 0
 938 02e0 93071000 		li	a5,1
 939 02e4 A30AFA02 		sb	a5,53(s4)
 940              	.LVL59:
 941              	.LBE323:
 942              	.LBE322:
 115:src/riscv.cpp ****                 Riscv::sleepingThreads.put(TCB::running, slice);
 943              		.loc 1 115 17 is_stmt 1
 944              	.LBB324:
 945              	.LBB325:
  27:src/../h/../h/sleepingThreadsList.h **** 
  28:src/../h/../h/sleepingThreadsList.h ****     SleepingThreadList(const SleepingThreadList&) = delete;
  29:src/../h/../h/sleepingThreadsList.h **** 
  30:src/../h/../h/sleepingThreadsList.h ****     SleepingThreadList &operator=(const SleepingThreadList&) = delete;
  31:src/../h/../h/sleepingThreadsList.h **** 
  32:src/../h/../h/sleepingThreadsList.h ****     void decFirst(){
  33:src/../h/../h/sleepingThreadsList.h ****         if (head != nullptr) {
  34:src/../h/../h/sleepingThreadsList.h ****             head->relativeTime -= 1;
  35:src/../h/../h/sleepingThreadsList.h ****         }
  36:src/../h/../h/sleepingThreadsList.h ****     }
  37:src/../h/../h/sleepingThreadsList.h ****     time_t peekFirstSlice()
  38:src/../h/../h/sleepingThreadsList.h ****     {
  39:src/../h/../h/sleepingThreadsList.h ****         if (!head) { return -1; }
  40:src/../h/../h/sleepingThreadsList.h ****         return head->relativeTime;
  41:src/../h/../h/sleepingThreadsList.h ****     }
  42:src/../h/../h/sleepingThreadsList.h **** 
  43:src/../h/../h/sleepingThreadsList.h ****     void removeFinishedThreads()
  44:src/../h/../h/sleepingThreadsList.h ****     {
  45:src/../h/../h/sleepingThreadsList.h ****         while (head != nullptr && head->relativeTime == 0){
  46:src/../h/../h/sleepingThreadsList.h ****             Elem *elem = head;
  47:src/../h/../h/sleepingThreadsList.h ****             head = head->next;
  48:src/../h/../h/sleepingThreadsList.h ****             if (!head) { tail = nullptr; }
  49:src/../h/../h/sleepingThreadsList.h ****             elem->data->setSleeping(false);
  50:src/../h/../h/sleepingThreadsList.h ****             Scheduler::put(elem->data);
  51:src/../h/../h/sleepingThreadsList.h ****             delete elem;
  52:src/../h/../h/sleepingThreadsList.h ****         }
  53:src/../h/../h/sleepingThreadsList.h ****     }
  54:src/../h/../h/sleepingThreadsList.h **** 
  55:src/../h/../h/sleepingThreadsList.h ****     void put(TCB* thread, time_t slice){
  56:src/../h/../h/sleepingThreadsList.h ****         if (head == nullptr) {
GAS LISTING /tmp/ccbs3j1o.s 			page 29


 946              		.loc 2 56 9
 947              	.LBB326:
 948              		.loc 2 56 13 is_stmt 0
 949 02e8 97040000 		ld	s1,.LANCHOR0
 949      83B40400 
 950              		.loc 2 56 9
 951 02f0 63860402 		beqz	s1,.L55
 952              	.LBB327:
  57:src/../h/../h/sleepingThreadsList.h ****             head = new Elem(thread, nullptr, slice);
  58:src/../h/../h/sleepingThreadsList.h ****             tail = head;
  59:src/../h/../h/sleepingThreadsList.h ****         }
  60:src/../h/../h/sleepingThreadsList.h ****         else {
  61:src/../h/../h/sleepingThreadsList.h ****             Elem* temp = head;
  62:src/../h/../h/sleepingThreadsList.h ****             Elem* prev = nullptr;
 953              		.loc 2 62 19
 954 02f4 93090000 		li	s3,0
 955              	.LVL60:
 956              	.L19:
  63:src/../h/../h/sleepingThreadsList.h ****             while (temp != tail && slice >= temp->relativeTime) {
 957              		.loc 2 63 13 is_stmt 1
 958              		.loc 2 63 33
 959              		.loc 2 63 28 is_stmt 0
 960 02f8 17070000 		ld	a4,.LANCHOR0+8
 960      03370700 
 961              		.loc 2 63 33
 962 0300 63049704 		beq	a4,s1,.L21
 963              		.loc 2 63 51
 964 0304 83B70401 		ld	a5,16(s1)
 965              		.loc 2 63 33
 966 0308 6360F904 		bgtu	a5,s2,.L21
  64:src/../h/../h/sleepingThreadsList.h ****                 slice -= temp->relativeTime;
 967              		.loc 2 64 17 is_stmt 1
 968              		.loc 2 64 23 is_stmt 0
 969 030c 3309F940 		sub	s2,s2,a5
 970              	.LVL61:
  65:src/../h/../h/sleepingThreadsList.h ****                 prev = temp;
 971              		.loc 2 65 17 is_stmt 1
  66:src/../h/../h/sleepingThreadsList.h ****                 temp = temp->next;
 972              		.loc 2 66 17
  65:src/../h/../h/sleepingThreadsList.h ****                 prev = temp;
 973              		.loc 2 65 22 is_stmt 0
 974 0310 93890400 		mv	s3,s1
 975              		.loc 2 66 22
 976 0314 83B48400 		ld	s1,8(s1)
 977              	.LVL62:
  63:src/../h/../h/sleepingThreadsList.h ****                 slice -= temp->relativeTime;
 978              		.loc 2 63 13
 979 0318 6FF01FFE 		j	.L19
 980              	.LVL63:
 981              	.L55:
 982              	.LBE327:
  57:src/../h/../h/sleepingThreadsList.h ****             tail = head;
 983              		.loc 2 57 13 is_stmt 1
  57:src/../h/../h/sleepingThreadsList.h ****             tail = head;
 984              		.loc 2 57 51 is_stmt 0
 985 031c 13058001 		li	a0,24
 986 0320 97000000 		call	_Znwm@plt
GAS LISTING /tmp/ccbs3j1o.s 			page 30


 986      E7800000 
 987              	.LVL64:
 988              	.LBB341:
 989              	.LBB342:
  20:src/../h/../h/sleepingThreadsList.h ****     };
 990              		.loc 2 20 109
 991 0328 23304501 		sd	s4,0(a0)
 992 032c 23340500 		sd	zero,8(a0)
 993 0330 23382501 		sd	s2,16(a0)
 994              	.LVL65:
 995              	.LBE342:
 996              	.LBE341:
  57:src/../h/../h/sleepingThreadsList.h ****             tail = head;
 997              		.loc 2 57 18
 998 0334 17070000 		lla	a4,.LANCHOR0
 998      13070700 
 999 033c 2330A700 		sd	a0,0(a4)
  58:src/../h/../h/sleepingThreadsList.h ****         }
 1000              		.loc 2 58 13 is_stmt 1
  58:src/../h/../h/sleepingThreadsList.h ****         }
 1001              		.loc 2 58 18 is_stmt 0
 1002 0340 2334A700 		sd	a0,8(a4)
 1003 0344 6FF05FF8 		j	.L18
 1004              	.LVL66:
 1005              	.L21:
 1006              	.LBB343:
  67:src/../h/../h/sleepingThreadsList.h ****             }
  68:src/../h/../h/sleepingThreadsList.h ****             if (temp == tail){
 1007              		.loc 2 68 13 is_stmt 1
 1008              	.LBB328:
 1009 0348 630A9702 		beq	a4,s1,.L56
 1010              	.LBB329:
  69:src/../h/../h/sleepingThreadsList.h ****                 if (slice >= tail->relativeTime){
  70:src/../h/../h/sleepingThreadsList.h ****                     Elem* novi = new Elem(thread, nullptr, slice - tail->relativeTime);
  71:src/../h/../h/sleepingThreadsList.h ****                     tail->next = novi;
  72:src/../h/../h/sleepingThreadsList.h ****                     tail = novi;
  73:src/../h/../h/sleepingThreadsList.h ****                 }
  74:src/../h/../h/sleepingThreadsList.h ****                 else {
  75:src/../h/../h/sleepingThreadsList.h ****                     Elem* novi = new Elem(thread, tail, slice);
  76:src/../h/../h/sleepingThreadsList.h ****                     if (prev != nullptr){
  77:src/../h/../h/sleepingThreadsList.h ****                         prev->next = novi;
  78:src/../h/../h/sleepingThreadsList.h ****                     }
  79:src/../h/../h/sleepingThreadsList.h ****                     else {
  80:src/../h/../h/sleepingThreadsList.h ****                         head = novi;
  81:src/../h/../h/sleepingThreadsList.h ****                     }
  82:src/../h/../h/sleepingThreadsList.h ****                     tail->relativeTime -= slice;
  83:src/../h/../h/sleepingThreadsList.h ****                 }
  84:src/../h/../h/sleepingThreadsList.h ****             }
  85:src/../h/../h/sleepingThreadsList.h ****             else {
  86:src/../h/../h/sleepingThreadsList.h ****                 Elem* novi = new Elem(thread, temp, slice);
 1011              		.loc 2 86 17
 1012              		.loc 2 86 58 is_stmt 0
 1013 034c 13058001 		li	a0,24
 1014 0350 97000000 		call	_Znwm@plt
 1014      E7800000 
 1015              	.LVL67:
 1016              	.LBB330:
GAS LISTING /tmp/ccbs3j1o.s 			page 31


 1017              	.LBB331:
  20:src/../h/../h/sleepingThreadsList.h ****     };
 1018              		.loc 2 20 109
 1019 0358 23304501 		sd	s4,0(a0)
 1020 035c 23349500 		sd	s1,8(a0)
 1021 0360 23382501 		sd	s2,16(a0)
 1022              	.LVL68:
 1023              	.LBE331:
 1024              	.LBE330:
  87:src/../h/../h/sleepingThreadsList.h ****                 if (prev) {
 1025              		.loc 2 87 17 is_stmt 1
 1026 0364 6382090A 		beqz	s3,.L26
  88:src/../h/../h/sleepingThreadsList.h ****                     prev->next = novi;
 1027              		.loc 2 88 21
 1028              		.loc 2 88 32 is_stmt 0
 1029 0368 23B4A900 		sd	a0,8(s3)
 1030              	.L27:
  89:src/../h/../h/sleepingThreadsList.h ****                 }
  90:src/../h/../h/sleepingThreadsList.h ****                 else {
  91:src/../h/../h/sleepingThreadsList.h ****                     head = novi;
  92:src/../h/../h/sleepingThreadsList.h ****                 }
  93:src/../h/../h/sleepingThreadsList.h ****                 temp->relativeTime -= slice;
 1031              		.loc 2 93 17 is_stmt 1
 1032              		.loc 2 93 36 is_stmt 0
 1033 036c 83B70401 		ld	a5,16(s1)
 1034 0370 33892741 		sub	s2,a5,s2
 1035              	.LVL69:
 1036 0374 23B82401 		sd	s2,16(s1)
 1037              	.LBE329:
 1038              	.LBE328:
 1039              	.LBE343:
 1040              	.LBE326:
  94:src/../h/../h/sleepingThreadsList.h ****             }
  95:src/../h/../h/sleepingThreadsList.h ****         }
  96:src/../h/../h/sleepingThreadsList.h ****     }
 1041              		.loc 2 96 5
 1042 0378 6FF01FF5 		j	.L18
 1043              	.LVL70:
 1044              	.L56:
 1045              	.LBE325:
 1046              	.LBE324:
 1047              	.LBE348:
 1048              	.LBE354:
 1049              	.LBE360:
 1050              	.LBE367:
 1051              	.LBE375:
 1052              	.LBE387:
 1053              	.LBE402:
 1054              	.LBE413:
 1055              	.LBE424:
 1056              	.LBE436:
 1057              	.LBE453:
 1058              	.LBE466:
 1059              	.LBE483:
  69:src/../h/../h/sleepingThreadsList.h ****                     Elem* novi = new Elem(thread, nullptr, slice - tail->relativeTime);
 1060              		.loc 2 69 17 is_stmt 1
 1061              	.LBB484:
GAS LISTING /tmp/ccbs3j1o.s 			page 32


 1062              	.LBB467:
 1063              	.LBB454:
 1064              	.LBB437:
 1065              	.LBB425:
 1066              	.LBB414:
 1067              	.LBB403:
 1068              	.LBB388:
 1069              	.LBB376:
 1070              	.LBB368:
 1071              	.LBB361:
 1072              	.LBB355:
 1073              	.LBB349:
 1074              	.LBB347:
 1075              	.LBB346:
 1076              	.LBB345:
 1077              	.LBB344:
 1078              	.LBB340:
 1079              	.LBB332:
  69:src/../h/../h/sleepingThreadsList.h ****                     Elem* novi = new Elem(thread, nullptr, slice - tail->relativeTime);
 1080              		.loc 2 69 36 is_stmt 0
 1081 037c 83370701 		ld	a5,16(a4)
  69:src/../h/../h/sleepingThreadsList.h ****                     Elem* novi = new Elem(thread, nullptr, slice - tail->relativeTime);
 1082              		.loc 2 69 17
 1083 0380 636EF902 		bltu	s2,a5,.L23
 1084              	.LBB333:
  70:src/../h/../h/sleepingThreadsList.h ****                     tail->next = novi;
 1085              		.loc 2 70 21 is_stmt 1
  70:src/../h/../h/sleepingThreadsList.h ****                     tail->next = novi;
 1086              		.loc 2 70 86 is_stmt 0
 1087 0384 13058001 		li	a0,24
 1088 0388 97000000 		call	_Znwm@plt
 1088      E7800000 
 1089              	.LVL71:
  70:src/../h/../h/sleepingThreadsList.h ****                     tail->next = novi;
 1090              		.loc 2 70 68
 1091 0390 97060000 		lla	a3,.LANCHOR0
 1091      93860600 
 1092 0398 03B68600 		ld	a2,8(a3)
  70:src/../h/../h/sleepingThreadsList.h ****                     tail->next = novi;
 1093              		.loc 2 70 74
 1094 039c 03370601 		ld	a4,16(a2)
  70:src/../h/../h/sleepingThreadsList.h ****                     tail->next = novi;
 1095              		.loc 2 70 86
 1096 03a0 3309E940 		sub	s2,s2,a4
 1097              	.LVL72:
 1098              	.LBB334:
 1099              	.LBB335:
  20:src/../h/../h/sleepingThreadsList.h ****     };
 1100              		.loc 2 20 109
 1101 03a4 23304501 		sd	s4,0(a0)
 1102 03a8 23340500 		sd	zero,8(a0)
 1103 03ac 23382501 		sd	s2,16(a0)
 1104              	.LVL73:
 1105              	.LBE335:
 1106              	.LBE334:
  71:src/../h/../h/sleepingThreadsList.h ****                     tail = novi;
 1107              		.loc 2 71 21 is_stmt 1
GAS LISTING /tmp/ccbs3j1o.s 			page 33


  71:src/../h/../h/sleepingThreadsList.h ****                     tail = novi;
 1108              		.loc 2 71 32 is_stmt 0
 1109 03b0 2334A600 		sd	a0,8(a2)
  72:src/../h/../h/sleepingThreadsList.h ****                 }
 1110              		.loc 2 72 21 is_stmt 1
  72:src/../h/../h/sleepingThreadsList.h ****                 }
 1111              		.loc 2 72 26 is_stmt 0
 1112 03b4 23B4A600 		sd	a0,8(a3)
 1113              	.LBE333:
 1114 03b8 6FF01FF1 		j	.L18
 1115              	.LVL74:
 1116              	.L23:
 1117              	.LBB336:
  75:src/../h/../h/sleepingThreadsList.h ****                     if (prev != nullptr){
 1118              		.loc 2 75 21 is_stmt 1
  75:src/../h/../h/sleepingThreadsList.h ****                     if (prev != nullptr){
 1119              		.loc 2 75 62 is_stmt 0
 1120 03bc 13058001 		li	a0,24
 1121 03c0 97000000 		call	_Znwm@plt
 1121      E7800000 
 1122              	.LVL75:
 1123              	.LBB337:
 1124              	.LBB338:
  20:src/../h/../h/sleepingThreadsList.h ****     };
 1125              		.loc 2 20 109
 1126 03c8 23304501 		sd	s4,0(a0)
 1127              	.LVL76:
 1128 03cc 17070000 		ld	a4,.LANCHOR0+8
 1128      03370700 
 1129 03d4 2334E500 		sd	a4,8(a0)
 1130 03d8 23382501 		sd	s2,16(a0)
 1131              	.LVL77:
 1132              	.LBE338:
 1133              	.LBE337:
  76:src/../h/../h/sleepingThreadsList.h ****                         prev->next = novi;
 1134              		.loc 2 76 21 is_stmt 1
 1135 03dc 63800902 		beqz	s3,.L24
  77:src/../h/../h/sleepingThreadsList.h ****                     }
 1136              		.loc 2 77 25
  77:src/../h/../h/sleepingThreadsList.h ****                     }
 1137              		.loc 2 77 36 is_stmt 0
 1138 03e0 23B4A900 		sd	a0,8(s3)
 1139              	.L25:
  82:src/../h/../h/sleepingThreadsList.h ****                 }
 1140              		.loc 2 82 21 is_stmt 1
 1141 03e4 17070000 		ld	a4,.LANCHOR0+8
 1141      03370700 
  82:src/../h/../h/sleepingThreadsList.h ****                 }
 1142              		.loc 2 82 40 is_stmt 0
 1143 03ec 83370701 		ld	a5,16(a4)
 1144 03f0 33892741 		sub	s2,a5,s2
 1145              	.LVL78:
 1146 03f4 23382701 		sd	s2,16(a4)
 1147 03f8 6FF01FED 		j	.L18
 1148              	.LVL79:
 1149              	.L24:
  80:src/../h/../h/sleepingThreadsList.h ****                     }
GAS LISTING /tmp/ccbs3j1o.s 			page 34


 1150              		.loc 2 80 25 is_stmt 1
  80:src/../h/../h/sleepingThreadsList.h ****                     }
 1151              		.loc 2 80 30 is_stmt 0
 1152 03fc 17070000 		sd	a0,.LANCHOR0,a4
 1152      2330A700 
 1153 0404 6FF01FFE 		j	.L25
 1154              	.LVL80:
 1155              	.L26:
 1156              	.LBE336:
 1157              	.LBE332:
 1158              	.LBB339:
  91:src/../h/../h/sleepingThreadsList.h ****                 }
 1159              		.loc 2 91 21 is_stmt 1
  91:src/../h/../h/sleepingThreadsList.h ****                 }
 1160              		.loc 2 91 26 is_stmt 0
 1161 0408 17070000 		sd	a0,.LANCHOR0,a4
 1161      2330A700 
 1162 0410 6FF0DFF5 		j	.L27
 1163              	.LVL81:
 1164              	.L52:
 1165              	.LBE339:
 1166              	.LBE340:
 1167              	.LBE344:
 1168              	.LBE345:
 1169              	.LBE346:
 1170              	.LBE347:
 1171              	.LBE349:
 1172              	.LBB350:
 1173              	.LBB314:
 122:src/riscv.cpp ****             char *ret;
 1174              		.loc 1 122 13 is_stmt 1
 124:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 1175              		.loc 1 124 13
 124:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 1176              		.loc 1 124 48 is_stmt 0
 1177              	#APP
 1178              	# 124 "src/riscv.cpp" 1
 125:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (ret));
 1179              		ld t2, 8*11(fp)
 1180              	# 0 "" 2
 1181              		.loc 1 125 13 is_stmt 1
 125:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (ret));
 1182              		.loc 1 125 55 is_stmt 0
 1183              	# 125 "src/riscv.cpp" 1
 1184              		mv s1, t2
 1185              	# 0 "" 2
 1186              	.LVL82:
 127:src/riscv.cpp ****             *ret = getCBuffer.getc();
 1187              		.loc 1 127 13 is_stmt 1
 127:src/riscv.cpp ****             *ret = getCBuffer.getc();
 1188              		.loc 1 127 35 is_stmt 0
 1189              	#NO_APP
 1190 041c 17050000 		lla	a0,.LANCHOR0+304
 1190      13050500 
 1191 0424 97000000 		call	_ZN6Buffer4getcEv@plt
 1191      E7800000 
 1192              	.LVL83:
GAS LISTING /tmp/ccbs3j1o.s 			page 35


 127:src/riscv.cpp ****             *ret = getCBuffer.getc();
 1193              		.loc 1 127 18
 1194 042c 2380A400 		sb	a0,0(s1)
 128:src/riscv.cpp ****             if (ret == nullptr){
 1195              		.loc 1 128 13 is_stmt 1
 1196 0430 638C0400 		beqz	s1,.L57
 1197              	.L29:
 136:src/riscv.cpp ****             w_sstatus(sstatus);
 1198              		.loc 1 136 13
 136:src/riscv.cpp ****             w_sstatus(sstatus);
 1199              		.loc 1 136 22 is_stmt 0
 1200 0434 833704F7 		ld	a5,-144(s0)
 1201              	.LVL84:
 1202              	.LBB315:
 1203              	.LBB316:
 186:src/../h/riscv.hpp **** }
 1204              		.loc 4 186 5 is_stmt 1
 186:src/../h/riscv.hpp **** }
 1205              		.loc 4 186 77 is_stmt 0
 1206              	#APP
 1207              	# 186 "src/../h/riscv.hpp" 1
 1208              		csrw sstatus, a5
 1209              	# 0 "" 2
 1210              	.LVL85:
 1211              	#NO_APP
 1212              	.LBE316:
 1213              	.LBE315:
 137:src/riscv.cpp ****             w_sepc(sepc);
 1214              		.loc 1 137 13 is_stmt 1
 137:src/riscv.cpp ****             w_sepc(sepc);
 1215              		.loc 1 137 19 is_stmt 0
 1216 043c 833784F6 		ld	a5,-152(s0)
 1217              	.LVL86:
 1218              	.LBB317:
 1219              	.LBB318:
 118:src/../h/riscv.hpp **** }
 1220              		.loc 4 118 5 is_stmt 1
 118:src/../h/riscv.hpp **** }
 1221              		.loc 4 118 65 is_stmt 0
 1222              	#APP
 1223              	# 118 "src/../h/riscv.hpp" 1
 119:src/../h/riscv.hpp **** 
 1224              		csrw sepc, a5
 1225              	# 0 "" 2
 1226              		.loc 4 119 1
 1227              	#NO_APP
 1228 0444 6FF0DFD9 		j	.L9
 1229              	.LVL87:
 1230              	.L57:
 1231              	.LBE318:
 1232              	.LBE317:
 129:src/riscv.cpp ****                 printString("pusenje");
 1233              		.loc 1 129 17 is_stmt 1
 129:src/riscv.cpp ****                 printString("pusenje");
 1234              		.loc 1 129 28 is_stmt 0
 1235 0448 17050000 		lla	a0,.LC0
 1235      13050500 
GAS LISTING /tmp/ccbs3j1o.s 			page 36


 1236 0450 97000000 		call	_Z11printStringPKc@plt
 1236      E7800000 
 1237              	.LVL88:
 1238 0458 6FF0DFFD 		j	.L29
 1239              	.LVL89:
 1240              	.L53:
 1241              	.LBE314:
 1242              	.LBB319:
 1243              	.LBB313:
 140:src/riscv.cpp ****             char c;
 1244              		.loc 1 140 13 is_stmt 1
 141:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 1245              		.loc 1 141 13
 141:src/riscv.cpp ****             __asm__ volatile("ld t2, 8*11(fp)");
 1246              		.loc 1 141 48 is_stmt 0
 1247              	#APP
 1248              	# 141 "src/riscv.cpp" 1
 142:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (c));
 1249              		ld t2, 8*11(fp)
 1250              	# 0 "" 2
 1251              		.loc 1 142 13 is_stmt 1
 142:src/riscv.cpp ****             __asm__ volatile("mv %0, t2" : "=r" (c));
 1252              		.loc 1 142 53 is_stmt 0
 1253              	# 142 "src/riscv.cpp" 1
 1254              		mv a1, t2
 1255              	# 0 "" 2
 1256              	.LVL90:
 144:src/riscv.cpp ****             putCBuffer.putc(c);
 1257              		.loc 1 144 13 is_stmt 1
 144:src/riscv.cpp ****             putCBuffer.putc(c);
 1258              		.loc 1 144 28 is_stmt 0
 1259              	#NO_APP
 1260 0464 93F5F50F 		andi	a1,a1,0xff
 1261 0468 17050000 		lla	a0,.LANCHOR0+16
 1261      13050500 
 1262 0470 97000000 		call	_ZN6Buffer4putcEc@plt
 1262      E7800000 
 1263              	.LVL91:
 1264              	.LBE313:
 1265 0478 6FF09FD6 		j	.L9
 1266              	.LVL92:
 1267              	.L43:
 1268              	.LBE319:
 1269              	.LBE350:
 1270              	.LBE355:
 1271              	.LBE361:
 1272              	.LBE368:
 1273              	.LBE376:
 1274              	.LBE388:
 1275              	.LBE403:
 1276              	.LBE414:
 1277              	.LBE425:
 1278              	.LBE437:
 1279              	.LBE454:
 1280              	.LBE467:
 1281              	.LBB468:
 1282              	.LBB259:
GAS LISTING /tmp/ccbs3j1o.s 			page 37


 163:src/riscv.cpp ****         time_t temp = Riscv::sleepingThreads.peekFirstSlice();
 1283              		.loc 1 163 9 is_stmt 1
 1284              	.LBB260:
 1285              	.LBB261:
  39:src/../h/../h/sleepingThreadsList.h ****         return head->relativeTime;
 1286              		.loc 2 39 9
  39:src/../h/../h/sleepingThreadsList.h ****         return head->relativeTime;
 1287              		.loc 2 39 14 is_stmt 0
 1288 047c 17070000 		ld	a4,.LANCHOR0
 1288      03370700 
 1289              	.LVL93:
  39:src/../h/../h/sleepingThreadsList.h ****         return head->relativeTime;
 1290              		.loc 2 39 9
 1291 0484 630E0700 		beqz	a4,.L33
  40:src/../h/../h/sleepingThreadsList.h ****     }
 1292              		.loc 2 40 9 is_stmt 1
  40:src/../h/../h/sleepingThreadsList.h ****     }
 1293              		.loc 2 40 22 is_stmt 0
 1294 0488 83370701 		ld	a5,16(a4)
 1295              	.LVL94:
 1296              	.LBE261:
 1297              	.LBE260:
 164:src/riscv.cpp ****         time_t t1 = -1;
 1298              		.loc 1 164 9 is_stmt 1
 166:src/riscv.cpp ****         if (temp != t1){
 1299              		.loc 1 166 9
 1300 048c 9306F0FF 		li	a3,-1
 1301              	.LVL95:
 1302 0490 6388D700 		beq	a5,a3,.L33
 167:src/riscv.cpp ****             Riscv::sleepingThreads.decFirst();
 1303              		.loc 1 167 13
 1304              	.LVL96:
 1305              	.LBB262:
 1306              	.LBB263:
  33:src/../h/../h/sleepingThreadsList.h ****             head->relativeTime -= 1;
 1307              		.loc 2 33 9
  34:src/../h/../h/sleepingThreadsList.h ****         }
 1308              		.loc 2 34 13
  34:src/../h/../h/sleepingThreadsList.h ****         }
 1309              		.loc 2 34 32 is_stmt 0
 1310 0494 9387F7FF 		addi	a5,a5,-1
 1311              	.LVL97:
 1312 0498 2338F700 		sd	a5,16(a4)
 1313              	.LVL98:
 1314              	.LBE263:
 1315              	.LBE262:
 168:src/riscv.cpp ****             if (Riscv::sleepingThreads.peekFirstSlice() == 0) {
 1316              		.loc 1 168 13 is_stmt 1
 1317              	.LBE259:
 1318              	.LBE468:
 1319              	.LBE484:
  39:src/../h/../h/sleepingThreadsList.h ****         return head->relativeTime;
 1320              		.loc 2 39 9
  40:src/../h/../h/sleepingThreadsList.h ****     }
 1321              		.loc 2 40 9
 1322              	.LBB485:
 1323              	.LBB469:
GAS LISTING /tmp/ccbs3j1o.s 			page 38


 1324              	.LBB284:
 168:src/riscv.cpp ****             if (Riscv::sleepingThreads.peekFirstSlice() == 0) {
 1325              		.loc 1 168 13 is_stmt 0
 1326 049c 638E0708 		beqz	a5,.L35
 1327              	.LVL99:
 1328              	.L33:
 172:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 1329              		.loc 1 172 9 is_stmt 1
 1330              	.LBB264:
 1331              	.LBB265:
 152:src/../h/riscv.hpp **** }
 1332              		.loc 4 152 5
 152:src/../h/riscv.hpp **** }
 1333              		.loc 4 152 64 is_stmt 0
 1334 04a0 93072000 		li	a5,2
 1335              	#APP
 1336              	# 152 "src/../h/riscv.hpp" 1
 1337              		csrc sip, a5
 1338              	# 0 "" 2
 1339              	.LVL100:
 1340              	#NO_APP
 1341              	.LBE265:
 1342              	.LBE264:
 173:src/riscv.cpp ****         TCB::timeSliceCounter++;
 1343              		.loc 1 173 9 is_stmt 1
 173:src/riscv.cpp ****         TCB::timeSliceCounter++;
 1344              		.loc 1 173 30 is_stmt 0
 1345 04a8 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 1345      03370700 
 1346 04b0 83370700 		ld	a5,0(a4)
 1347 04b4 93871700 		addi	a5,a5,1
 1348 04b8 2330F700 		sd	a5,0(a4)
 174:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 1349              		.loc 1 174 9 is_stmt 1
 1350              	.LBB266:
 174:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 1351              		.loc 1 174 64 is_stmt 0
 1352 04bc 17070000 		la	a4,_ZN3TCB7runningE
 1352      03370700 
 1353 04c4 03370700 		ld	a4,0(a4)
 1354              	.LVL101:
 1355              	.LBB267:
 1356              	.LBB268:
  27:src/../h/tcb.hpp **** 
  28:src/../h/tcb.hpp ****     bool isBlocked() const { return blocked; }
  29:src/../h/tcb.hpp ****     void setBlocked(bool value) { blocked = value; }
  30:src/../h/tcb.hpp **** 
  31:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
 1357              		.loc 5 31 35 is_stmt 1
 1358              		.loc 5 31 42 is_stmt 0
 1359 04c8 03378702 		ld	a4,40(a4)
 1360              	.LVL102:
 1361              	.LBE268:
 1362              	.LBE267:
 174:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 1363              		.loc 1 174 9
 1364 04cc E3E2E7D2 		bltu	a5,a4,.L7
GAS LISTING /tmp/ccbs3j1o.s 			page 39


 1365              	.LBB269:
 176:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 1366              		.loc 1 176 13 is_stmt 1
 1367              	.LBB270:
 1368              	.LBB271:
 111:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 1369              		.loc 4 111 5
 112:src/../h/riscv.hpp ****     return sepc;
 1370              		.loc 4 112 5
 112:src/../h/riscv.hpp ****     return sepc;
 1371              		.loc 4 112 64 is_stmt 0
 1372              	#APP
 1373              	# 112 "src/../h/riscv.hpp" 1
 1374              		csrr a5, sepc
 1375              	# 0 "" 2
 1376              	#NO_APP
 1377 04d4 2334F4FC 		sd	a5,-56(s0)
 113:src/../h/riscv.hpp **** }
 1378              		.loc 4 113 5 is_stmt 1
 113:src/../h/riscv.hpp **** }
 1379              		.loc 4 113 12 is_stmt 0
 1380 04d8 833784FC 		ld	a5,-56(s0)
 1381              	.LBE271:
 1382              	.LBE270:
 176:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 1383              		.loc 1 176 43
 1384 04dc 2334F4F8 		sd	a5,-120(s0)
 177:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 1385              		.loc 1 177 13 is_stmt 1
 1386              	.LBB272:
 1387              	.LBB273:
 179:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 1388              		.loc 4 179 5
 180:src/../h/riscv.hpp ****     return sstatus;
 1389              		.loc 4 180 5
 180:src/../h/riscv.hpp ****     return sstatus;
 1390              		.loc 4 180 76 is_stmt 0
 1391              	#APP
 1392              	# 180 "src/../h/riscv.hpp" 1
 1393              		csrr a5, sstatus
 1394              	# 0 "" 2
 1395              	#NO_APP
 1396 04e4 2330F4FC 		sd	a5,-64(s0)
 181:src/../h/riscv.hpp **** }
 1397              		.loc 4 181 5 is_stmt 1
 181:src/../h/riscv.hpp **** }
 1398              		.loc 4 181 12 is_stmt 0
 1399 04e8 833704FC 		ld	a5,-64(s0)
 1400              	.LBE273:
 1401              	.LBE272:
 177:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 1402              		.loc 1 177 49
 1403 04ec 2338F4F8 		sd	a5,-112(s0)
 178:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 1404              		.loc 1 178 13 is_stmt 1
 178:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 1405              		.loc 1 178 35 is_stmt 0
GAS LISTING /tmp/ccbs3j1o.s 			page 40


 1406 04f0 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 1406      83B70700 
 1407 04f8 23B00700 		sd	zero,0(a5)
 179:src/riscv.cpp ****             TCB::dispatch();
 1408              		.loc 1 179 13 is_stmt 1
 179:src/riscv.cpp ****             TCB::dispatch();
 1409              		.loc 1 179 26 is_stmt 0
 1410 04fc 97000000 		call	_ZN3TCB8dispatchEv@plt
 1410      E7800000 
 1411              	.LVL103:
 180:src/riscv.cpp ****             w_sstatus(sstatus);
 1412              		.loc 1 180 13 is_stmt 1
 180:src/riscv.cpp ****             w_sstatus(sstatus);
 1413              		.loc 1 180 22 is_stmt 0
 1414 0504 833704F9 		ld	a5,-112(s0)
 1415              	.LVL104:
 1416              	.LBB274:
 1417              	.LBB275:
 186:src/../h/riscv.hpp **** }
 1418              		.loc 4 186 5 is_stmt 1
 186:src/../h/riscv.hpp **** }
 1419              		.loc 4 186 77 is_stmt 0
 1420              	#APP
 1421              	# 186 "src/../h/riscv.hpp" 1
 1422              		csrw sstatus, a5
 1423              	# 0 "" 2
 1424              	.LVL105:
 1425              	#NO_APP
 1426              	.LBE275:
 1427              	.LBE274:
 181:src/riscv.cpp ****             w_sepc(sepc);
 1428              		.loc 1 181 13 is_stmt 1
 181:src/riscv.cpp ****             w_sepc(sepc);
 1429              		.loc 1 181 19 is_stmt 0
 1430 050c 833784F8 		ld	a5,-120(s0)
 1431              	.LVL106:
 1432              	.LBB276:
 1433              	.LBB277:
 118:src/../h/riscv.hpp **** }
 1434              		.loc 4 118 5 is_stmt 1
 118:src/../h/riscv.hpp **** }
 1435              		.loc 4 118 65 is_stmt 0
 1436              	#APP
 1437              	# 118 "src/../h/riscv.hpp" 1
 119:src/../h/riscv.hpp **** 
 1438              		csrw sepc, a5
 1439              	# 0 "" 2
 1440              		.loc 4 119 1
 1441              	#NO_APP
 1442 0514 6FF0DFCD 		j	.L7
 1443              	.LVL107:
 1444              	.L59:
 1445              	.LBE277:
 1446              	.LBE276:
 1447              	.LBE269:
 1448              	.LBE266:
 1449              	.LBB278:
GAS LISTING /tmp/ccbs3j1o.s 			page 41


 1450              	.LBB279:
 1451              	.LBB280:
  48:src/../h/../h/sleepingThreadsList.h ****             elem->data->setSleeping(false);
 1452              		.loc 2 48 26 is_stmt 1
  48:src/../h/../h/sleepingThreadsList.h ****             elem->data->setSleeping(false);
 1453              		.loc 2 48 31 is_stmt 0
 1454 0518 97070000 		sd	zero,.LANCHOR0+8,a5
 1454      23B00700 
 1455              	.L34:
  49:src/../h/../h/sleepingThreadsList.h ****             Scheduler::put(elem->data);
 1456              		.loc 2 49 13 is_stmt 1
  49:src/../h/../h/sleepingThreadsList.h ****             Scheduler::put(elem->data);
 1457              		.loc 2 49 19 is_stmt 0
 1458 0520 83B70400 		ld	a5,0(s1)
 1459              	.LVL108:
 1460              	.LBB281:
 1461              	.LBB282:
  26:src/../h/tcb.hpp **** 
 1462              		.loc 5 26 36 is_stmt 1
  26:src/../h/tcb.hpp **** 
 1463              		.loc 5 26 45 is_stmt 0
 1464 0524 A38A0702 		sb	zero,53(a5)
 1465              	.LVL109:
 1466              	.LBE282:
 1467              	.LBE281:
  50:src/../h/../h/sleepingThreadsList.h ****             delete elem;
 1468              		.loc 2 50 13 is_stmt 1
  50:src/../h/../h/sleepingThreadsList.h ****             delete elem;
 1469              		.loc 2 50 27 is_stmt 0
 1470 0528 03B50400 		ld	a0,0(s1)
 1471 052c 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 1471      E7800000 
 1472              	.LVL110:
  51:src/../h/../h/sleepingThreadsList.h ****         }
 1473              		.loc 2 51 13 is_stmt 1
  51:src/../h/../h/sleepingThreadsList.h ****         }
 1474              		.loc 2 51 24 is_stmt 0
 1475 0534 63960402 		bnez	s1,.L58
 1476              	.LVL111:
 1477              	.L35:
 1478              	.LBE280:
  45:src/../h/../h/sleepingThreadsList.h ****             Elem *elem = head;
 1479              		.loc 2 45 9 is_stmt 1
  45:src/../h/../h/sleepingThreadsList.h ****             Elem *elem = head;
 1480              		.loc 2 45 32
  45:src/../h/../h/sleepingThreadsList.h ****             Elem *elem = head;
 1481              		.loc 2 45 16 is_stmt 0
 1482 0538 97040000 		ld	s1,.LANCHOR0
 1482      83B40400 
  45:src/../h/../h/sleepingThreadsList.h ****             Elem *elem = head;
 1483              		.loc 2 45 32
 1484 0540 E38004F6 		beqz	s1,.L33
  45:src/../h/../h/sleepingThreadsList.h ****             Elem *elem = head;
 1485              		.loc 2 45 41
 1486 0544 83B70401 		ld	a5,16(s1)
  45:src/../h/../h/sleepingThreadsList.h ****             Elem *elem = head;
 1487              		.loc 2 45 32
GAS LISTING /tmp/ccbs3j1o.s 			page 42


 1488 0548 E39C07F4 		bnez	a5,.L33
 1489              	.LBB283:
  46:src/../h/../h/sleepingThreadsList.h ****             head = head->next;
 1490              		.loc 2 46 13 is_stmt 1
 1491              	.LVL112:
  47:src/../h/../h/sleepingThreadsList.h ****             if (!head) { tail = nullptr; }
 1492              		.loc 2 47 13
  47:src/../h/../h/sleepingThreadsList.h ****             if (!head) { tail = nullptr; }
 1493              		.loc 2 47 26 is_stmt 0
 1494 054c 83B78400 		ld	a5,8(s1)
  47:src/../h/../h/sleepingThreadsList.h ****             if (!head) { tail = nullptr; }
 1495              		.loc 2 47 18
 1496 0550 17070000 		sd	a5,.LANCHOR0,a4
 1496      2330F700 
  48:src/../h/../h/sleepingThreadsList.h ****             elem->data->setSleeping(false);
 1497              		.loc 2 48 13 is_stmt 1
 1498 0558 E39407FC 		bnez	a5,.L34
 1499 055c 6FF0DFFB 		j	.L59
 1500              	.L58:
  51:src/../h/../h/sleepingThreadsList.h ****         }
 1501              		.loc 2 51 20 is_stmt 0
 1502 0560 13850400 		mv	a0,s1
 1503 0564 97000000 		call	_ZdlPv@plt
 1503      E7800000 
 1504              	.LVL113:
 1505 056c 6FF0DFFC 		j	.L35
 1506              	.LVL114:
 1507              	.L38:
 1508              	.LBE283:
 1509              	.LBE279:
 1510              	.LBE278:
 1511              	.LBE284:
 1512              	.LBB285:
 1513              	.LBB258:
 1514              	.LBB252:
 192:src/riscv.cpp ****             char c = (*(char*)CONSOLE_RX_DATA);
 1515              		.loc 1 192 13 is_stmt 1
 192:src/riscv.cpp ****             char c = (*(char*)CONSOLE_RX_DATA);
 1516              		.loc 1 192 23 is_stmt 0
 1517 0570 97070000 		la	a5,CONSOLE_RX_DATA
 1517      83B70700 
 1518 0578 83B70700 		ld	a5,0(a5)
 1519              	.LVL115:
 193:src/riscv.cpp ****             getCBuffer.putc(c);
 1520              		.loc 1 193 13 is_stmt 1
 193:src/riscv.cpp ****             getCBuffer.putc(c);
 1521              		.loc 1 193 28 is_stmt 0
 1522 057c 83C50700 		lbu	a1,0(a5)
 1523 0580 17050000 		lla	a0,.LANCHOR0+304
 1523      13050500 
 1524 0588 97000000 		call	_ZN6Buffer4putcEc@plt
 1524      E7800000 
 1525              	.LVL116:
 1526              	.L39:
 1527              	.LBE252:
 188:src/riscv.cpp ****         while (*((char*)(CONSOLE_STATUS)) & CONSOLE_RX_STATUS_BIT) {
 1528              		.loc 1 188 9 is_stmt 1
GAS LISTING /tmp/ccbs3j1o.s 			page 43


 188:src/riscv.cpp ****         while (*((char*)(CONSOLE_STATUS)) & CONSOLE_RX_STATUS_BIT) {
 1529              		.loc 1 188 45
 188:src/riscv.cpp ****         while (*((char*)(CONSOLE_STATUS)) & CONSOLE_RX_STATUS_BIT) {
 1530              		.loc 1 188 16 is_stmt 0
 1531 0590 97070000 		la	a5,CONSOLE_STATUS
 1531      83B70700 
 1532 0598 83B70700 		ld	a5,0(a5)
 1533 059c 83C70700 		lbu	a5,0(a5)
 188:src/riscv.cpp ****         while (*((char*)(CONSOLE_STATUS)) & CONSOLE_RX_STATUS_BIT) {
 1534              		.loc 1 188 45
 1535 05a0 93F71700 		andi	a5,a5,1
 1536 05a4 63800704 		beqz	a5,.L37
 1537              	.LBB257:
 189:src/riscv.cpp ****             if (getCBuffer.itemAvailable == nullptr) {
 1538              		.loc 1 189 13 is_stmt 1
 189:src/riscv.cpp ****             if (getCBuffer.itemAvailable == nullptr) {
 1539              		.loc 1 189 28 is_stmt 0
 1540 05a8 97070000 		ld	a5,.LANCHOR0+304
 1540      83B70700 
 189:src/riscv.cpp ****             if (getCBuffer.itemAvailable == nullptr) {
 1541              		.loc 1 189 13
 1542 05b0 E39007FC 		bnez	a5,.L38
 190:src/riscv.cpp ****                 getCBuffer.itemAvailable = new _sem(0);
 1543              		.loc 1 190 17 is_stmt 1
 190:src/riscv.cpp ****                 getCBuffer.itemAvailable = new _sem(0);
 1544              		.loc 1 190 54 is_stmt 0
 1545 05b4 13050002 		li	a0,32
 1546 05b8 97000000 		call	_Znwm@plt
 1546      E7800000 
 1547              	.LVL117:
 1548              	.LBB253:
 1549              	.LBB254:
 1550              		.file 6 "src/../h/../h/_sem.h"
   1:src/../h/../h/_sem.h **** //
   2:src/../h/../h/_sem.h **** // Created by os on 9/7/22.
   3:src/../h/../h/_sem.h **** //
   4:src/../h/../h/_sem.h **** 
   5:src/../h/../h/_sem.h **** #ifndef PROJECT_BASE_V1_1__SEM_H
   6:src/../h/../h/_sem.h **** #define PROJECT_BASE_V1_1__SEM_H
   7:src/../h/../h/_sem.h **** 
   8:src/../h/../h/_sem.h **** #include "tcb.hpp"
   9:src/../h/../h/_sem.h **** 
  10:src/../h/../h/_sem.h **** class _sem
  11:src/../h/../h/_sem.h **** {
  12:src/../h/../h/_sem.h **** public:
  13:src/../h/../h/_sem.h ****     explicit _sem (int initValue=0) : closed(false), val(initValue) {
 1551              		.loc 6 13 67
 1552 05c0 23000500 		sb	zero,0(a0)
 1553 05c4 23220500 		sw	zero,4(a0)
 1554 05c8 23240500 		sw	zero,8(a0)
 1555 05cc 23260500 		sw	zero,12(a0)
 1556              	.LVL118:
 1557              	.LBB255:
 1558              	.LBB256:
 1559              		.file 7 "src/../h/list.hpp"
   1:src/../h/list.hpp **** //
   2:src/../h/list.hpp **** // Created by marko on 20.4.22..
GAS LISTING /tmp/ccbs3j1o.s 			page 44


   3:src/../h/list.hpp **** //
   4:src/../h/list.hpp **** 
   5:src/../h/list.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_LIST_HPP
   6:src/../h/list.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_LIST_HPP
   7:src/../h/list.hpp **** 
   8:src/../h/list.hpp **** #include "../h/print.hpp"
   9:src/../h/list.hpp **** 
  10:src/../h/list.hpp **** template<typename T>
  11:src/../h/list.hpp **** class List
  12:src/../h/list.hpp **** {
  13:src/../h/list.hpp **** private:
  14:src/../h/list.hpp ****     struct Elem
  15:src/../h/list.hpp ****     {
  16:src/../h/list.hpp ****         T *data;
  17:src/../h/list.hpp ****         Elem *next;
  18:src/../h/list.hpp **** 
  19:src/../h/list.hpp ****         Elem(T *data, Elem *next) : data(data), next(next) {}
  20:src/../h/list.hpp ****     };
  21:src/../h/list.hpp **** 
  22:src/../h/list.hpp ****     Elem *head, *tail;
  23:src/../h/list.hpp **** 
  24:src/../h/list.hpp **** public:
  25:src/../h/list.hpp ****     List() : head(0), tail(0) {}
 1560              		.loc 7 25 29
 1561 05d0 23380500 		sd	zero,16(a0)
 1562 05d4 233C0500 		sd	zero,24(a0)
 1563              	.LVL119:
 1564              	.LBE256:
 1565              	.LBE255:
 1566              	.LBE254:
 1567              	.LBE253:
 190:src/riscv.cpp ****                 getCBuffer.itemAvailable = new _sem(0);
 1568              		.loc 1 190 42
 1569 05d8 97070000 		sd	a0,.LANCHOR0+304,a5
 1569      23B0A700 
 1570 05e0 6FF01FF9 		j	.L38
 1571              	.L37:
 1572              	.LBE257:
 196:src/riscv.cpp ****         plic_complete(irq);
 1573              		.loc 1 196 9 is_stmt 1
 196:src/riscv.cpp ****         plic_complete(irq);
 1574              		.loc 1 196 22 is_stmt 0
 1575 05e4 13850400 		mv	a0,s1
 1576 05e8 97000000 		call	plic_complete@plt
 1576      E7800000 
 1577              	.LVL120:
 1578              	.LBE258:
 1579              	.LBE285:
 1580              	.LBE469:
 1581              	.LBE485:
 1582              		.loc 1 202 1
 1583 05f0 6FF01FC0 		j	.L7
 1584              		.cfi_endproc
 1585              	.LFE58:
 1587              		.align	2
 1589              	_GLOBAL__sub_I__ZN5Riscv15sleepingThreadsE:
 1590              	.LFB63:
GAS LISTING /tmp/ccbs3j1o.s 			page 45


 1591              		.loc 1 202 1 is_stmt 1
 1592              		.cfi_startproc
 1593 05f4 130101FF 		addi	sp,sp,-16
 1594              		.cfi_def_cfa_offset 16
 1595 05f8 23341100 		sd	ra,8(sp)
 1596 05fc 23308100 		sd	s0,0(sp)
 1597              		.cfi_offset 1, -8
 1598              		.cfi_offset 8, -16
 1599 0600 13040101 		addi	s0,sp,16
 1600              		.cfi_def_cfa 8, 0
 1601              		.loc 1 202 1 is_stmt 0
 1602 0604 B7050100 		li	a1,65536
 1603 0608 9385F5FF 		addi	a1,a1,-1
 1604 060c 13051000 		li	a0,1
 1605 0610 97000000 		call	_Z41__static_initialization_and_destruction_0ii
 1605      E7800000 
 1606              	.LVL121:
 1607 0618 83308100 		ld	ra,8(sp)
 1608              		.cfi_restore 1
 1609 061c 03340100 		ld	s0,0(sp)
 1610              		.cfi_restore 8
 1611              		.cfi_def_cfa 2, 16
 1612 0620 13010101 		addi	sp,sp,16
 1613              		.cfi_def_cfa_offset 0
 1614 0624 67800000 		jr	ra
 1615              		.cfi_endproc
 1616              	.LFE63:
 1618              		.section	.init_array,"aw"
 1619              		.align	3
 1620 0000 00000000 		.dword	_GLOBAL__sub_I__ZN5Riscv15sleepingThreadsE
 1620      00000000 
 1621              		.globl	_ZN5Riscv10getCBufferE
 1622              		.globl	_ZN5Riscv10putCBufferE
 1623              		.globl	_ZN5Riscv15sleepingThreadsE
 1624              		.bss
 1625              		.align	3
 1626              		.set	.LANCHOR0,. + 0
 1629              	_ZN5Riscv15sleepingThreadsE:
 1630 0000 00000000 		.zero	16
 1630      00000000 
 1630      00000000 
 1630      00000000 
 1633              	_ZN5Riscv10putCBufferE:
 1634 0010 00000000 		.zero	288
 1634      00000000 
 1634      00000000 
 1634      00000000 
 1634      00000000 
 1637              	_ZN5Riscv10getCBufferE:
 1638 0130 00000000 		.zero	288
 1638      00000000 
 1638      00000000 
 1638      00000000 
 1638      00000000 
 1639              		.text
 1640              	.Letext0:
 1641              		.file 8 "src/../h/../lib/hw.h"
GAS LISTING /tmp/ccbs3j1o.s 			page 46


 1642              		.file 9 "src/../h/scheduler.hpp"
 1643              		.file 10 "src/../h/../h/syscall_c.h"
 1644              		.file 11 "src/../h/codes.h"
 1645              		.file 12 "src/../h/../h/print.hpp"
GAS LISTING /tmp/ccbs3j1o.s 			page 47


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccbs3j1o.s:8      .text:0000000000000000 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccbs3j1o.s:12     .text:0000000000000000 .L0 
     /tmp/ccbs3j1o.s:14     .text:0000000000000000 .L0 
     /tmp/ccbs3j1o.s:15     .text:0000000000000004 .L0 
     /tmp/ccbs3j1o.s:17     .text:0000000000000008 .L0 
     /tmp/ccbs3j1o.s:19     .text:000000000000000c .L0 
     /tmp/ccbs3j1o.s:21     .text:000000000000000c .L0 
     /tmp/ccbs3j1o.s:25     .text:0000000000000018 .L0 
     /tmp/ccbs3j1o.s:26     .text:0000000000000018 .L0 
     /tmp/ccbs3j1o.s:27     .text:0000000000000018 .L0 
     /tmp/ccbs3j1o.s:29     .text:000000000000001c .L0 
     /tmp/ccbs3j1o.s:32     .text:0000000000000020 .L0 
     /tmp/ccbs3j1o.s:34     .text:0000000000000020 .L0 
     /tmp/ccbs3j1o.s:43     .text:000000000000002c .L0 
     /tmp/ccbs3j1o.s:55     .text:000000000000003c .L0 
     /tmp/ccbs3j1o.s:73     .text:0000000000000054 .L0 
     /tmp/ccbs3j1o.s:74     .text:0000000000000058 .L0 
     /tmp/ccbs3j1o.s:80     .text:0000000000000058 _ZN5Riscv10popSppSpieEv
     /tmp/ccbs3j1o.s:83     .text:0000000000000058 .L0 
     /tmp/ccbs3j1o.s:84     .text:0000000000000058 .L0 
     /tmp/ccbs3j1o.s:85     .text:000000000000005c .L0 
     /tmp/ccbs3j1o.s:87     .text:0000000000000060 .L0 
     /tmp/ccbs3j1o.s:89     .text:0000000000000064 .L0 
     /tmp/ccbs3j1o.s:91     .text:0000000000000064 .L0 
       src/riscv.cpp:18     .text:0000000000000064 .L0 
     /tmp/ccbs3j1o.s:97     .text:0000000000000068 .L0 
       src/riscv.cpp:19     .text:0000000000000068 .L0 
     /tmp/ccbs3j1o.s:103    .text:000000000000006c .L0 
     /tmp/ccbs3j1o.s:104    .text:0000000000000070 .L0 
     /tmp/ccbs3j1o.s:105    .text:0000000000000070 .L0 
     /tmp/ccbs3j1o.s:107    .text:0000000000000074 .L0 
     /tmp/ccbs3j1o.s:109    .text:0000000000000078 .L0 
     /tmp/ccbs3j1o.s:120    .text:0000000000000078 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccbs3j1o.s:123    .text:0000000000000078 .L0 
     /tmp/ccbs3j1o.s:124    .text:0000000000000078 .L0 
     /tmp/ccbs3j1o.s:125    .text:000000000000007c .L0 
     /tmp/ccbs3j1o.s:132    .text:0000000000000094 .L0 
     /tmp/ccbs3j1o.s:133    .text:0000000000000094 .L0 
     /tmp/ccbs3j1o.s:134    .text:0000000000000094 .L0 
     /tmp/ccbs3j1o.s:135    .text:0000000000000094 .L0 
     /tmp/ccbs3j1o.s:136    .text:0000000000000094 .L0 
     /tmp/ccbs3j1o.s:137    .text:0000000000000094 .L0 
     /tmp/ccbs3j1o.s:139    .text:0000000000000098 .L0 
     /tmp/ccbs3j1o.s:144    .text:0000000000000098 .L0 
     /tmp/ccbs3j1o.s:145    .text:0000000000000098 .L0 
     /tmp/ccbs3j1o.s:146    .text:0000000000000098 .L0 
  src/../h/riscv.hpp:100    .text:0000000000000098 .L0 
     /tmp/ccbs3j1o.s:154    .text:00000000000000a0 .L0 
     /tmp/ccbs3j1o.s:155    .text:00000000000000a0 .L0 
     /tmp/ccbs3j1o.s:161    .text:00000000000000a4 .L0 
     /tmp/ccbs3j1o.s:162    .text:00000000000000a4 .L0 
     /tmp/ccbs3j1o.s:164    .text:00000000000000a8 .L0 
     /tmp/ccbs3j1o.s:170    .text:00000000000000b0 .L0 
     /tmp/ccbs3j1o.s:180    .text:00000000000000c0 .L0 
     /tmp/ccbs3j1o.s:186    .text:00000000000000d0 .L0 
GAS LISTING /tmp/ccbs3j1o.s 			page 48


     /tmp/ccbs3j1o.s:187    .text:00000000000000d0 .L0 
     /tmp/ccbs3j1o.s:201    .text:00000000000000e0 .L0 
     /tmp/ccbs3j1o.s:202    .text:00000000000000e0 .L0 
     /tmp/ccbs3j1o.s:203    .text:00000000000000e0 .L0 
  src/../h/riscv.hpp:112    .text:00000000000000e0 .L0 
     /tmp/ccbs3j1o.s:211    .text:00000000000000e8 .L0 
     /tmp/ccbs3j1o.s:212    .text:00000000000000e8 .L0 
     /tmp/ccbs3j1o.s:216    .text:00000000000000ec .L0 
     /tmp/ccbs3j1o.s:218    .text:00000000000000f0 .L0 
     /tmp/ccbs3j1o.s:222    .text:00000000000000f4 .L0 
     /tmp/ccbs3j1o.s:223    .text:00000000000000f4 .L0 
     /tmp/ccbs3j1o.s:224    .text:00000000000000f4 .L0 
  src/../h/riscv.hpp:180    .text:00000000000000f4 .L0 
     /tmp/ccbs3j1o.s:232    .text:00000000000000fc .L0 
     /tmp/ccbs3j1o.s:233    .text:00000000000000fc .L0 
     /tmp/ccbs3j1o.s:237    .text:0000000000000100 .L0 
     /tmp/ccbs3j1o.s:239    .text:0000000000000104 .L0 
     /tmp/ccbs3j1o.s:240    .text:0000000000000104 .L0 
       src/riscv.cpp:32     .text:0000000000000104 .L0 
     /tmp/ccbs3j1o.s:246    .text:0000000000000108 .L0 
       src/riscv.cpp:33     .text:0000000000000108 .L0 
     /tmp/ccbs3j1o.s:254    .text:000000000000010c .L0 
     /tmp/ccbs3j1o.s:265    .text:0000000000000114 .L0 
     /tmp/ccbs3j1o.s:277    .text:000000000000011c .L0 
     /tmp/ccbs3j1o.s:291    .text:0000000000000124 .L0 
     /tmp/ccbs3j1o.s:307    .text:000000000000012c .L0 
     /tmp/ccbs3j1o.s:325    .text:0000000000000134 .L0 
     /tmp/ccbs3j1o.s:345    .text:000000000000013c .L0 
     /tmp/ccbs3j1o.s:367    .text:0000000000000144 .L0 
     /tmp/ccbs3j1o.s:391    .text:000000000000014c .L0 
     /tmp/ccbs3j1o.s:417    .text:0000000000000154 .L0 
     /tmp/ccbs3j1o.s:445    .text:000000000000015c .L0 
     /tmp/ccbs3j1o.s:475    .text:0000000000000164 .L0 
     /tmp/ccbs3j1o.s:481    .text:000000000000016c .L0 
     /tmp/ccbs3j1o.s:482    .text:000000000000016c .L0 
     /tmp/ccbs3j1o.s:483    .text:000000000000016c .L0 
  src/../h/riscv.hpp:112    .text:000000000000016c .L0 
     /tmp/ccbs3j1o.s:492    .text:0000000000000174 .L0 
     /tmp/ccbs3j1o.s:493    .text:0000000000000174 .L0 
     /tmp/ccbs3j1o.s:497    .text:0000000000000178 .L0 
     /tmp/ccbs3j1o.s:499    .text:000000000000017c .L0 
     /tmp/ccbs3j1o.s:503    .text:0000000000000180 .L0 
     /tmp/ccbs3j1o.s:504    .text:0000000000000180 .L0 
     /tmp/ccbs3j1o.s:505    .text:0000000000000180 .L0 
  src/../h/riscv.hpp:180    .text:0000000000000180 .L0 
     /tmp/ccbs3j1o.s:513    .text:0000000000000188 .L0 
     /tmp/ccbs3j1o.s:514    .text:0000000000000188 .L0 
     /tmp/ccbs3j1o.s:518    .text:000000000000018c .L0 
     /tmp/ccbs3j1o.s:520    .text:0000000000000190 .L0 
     /tmp/ccbs3j1o.s:521    .text:0000000000000190 .L0 
     /tmp/ccbs3j1o.s:524    .text:000000000000019c .L0 
     /tmp/ccbs3j1o.s:525    .text:000000000000019c .L0 
     /tmp/ccbs3j1o.s:528    .text:00000000000001a4 .L0 
     /tmp/ccbs3j1o.s:529    .text:00000000000001a4 .L0 
     /tmp/ccbs3j1o.s:534    .text:00000000000001a8 .L0 
  src/../h/riscv.hpp:186    .text:00000000000001a8 .L0 
     /tmp/ccbs3j1o.s:544    .text:00000000000001ac .L0 
GAS LISTING /tmp/ccbs3j1o.s 			page 49


     /tmp/ccbs3j1o.s:545    .text:00000000000001ac .L0 
     /tmp/ccbs3j1o.s:550    .text:00000000000001b0 .L0 
  src/../h/riscv.hpp:118    .text:00000000000001b0 .L0 
     /tmp/ccbs3j1o.s:557    .text:00000000000001b4 .L0 
     /tmp/ccbs3j1o.s:574    .text:00000000000001b8 .L0 
     /tmp/ccbs3j1o.s:575    .text:00000000000001b8 .L0 
     /tmp/ccbs3j1o.s:576    .text:00000000000001b8 .L0 
     /tmp/ccbs3j1o.s:577    .text:00000000000001b8 .L0 
     /tmp/ccbs3j1o.s:578    .text:00000000000001b8 .L0 
       src/riscv.cpp:47     .text:00000000000001b8 .L0 
     /tmp/ccbs3j1o.s:584    .text:00000000000001bc .L0 
       src/riscv.cpp:48     .text:00000000000001bc .L0 
     /tmp/ccbs3j1o.s:590    .text:00000000000001c0 .L0 
       src/riscv.cpp:50     .text:00000000000001c0 .L0 
     /tmp/ccbs3j1o.s:595    .text:00000000000001c4 .L0 
       src/riscv.cpp:51     .text:00000000000001c4 .L0 
     /tmp/ccbs3j1o.s:601    .text:00000000000001c8 .L0 
       src/riscv.cpp:53     .text:00000000000001c8 .L0 
     /tmp/ccbs3j1o.s:606    .text:00000000000001cc .L0 
       src/riscv.cpp:54     .text:00000000000001cc .L0 
     /tmp/ccbs3j1o.s:612    .text:00000000000001d0 .L0 
       src/riscv.cpp:56     .text:00000000000001d0 .L0 
     /tmp/ccbs3j1o.s:617    .text:00000000000001d4 .L0 
       src/riscv.cpp:57     .text:00000000000001d4 .L0 
     /tmp/ccbs3j1o.s:623    .text:00000000000001d8 .L0 
     /tmp/ccbs3j1o.s:625    .text:00000000000001d8 .L0 
     /tmp/ccbs3j1o.s:633    .text:00000000000001e0 .L0 
     /tmp/ccbs3j1o.s:634    .text:00000000000001e0 .L0 
     /tmp/ccbs3j1o.s:639    .text:00000000000001e4 .L0 
  src/../h/riscv.hpp:186    .text:00000000000001e4 .L0 
     /tmp/ccbs3j1o.s:649    .text:00000000000001e8 .L0 
     /tmp/ccbs3j1o.s:650    .text:00000000000001e8 .L0 
     /tmp/ccbs3j1o.s:655    .text:00000000000001ec .L0 
  src/../h/riscv.hpp:118    .text:00000000000001ec .L0 
     /tmp/ccbs3j1o.s:668    .text:00000000000001f0 .L0 
     /tmp/ccbs3j1o.s:669    .text:00000000000001f4 .L0 
     /tmp/ccbs3j1o.s:670    .text:00000000000001f4 .L0 
     /tmp/ccbs3j1o.s:672    .text:00000000000001f8 .L0 
     /tmp/ccbs3j1o.s:673    .text:00000000000001f8 .L0 
     /tmp/ccbs3j1o.s:675    .text:00000000000001fc .L0 
     /tmp/ccbs3j1o.s:677    .text:0000000000000200 .L0 
     /tmp/ccbs3j1o.s:679    .text:0000000000000204 .L0 
     /tmp/ccbs3j1o.s:681    .text:0000000000000208 .L0 
     /tmp/ccbs3j1o.s:683    .text:000000000000020c .L0 
     /tmp/ccbs3j1o.s:687    .text:0000000000000210 .L0 
     /tmp/ccbs3j1o.s:695    .text:0000000000000210 .L0 
     /tmp/ccbs3j1o.s:696    .text:0000000000000210 .L0 
     /tmp/ccbs3j1o.s:704    .text:000000000000021c .L0 
     /tmp/ccbs3j1o.s:705    .text:000000000000021c .L0 
     /tmp/ccbs3j1o.s:711    .text:0000000000000224 .L0 
     /tmp/ccbs3j1o.s:712    .text:0000000000000224 .L0 
     /tmp/ccbs3j1o.s:715    .text:000000000000022c .L0 
     /tmp/ccbs3j1o.s:716    .text:000000000000022c .L0 
     /tmp/ccbs3j1o.s:721    .text:0000000000000230 .L0 
  src/../h/riscv.hpp:186    .text:0000000000000230 .L0 
     /tmp/ccbs3j1o.s:731    .text:0000000000000234 .L0 
     /tmp/ccbs3j1o.s:732    .text:0000000000000234 .L0 
GAS LISTING /tmp/ccbs3j1o.s 			page 50


     /tmp/ccbs3j1o.s:737    .text:0000000000000238 .L0 
  src/../h/riscv.hpp:118    .text:0000000000000238 .L0 
     /tmp/ccbs3j1o.s:744    .text:000000000000023c .L0 
     /tmp/ccbs3j1o.s:751    .text:0000000000000240 .L0 
     /tmp/ccbs3j1o.s:752    .text:0000000000000240 .L0 
     /tmp/ccbs3j1o.s:756    .text:000000000000024c .L0 
     /tmp/ccbs3j1o.s:757    .text:000000000000024c .L0 
     /tmp/ccbs3j1o.s:760    .text:0000000000000254 .L0 
     /tmp/ccbs3j1o.s:761    .text:0000000000000254 .L0 
     /tmp/ccbs3j1o.s:766    .text:0000000000000258 .L0 
  src/../h/riscv.hpp:186    .text:0000000000000258 .L0 
     /tmp/ccbs3j1o.s:776    .text:000000000000025c .L0 
     /tmp/ccbs3j1o.s:777    .text:000000000000025c .L0 
     /tmp/ccbs3j1o.s:782    .text:0000000000000260 .L0 
  src/../h/riscv.hpp:118    .text:0000000000000260 .L0 
     /tmp/ccbs3j1o.s:789    .text:0000000000000264 .L0 
     /tmp/ccbs3j1o.s:797    .text:0000000000000268 .L0 
     /tmp/ccbs3j1o.s:798    .text:0000000000000268 .L0 
     /tmp/ccbs3j1o.s:799    .text:0000000000000268 .L0 
       src/riscv.cpp:77     .text:0000000000000268 .L0 
     /tmp/ccbs3j1o.s:805    .text:000000000000026c .L0 
       src/riscv.cpp:78     .text:000000000000026c .L0 
     /tmp/ccbs3j1o.s:811    .text:0000000000000270 .L0 
       src/riscv.cpp:79     .text:0000000000000270 .L0 
     /tmp/ccbs3j1o.s:816    .text:0000000000000274 .L0 
       src/riscv.cpp:80     .text:0000000000000274 .L0 
     /tmp/ccbs3j1o.s:822    .text:0000000000000278 .L0 
     /tmp/ccbs3j1o.s:824    .text:0000000000000278 .L0 
     /tmp/ccbs3j1o.s:834    .text:0000000000000288 .L0 
     /tmp/ccbs3j1o.s:835    .text:0000000000000288 .L0 
       src/riscv.cpp:86     .text:0000000000000288 .L0 
     /tmp/ccbs3j1o.s:841    .text:000000000000028c .L0 
       src/riscv.cpp:87     .text:000000000000028c .L0 
     /tmp/ccbs3j1o.s:854    .text:0000000000000294 .L0 
     /tmp/ccbs3j1o.s:855    .text:0000000000000294 .L0 
       src/riscv.cpp:92     .text:0000000000000294 .L0 
     /tmp/ccbs3j1o.s:861    .text:0000000000000298 .L0 
       src/riscv.cpp:93     .text:0000000000000298 .L0 
     /tmp/ccbs3j1o.s:867    .text:000000000000029c .L0 
     /tmp/ccbs3j1o.s:869    .text:000000000000029c .L0 
     /tmp/ccbs3j1o.s:878    .text:00000000000002a8 .L0 
     /tmp/ccbs3j1o.s:879    .text:00000000000002a8 .L0 
       src/riscv.cpp:100    .text:00000000000002a8 .L0 
     /tmp/ccbs3j1o.s:885    .text:00000000000002ac .L0 
       src/riscv.cpp:101    .text:00000000000002ac .L0 
     /tmp/ccbs3j1o.s:891    .text:00000000000002b0 .L0 
     /tmp/ccbs3j1o.s:893    .text:00000000000002b0 .L0 
     /tmp/ccbs3j1o.s:902    .text:00000000000002bc .L0 
     /tmp/ccbs3j1o.s:903    .text:00000000000002bc .L0 
       src/riscv.cpp:108    .text:00000000000002bc .L0 
     /tmp/ccbs3j1o.s:909    .text:00000000000002c0 .L0 
       src/riscv.cpp:109    .text:00000000000002c0 .L0 
     /tmp/ccbs3j1o.s:916    .text:00000000000002c4 .L0 
     /tmp/ccbs3j1o.s:920    .text:00000000000002c8 .L0 
     /tmp/ccbs3j1o.s:921    .text:00000000000002c8 .L0 
     /tmp/ccbs3j1o.s:929    .text:00000000000002d4 .L0 
     /tmp/ccbs3j1o.s:930    .text:00000000000002d4 .L0 
GAS LISTING /tmp/ccbs3j1o.s 			page 51


     /tmp/ccbs3j1o.s:937    .text:00000000000002e0 .L0 
     /tmp/ccbs3j1o.s:938    .text:00000000000002e0 .L0 
     /tmp/ccbs3j1o.s:946    .text:00000000000002e8 .L0 
     /tmp/ccbs3j1o.s:948    .text:00000000000002e8 .L0 
     /tmp/ccbs3j1o.s:949    .text:00000000000002e8 .L0 
     /tmp/ccbs3j1o.s:951    .text:00000000000002f0 .L0 
     /tmp/ccbs3j1o.s:954    .text:00000000000002f4 .L0 
     /tmp/ccbs3j1o.s:958    .text:00000000000002f8 .L0 
     /tmp/ccbs3j1o.s:959    .text:00000000000002f8 .L0 
     /tmp/ccbs3j1o.s:960    .text:00000000000002f8 .L0 
     /tmp/ccbs3j1o.s:962    .text:0000000000000300 .L0 
     /tmp/ccbs3j1o.s:964    .text:0000000000000304 .L0 
     /tmp/ccbs3j1o.s:966    .text:0000000000000308 .L0 
     /tmp/ccbs3j1o.s:968    .text:000000000000030c .L0 
     /tmp/ccbs3j1o.s:969    .text:000000000000030c .L0 
     /tmp/ccbs3j1o.s:972    .text:0000000000000310 .L0 
     /tmp/ccbs3j1o.s:973    .text:0000000000000310 .L0 
     /tmp/ccbs3j1o.s:974    .text:0000000000000310 .L0 
     /tmp/ccbs3j1o.s:976    .text:0000000000000314 .L0 
     /tmp/ccbs3j1o.s:979    .text:0000000000000318 .L0 
     /tmp/ccbs3j1o.s:984    .text:000000000000031c .L0 
     /tmp/ccbs3j1o.s:985    .text:000000000000031c .L0 
     /tmp/ccbs3j1o.s:991    .text:0000000000000328 .L0 
     /tmp/ccbs3j1o.s:998    .text:0000000000000334 .L0 
     /tmp/ccbs3j1o.s:1001   .text:0000000000000340 .L0 
     /tmp/ccbs3j1o.s:1002   .text:0000000000000340 .L0 
     /tmp/ccbs3j1o.s:1009   .text:0000000000000348 .L0 
     /tmp/ccbs3j1o.s:1012   .text:000000000000034c .L0 
     /tmp/ccbs3j1o.s:1013   .text:000000000000034c .L0 
     /tmp/ccbs3j1o.s:1019   .text:0000000000000358 .L0 
     /tmp/ccbs3j1o.s:1026   .text:0000000000000364 .L0 
     /tmp/ccbs3j1o.s:1028   .text:0000000000000368 .L0 
     /tmp/ccbs3j1o.s:1029   .text:0000000000000368 .L0 
     /tmp/ccbs3j1o.s:1032   .text:000000000000036c .L0 
     /tmp/ccbs3j1o.s:1033   .text:000000000000036c .L0 
     /tmp/ccbs3j1o.s:1042   .text:0000000000000378 .L0 
     /tmp/ccbs3j1o.s:1080   .text:000000000000037c .L0 
     /tmp/ccbs3j1o.s:1081   .text:000000000000037c .L0 
     /tmp/ccbs3j1o.s:1083   .text:0000000000000380 .L0 
     /tmp/ccbs3j1o.s:1086   .text:0000000000000384 .L0 
     /tmp/ccbs3j1o.s:1087   .text:0000000000000384 .L0 
     /tmp/ccbs3j1o.s:1091   .text:0000000000000390 .L0 
     /tmp/ccbs3j1o.s:1094   .text:000000000000039c .L0 
     /tmp/ccbs3j1o.s:1096   .text:00000000000003a0 .L0 
     /tmp/ccbs3j1o.s:1101   .text:00000000000003a4 .L0 
     /tmp/ccbs3j1o.s:1108   .text:00000000000003b0 .L0 
     /tmp/ccbs3j1o.s:1109   .text:00000000000003b0 .L0 
     /tmp/ccbs3j1o.s:1111   .text:00000000000003b4 .L0 
     /tmp/ccbs3j1o.s:1112   .text:00000000000003b4 .L0 
     /tmp/ccbs3j1o.s:1119   .text:00000000000003bc .L0 
     /tmp/ccbs3j1o.s:1120   .text:00000000000003bc .L0 
     /tmp/ccbs3j1o.s:1126   .text:00000000000003c8 .L0 
     /tmp/ccbs3j1o.s:1135   .text:00000000000003dc .L0 
     /tmp/ccbs3j1o.s:1137   .text:00000000000003e0 .L0 
     /tmp/ccbs3j1o.s:1138   .text:00000000000003e0 .L0 
     /tmp/ccbs3j1o.s:1141   .text:00000000000003e4 .L0 
     /tmp/ccbs3j1o.s:1143   .text:00000000000003ec .L0 
GAS LISTING /tmp/ccbs3j1o.s 			page 52


     /tmp/ccbs3j1o.s:1151   .text:00000000000003fc .L0 
     /tmp/ccbs3j1o.s:1152   .text:00000000000003fc .L0 
     /tmp/ccbs3j1o.s:1160   .text:0000000000000408 .L0 
     /tmp/ccbs3j1o.s:1161   .text:0000000000000408 .L0 
     /tmp/ccbs3j1o.s:1175   .text:0000000000000414 .L0 
     /tmp/ccbs3j1o.s:1176   .text:0000000000000414 .L0 
       src/riscv.cpp:124    .text:0000000000000414 .L0 
     /tmp/ccbs3j1o.s:1182   .text:0000000000000418 .L0 
       src/riscv.cpp:125    .text:0000000000000418 .L0 
     /tmp/ccbs3j1o.s:1188   .text:000000000000041c .L0 
     /tmp/ccbs3j1o.s:1190   .text:000000000000041c .L0 
     /tmp/ccbs3j1o.s:1194   .text:000000000000042c .L0 
     /tmp/ccbs3j1o.s:1196   .text:0000000000000430 .L0 
     /tmp/ccbs3j1o.s:1199   .text:0000000000000434 .L0 
     /tmp/ccbs3j1o.s:1200   .text:0000000000000434 .L0 
     /tmp/ccbs3j1o.s:1205   .text:0000000000000438 .L0 
  src/../h/riscv.hpp:186    .text:0000000000000438 .L0 
     /tmp/ccbs3j1o.s:1215   .text:000000000000043c .L0 
     /tmp/ccbs3j1o.s:1216   .text:000000000000043c .L0 
     /tmp/ccbs3j1o.s:1221   .text:0000000000000440 .L0 
  src/../h/riscv.hpp:118    .text:0000000000000440 .L0 
     /tmp/ccbs3j1o.s:1228   .text:0000000000000444 .L0 
     /tmp/ccbs3j1o.s:1234   .text:0000000000000448 .L0 
     /tmp/ccbs3j1o.s:1235   .text:0000000000000448 .L0 
     /tmp/ccbs3j1o.s:1245   .text:000000000000045c .L0 
     /tmp/ccbs3j1o.s:1246   .text:000000000000045c .L0 
       src/riscv.cpp:141    .text:000000000000045c .L0 
     /tmp/ccbs3j1o.s:1252   .text:0000000000000460 .L0 
       src/riscv.cpp:142    .text:0000000000000460 .L0 
     /tmp/ccbs3j1o.s:1258   .text:0000000000000464 .L0 
     /tmp/ccbs3j1o.s:1260   .text:0000000000000464 .L0 
     /tmp/ccbs3j1o.s:1286   .text:000000000000047c .L0 
     /tmp/ccbs3j1o.s:1287   .text:000000000000047c .L0 
     /tmp/ccbs3j1o.s:1288   .text:000000000000047c .L0 
     /tmp/ccbs3j1o.s:1291   .text:0000000000000484 .L0 
     /tmp/ccbs3j1o.s:1293   .text:0000000000000488 .L0 
     /tmp/ccbs3j1o.s:1294   .text:0000000000000488 .L0 
     /tmp/ccbs3j1o.s:1299   .text:000000000000048c .L0 
     /tmp/ccbs3j1o.s:1300   .text:000000000000048c .L0 
     /tmp/ccbs3j1o.s:1307   .text:0000000000000494 .L0 
     /tmp/ccbs3j1o.s:1308   .text:0000000000000494 .L0 
     /tmp/ccbs3j1o.s:1309   .text:0000000000000494 .L0 
     /tmp/ccbs3j1o.s:1310   .text:0000000000000494 .L0 
     /tmp/ccbs3j1o.s:1320   .text:000000000000049c .L0 
     /tmp/ccbs3j1o.s:1321   .text:000000000000049c .L0 
     /tmp/ccbs3j1o.s:1325   .text:000000000000049c .L0 
     /tmp/ccbs3j1o.s:1326   .text:000000000000049c .L0 
     /tmp/ccbs3j1o.s:1332   .text:00000000000004a0 .L0 
     /tmp/ccbs3j1o.s:1333   .text:00000000000004a0 .L0 
     /tmp/ccbs3j1o.s:1334   .text:00000000000004a0 .L0 
     /tmp/ccbs3j1o.s:1344   .text:00000000000004a8 .L0 
     /tmp/ccbs3j1o.s:1345   .text:00000000000004a8 .L0 
     /tmp/ccbs3j1o.s:1351   .text:00000000000004bc .L0 
     /tmp/ccbs3j1o.s:1352   .text:00000000000004bc .L0 
     /tmp/ccbs3j1o.s:1358   .text:00000000000004c8 .L0 
     /tmp/ccbs3j1o.s:1359   .text:00000000000004c8 .L0 
     /tmp/ccbs3j1o.s:1364   .text:00000000000004cc .L0 
GAS LISTING /tmp/ccbs3j1o.s 			page 53


     /tmp/ccbs3j1o.s:1369   .text:00000000000004d0 .L0 
     /tmp/ccbs3j1o.s:1370   .text:00000000000004d0 .L0 
     /tmp/ccbs3j1o.s:1371   .text:00000000000004d0 .L0 
  src/../h/riscv.hpp:112    .text:00000000000004d0 .L0 
     /tmp/ccbs3j1o.s:1379   .text:00000000000004d8 .L0 
     /tmp/ccbs3j1o.s:1380   .text:00000000000004d8 .L0 
     /tmp/ccbs3j1o.s:1384   .text:00000000000004dc .L0 
     /tmp/ccbs3j1o.s:1388   .text:00000000000004e0 .L0 
     /tmp/ccbs3j1o.s:1389   .text:00000000000004e0 .L0 
     /tmp/ccbs3j1o.s:1390   .text:00000000000004e0 .L0 
  src/../h/riscv.hpp:180    .text:00000000000004e0 .L0 
     /tmp/ccbs3j1o.s:1398   .text:00000000000004e8 .L0 
     /tmp/ccbs3j1o.s:1399   .text:00000000000004e8 .L0 
     /tmp/ccbs3j1o.s:1403   .text:00000000000004ec .L0 
     /tmp/ccbs3j1o.s:1405   .text:00000000000004f0 .L0 
     /tmp/ccbs3j1o.s:1406   .text:00000000000004f0 .L0 
     /tmp/ccbs3j1o.s:1409   .text:00000000000004fc .L0 
     /tmp/ccbs3j1o.s:1410   .text:00000000000004fc .L0 
     /tmp/ccbs3j1o.s:1413   .text:0000000000000504 .L0 
     /tmp/ccbs3j1o.s:1414   .text:0000000000000504 .L0 
     /tmp/ccbs3j1o.s:1419   .text:0000000000000508 .L0 
  src/../h/riscv.hpp:186    .text:0000000000000508 .L0 
     /tmp/ccbs3j1o.s:1429   .text:000000000000050c .L0 
     /tmp/ccbs3j1o.s:1430   .text:000000000000050c .L0 
     /tmp/ccbs3j1o.s:1435   .text:0000000000000510 .L0 
  src/../h/riscv.hpp:118    .text:0000000000000510 .L0 
     /tmp/ccbs3j1o.s:1442   .text:0000000000000514 .L0 
     /tmp/ccbs3j1o.s:1453   .text:0000000000000518 .L0 
     /tmp/ccbs3j1o.s:1454   .text:0000000000000518 .L0 
     /tmp/ccbs3j1o.s:1457   .text:0000000000000520 .L0 
     /tmp/ccbs3j1o.s:1458   .text:0000000000000520 .L0 
     /tmp/ccbs3j1o.s:1463   .text:0000000000000524 .L0 
     /tmp/ccbs3j1o.s:1464   .text:0000000000000524 .L0 
     /tmp/ccbs3j1o.s:1469   .text:0000000000000528 .L0 
     /tmp/ccbs3j1o.s:1470   .text:0000000000000528 .L0 
     /tmp/ccbs3j1o.s:1474   .text:0000000000000534 .L0 
     /tmp/ccbs3j1o.s:1475   .text:0000000000000534 .L0 
     /tmp/ccbs3j1o.s:1480   .text:0000000000000538 .L0 
     /tmp/ccbs3j1o.s:1481   .text:0000000000000538 .L0 
     /tmp/ccbs3j1o.s:1482   .text:0000000000000538 .L0 
     /tmp/ccbs3j1o.s:1484   .text:0000000000000540 .L0 
     /tmp/ccbs3j1o.s:1486   .text:0000000000000544 .L0 
     /tmp/ccbs3j1o.s:1488   .text:0000000000000548 .L0 
     /tmp/ccbs3j1o.s:1492   .text:000000000000054c .L0 
     /tmp/ccbs3j1o.s:1493   .text:000000000000054c .L0 
     /tmp/ccbs3j1o.s:1494   .text:000000000000054c .L0 
     /tmp/ccbs3j1o.s:1496   .text:0000000000000550 .L0 
     /tmp/ccbs3j1o.s:1498   .text:0000000000000558 .L0 
     /tmp/ccbs3j1o.s:1502   .text:0000000000000560 .L0 
     /tmp/ccbs3j1o.s:1516   .text:0000000000000570 .L0 
     /tmp/ccbs3j1o.s:1517   .text:0000000000000570 .L0 
     /tmp/ccbs3j1o.s:1521   .text:000000000000057c .L0 
     /tmp/ccbs3j1o.s:1522   .text:000000000000057c .L0 
     /tmp/ccbs3j1o.s:1529   .text:0000000000000590 .L0 
     /tmp/ccbs3j1o.s:1530   .text:0000000000000590 .L0 
     /tmp/ccbs3j1o.s:1531   .text:0000000000000590 .L0 
     /tmp/ccbs3j1o.s:1535   .text:00000000000005a0 .L0 
GAS LISTING /tmp/ccbs3j1o.s 			page 54


     /tmp/ccbs3j1o.s:1539   .text:00000000000005a8 .L0 
     /tmp/ccbs3j1o.s:1540   .text:00000000000005a8 .L0 
     /tmp/ccbs3j1o.s:1542   .text:00000000000005b0 .L0 
     /tmp/ccbs3j1o.s:1544   .text:00000000000005b4 .L0 
     /tmp/ccbs3j1o.s:1545   .text:00000000000005b4 .L0 
     /tmp/ccbs3j1o.s:1552   .text:00000000000005c0 .L0 
     /tmp/ccbs3j1o.s:1561   .text:00000000000005d0 .L0 
     /tmp/ccbs3j1o.s:1569   .text:00000000000005d8 .L0 
     /tmp/ccbs3j1o.s:1574   .text:00000000000005e4 .L0 
     /tmp/ccbs3j1o.s:1575   .text:00000000000005e4 .L0 
     /tmp/ccbs3j1o.s:1583   .text:00000000000005f0 .L0 
     /tmp/ccbs3j1o.s:1584   .text:00000000000005f4 .L0 
     /tmp/ccbs3j1o.s:1589   .text:00000000000005f4 _GLOBAL__sub_I__ZN5Riscv15sleepingThreadsE
     /tmp/ccbs3j1o.s:1592   .text:00000000000005f4 .L0 
     /tmp/ccbs3j1o.s:1593   .text:00000000000005f4 .L0 
     /tmp/ccbs3j1o.s:1594   .text:00000000000005f8 .L0 
     /tmp/ccbs3j1o.s:1597   .text:0000000000000600 .L0 
     /tmp/ccbs3j1o.s:1598   .text:0000000000000600 .L0 
     /tmp/ccbs3j1o.s:1600   .text:0000000000000604 .L0 
     /tmp/ccbs3j1o.s:1602   .text:0000000000000604 .L0 
     /tmp/ccbs3j1o.s:1608   .text:000000000000061c .L0 
     /tmp/ccbs3j1o.s:1610   .text:0000000000000620 .L0 
     /tmp/ccbs3j1o.s:1611   .text:0000000000000620 .L0 
     /tmp/ccbs3j1o.s:1613   .text:0000000000000624 .L0 
     /tmp/ccbs3j1o.s:1615   .text:0000000000000628 .L0 
     /tmp/ccbs3j1o.s:1637   .bss:0000000000000130 _ZN5Riscv10getCBufferE
     /tmp/ccbs3j1o.s:1633   .bss:0000000000000010 _ZN5Riscv10putCBufferE
     /tmp/ccbs3j1o.s:1629   .bss:0000000000000000 _ZN5Riscv15sleepingThreadsE
     /tmp/ccbs3j1o.s:1626   .bss:0000000000000000 .LANCHOR0
     /tmp/ccbs3j1o.s:1646   .text:0000000000000628 .L0 
     /tmp/ccbs3j1o.s:43     .text:000000000000002c .L0 
     /tmp/ccbs3j1o.s:521    .text:0000000000000190 .L0 
     /tmp/ccbs3j1o.s:696    .text:0000000000000210 .L0 
     /tmp/ccbs3j1o.s:752    .text:0000000000000240 .L0 
     /tmp/ccbs3j1o.s:930    .text:00000000000002d4 .L0 
     /tmp/ccbs3j1o.s:949    .text:00000000000002e8 .L0 
     /tmp/ccbs3j1o.s:960    .text:00000000000002f8 .L0 
     /tmp/ccbs3j1o.s:998    .text:0000000000000334 .L0 
     /tmp/ccbs3j1o.s:1091   .text:0000000000000390 .L0 
     /tmp/ccbs3j1o.s:1128   .text:00000000000003cc .L0 
     /tmp/ccbs3j1o.s:1141   .text:00000000000003e4 .L0 
     /tmp/ccbs3j1o.s:1152   .text:00000000000003fc .L0 
     /tmp/ccbs3j1o.s:1161   .text:0000000000000408 .L0 
     /tmp/ccbs3j1o.s:1190   .text:000000000000041c .L0 
     /tmp/ccbs3j1o.s:114    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccbs3j1o.s:1235   .text:0000000000000448 .L0 
     /tmp/ccbs3j1o.s:1261   .text:0000000000000468 .L0 
     /tmp/ccbs3j1o.s:1288   .text:000000000000047c .L0 
     /tmp/ccbs3j1o.s:1345   .text:00000000000004a8 .L0 
     /tmp/ccbs3j1o.s:1352   .text:00000000000004bc .L0 
     /tmp/ccbs3j1o.s:1406   .text:00000000000004f0 .L0 
     /tmp/ccbs3j1o.s:1454   .text:0000000000000518 .L0 
     /tmp/ccbs3j1o.s:1482   .text:0000000000000538 .L0 
     /tmp/ccbs3j1o.s:1496   .text:0000000000000550 .L0 
     /tmp/ccbs3j1o.s:1517   .text:0000000000000570 .L0 
     /tmp/ccbs3j1o.s:1523   .text:0000000000000580 .L0 
     /tmp/ccbs3j1o.s:1531   .text:0000000000000590 .L0 
GAS LISTING /tmp/ccbs3j1o.s 			page 55


     /tmp/ccbs3j1o.s:1540   .text:00000000000005a8 .L0 
     /tmp/ccbs3j1o.s:1569   .text:00000000000005d8 .L0 
     /tmp/ccbs3j1o.s:31     .text:0000000000000020 .L4
     /tmp/ccbs3j1o.s:23     .text:0000000000000014 .L1
     /tmp/ccbs3j1o.s:193    .text:00000000000000e0 .L42
     /tmp/ccbs3j1o.s:1267   .text:000000000000047c .L43
     /tmp/ccbs3j1o.s:662    .text:00000000000001f0 .L7
     /tmp/ccbs3j1o.s:1526   .text:0000000000000590 .L39
     /tmp/ccbs3j1o.s:627    .text:00000000000001e0 .L9
     /tmp/ccbs3j1o.s:559    .text:00000000000001b8 .L44
     /tmp/ccbs3j1o.s:686    .text:0000000000000210 .L45
     /tmp/ccbs3j1o.s:746    .text:0000000000000240 .L46
     /tmp/ccbs3j1o.s:791    .text:0000000000000268 .L47
     /tmp/ccbs3j1o.s:830    .text:0000000000000288 .L48
     /tmp/ccbs3j1o.s:850    .text:0000000000000294 .L49
     /tmp/ccbs3j1o.s:874    .text:00000000000002a8 .L50
     /tmp/ccbs3j1o.s:898    .text:00000000000002bc .L51
     /tmp/ccbs3j1o.s:1164   .text:0000000000000414 .L52
     /tmp/ccbs3j1o.s:1240   .text:000000000000045c .L53
     /tmp/ccbs3j1o.s:926    .text:00000000000002d4 .L54
     /tmp/ccbs3j1o.s:981    .text:000000000000031c .L55
     /tmp/ccbs3j1o.s:1005   .text:0000000000000348 .L21
     /tmp/ccbs3j1o.s:956    .text:00000000000002f8 .L19
     /tmp/ccbs3j1o.s:918    .text:00000000000002c8 .L18
     /tmp/ccbs3j1o.s:1044   .text:000000000000037c .L56
     /tmp/ccbs3j1o.s:1155   .text:0000000000000408 .L26
     /tmp/ccbs3j1o.s:1116   .text:00000000000003bc .L23
     /tmp/ccbs3j1o.s:1149   .text:00000000000003fc .L24
     /tmp/ccbs3j1o.s:1139   .text:00000000000003e4 .L25
     /tmp/ccbs3j1o.s:1030   .text:000000000000036c .L27
     /tmp/ccbs3j1o.s:1230   .text:0000000000000448 .L57
     /tmp/ccbs3j1o.s:1197   .text:0000000000000434 .L29
     /tmp/ccbs3j1o.s:1328   .text:00000000000004a0 .L33
     /tmp/ccbs3j1o.s:1477   .text:0000000000000538 .L35
     /tmp/ccbs3j1o.s:1500   .text:0000000000000560 .L58
     /tmp/ccbs3j1o.s:1455   .text:0000000000000520 .L34
     /tmp/ccbs3j1o.s:1444   .text:0000000000000518 .L59
     /tmp/ccbs3j1o.s:1571   .text:00000000000005e4 .L37
     /tmp/ccbs3j1o.s:1507   .text:0000000000000570 .L38
     /tmp/ccbs3j1o.s:4563   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccbs3j1o.s:7219   .debug_str:0000000000000aaa .LASF232
     /tmp/ccbs3j1o.s:7293   .debug_str:0000000000000d68 .LASF233
     /tmp/ccbs3j1o.s:7233   .debug_str:0000000000000bb7 .LASF234
     /tmp/ccbs3j1o.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccbs3j1o.s:1640   .text:0000000000000628 .Letext0
     /tmp/ccbs3j1o.s:6857   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccbs3j1o.s:7009   .debug_str:00000000000004d7 .LASF0
     /tmp/ccbs3j1o.s:7039   .debug_str:00000000000005ba .LASF1
     /tmp/ccbs3j1o.s:7151   .debug_str:00000000000008d2 .LASF2
     /tmp/ccbs3j1o.s:7161   .debug_str:0000000000000918 .LASF4
     /tmp/ccbs3j1o.s:7017   .debug_str:0000000000000503 .LASF3
     /tmp/ccbs3j1o.s:6869   .debug_str:0000000000000064 .LASF5
     /tmp/ccbs3j1o.s:7131   .debug_str:000000000000084f .LASF6
     /tmp/ccbs3j1o.s:7117   .debug_str:00000000000007cb .LASF7
     /tmp/ccbs3j1o.s:7027   .debug_str:000000000000056c .LASF8
     /tmp/ccbs3j1o.s:6983   .debug_str:00000000000003ce .LASF9
     /tmp/ccbs3j1o.s:6989   .debug_str:0000000000000417 .LASF10
GAS LISTING /tmp/ccbs3j1o.s 			page 56


     /tmp/ccbs3j1o.s:6907   .debug_str:0000000000000187 .LASF11
     /tmp/ccbs3j1o.s:6971   .debug_str:000000000000039b .LASF12
     /tmp/ccbs3j1o.s:6927   .debug_str:000000000000021d .LASF13
     /tmp/ccbs3j1o.s:6905   .debug_str:0000000000000177 .LASF14
     /tmp/ccbs3j1o.s:7193   .debug_str:0000000000000a19 .LASF15
     /tmp/ccbs3j1o.s:6953   .debug_str:00000000000002bb .LASF16
     /tmp/ccbs3j1o.s:7177   .debug_str:00000000000009ac .LASF17
     /tmp/ccbs3j1o.s:6981   .debug_str:00000000000003c4 .LASF18
     /tmp/ccbs3j1o.s:7205   .debug_str:0000000000000a4d .LASF71
     /tmp/ccbs3j1o.s:7311   .debug_str:0000000000000dcc .LASF235
     /tmp/ccbs3j1o.s:7001   .debug_str:000000000000048f .LASF236
     /tmp/ccbs3j1o.s:7267   .debug_str:0000000000000c9f .LASF19
     /tmp/ccbs3j1o.s:7251   .debug_str:0000000000000c38 .LASF104
     /tmp/ccbs3j1o.s:7185   .debug_str:00000000000009ee .LASF20
     /tmp/ccbs3j1o.s:7095   .debug_str:0000000000000724 .LASF21
     /tmp/ccbs3j1o.s:7083   .debug_str:00000000000006dc .LASF22
     /tmp/ccbs3j1o.s:7179   .debug_str:00000000000009c2 .LASF24
     /tmp/ccbs3j1o.s:6967   .debug_str:0000000000000376 .LASF29
     /tmp/ccbs3j1o.s:7153   .debug_str:00000000000008e0 .LASF112
     /tmp/ccbs3j1o.s:7143   .debug_str:0000000000000899 .LASF113
     /tmp/ccbs3j1o.s:7033   .debug_str:000000000000059d .LASF23
     /tmp/ccbs3j1o.s:6899   .debug_str:000000000000012e .LASF25
     /tmp/ccbs3j1o.s:7057   .debug_str:000000000000063c .LASF26
     /tmp/ccbs3j1o.s:6955   .debug_str:00000000000002d1 .LASF27
     /tmp/ccbs3j1o.s:7115   .debug_str:00000000000007bf .LASF28
     /tmp/ccbs3j1o.s:7269   .debug_str:0000000000000ca9 .LASF30
     /tmp/ccbs3j1o.s:7335   .debug_str:0000000000000e79 .LASF31
     /tmp/ccbs3j1o.s:7315   .debug_str:0000000000000de8 .LASF32
     /tmp/ccbs3j1o.s:7171   .debug_str:000000000000096d .LASF33
     /tmp/ccbs3j1o.s:7025   .debug_str:000000000000054f .LASF34
     /tmp/ccbs3j1o.s:7141   .debug_str:0000000000000890 .LASF35
     /tmp/ccbs3j1o.s:6863   .debug_str:0000000000000016 .LASF36
     /tmp/ccbs3j1o.s:7201   .debug_str:0000000000000a3a .LASF103
     /tmp/ccbs3j1o.s:7163   .debug_str:000000000000091f .LASF37
     /tmp/ccbs3j1o.s:6867   .debug_str:0000000000000058 .LASF38
     /tmp/ccbs3j1o.s:7307   .debug_str:0000000000000db6 .LASF58
     /tmp/ccbs3j1o.s:6985   .debug_str:00000000000003de .LASF81
     /tmp/ccbs3j1o.s:7203   .debug_str:0000000000000a42 .LASF39
     /tmp/ccbs3j1o.s:7089   .debug_str:00000000000006fc .LASF40
     /tmp/ccbs3j1o.s:6891   .debug_str:00000000000000fc .LASF41
     /tmp/ccbs3j1o.s:7243   .debug_str:0000000000000c09 .LASF42
     /tmp/ccbs3j1o.s:7085   .debug_str:00000000000006e1 .LASF43
     /tmp/ccbs3j1o.s:6937   .debug_str:0000000000000264 .LASF44
     /tmp/ccbs3j1o.s:7237   .debug_str:0000000000000be0 .LASF45
     /tmp/ccbs3j1o.s:7101   .debug_str:0000000000000746 .LASF46
     /tmp/ccbs3j1o.s:7289   .debug_str:0000000000000d56 .LASF47
     /tmp/ccbs3j1o.s:6901   .debug_str:000000000000014b .LASF48
     /tmp/ccbs3j1o.s:7207   .debug_str:0000000000000a5e .LASF49
     /tmp/ccbs3j1o.s:6921   .debug_str:00000000000001de .LASF50
     /tmp/ccbs3j1o.s:7047   .debug_str:00000000000005ee .LASF51
     /tmp/ccbs3j1o.s:7253   .debug_str:0000000000000c3d .LASF52
     /tmp/ccbs3j1o.s:7191   .debug_str:0000000000000a0c .LASF53
     /tmp/ccbs3j1o.s:7255   .debug_str:0000000000000c56 .LASF54
     /tmp/ccbs3j1o.s:7113   .debug_str:00000000000007ba .LASF237
     /tmp/ccbs3j1o.s:7045   .debug_str:00000000000005e8 .LASF140
     /tmp/ccbs3j1o.s:7223   .debug_str:0000000000000b73 .LASF142
     /tmp/ccbs3j1o.s:7277   .debug_str:0000000000000ced .LASF55
GAS LISTING /tmp/ccbs3j1o.s 			page 57


     /tmp/ccbs3j1o.s:7055   .debug_str:000000000000062c .LASF56
     /tmp/ccbs3j1o.s:7217   .debug_str:0000000000000aa2 .LASF57
     /tmp/ccbs3j1o.s:6903   .debug_str:0000000000000160 .LASF121
     /tmp/ccbs3j1o.s:6939   .debug_str:000000000000027b .LASF59
     /tmp/ccbs3j1o.s:7063   .debug_str:0000000000000654 .LASF60
     /tmp/ccbs3j1o.s:7239   .debug_str:0000000000000bec .LASF61
     /tmp/ccbs3j1o.s:7229   .debug_str:0000000000000b99 .LASF62
     /tmp/ccbs3j1o.s:7175   .debug_str:00000000000009a3 .LASF63
     /tmp/ccbs3j1o.s:7199   .debug_str:0000000000000a31 .LASF64
     /tmp/ccbs3j1o.s:7105   .debug_str:0000000000000787 .LASF65
     /tmp/ccbs3j1o.s:6897   .debug_str:0000000000000120 .LASF67
     /tmp/ccbs3j1o.s:7049   .debug_str:00000000000005fb .LASF69
     /tmp/ccbs3j1o.s:6929   .debug_str:000000000000022d .LASF66
     /tmp/ccbs3j1o.s:6865   .debug_str:0000000000000030 .LASF108
     /tmp/ccbs3j1o.s:6941   .debug_str:0000000000000280 .LASF68
     /tmp/ccbs3j1o.s:6917   .debug_str:00000000000001c1 .LASF70
     /tmp/ccbs3j1o.s:7169   .debug_str:000000000000095c .LASF72
     /tmp/ccbs3j1o.s:7157   .debug_str:0000000000000902 .LASF73
     /tmp/ccbs3j1o.s:7295   .debug_str:0000000000000d76 .LASF74
     /tmp/ccbs3j1o.s:7061   .debug_str:000000000000064f .LASF75
     /tmp/ccbs3j1o.s:7265   .debug_str:0000000000000c96 .LASF76
     /tmp/ccbs3j1o.s:7297   .debug_str:0000000000000d81 .LASF77
     /tmp/ccbs3j1o.s:7187   .debug_str:00000000000009f3 .LASF78
     /tmp/ccbs3j1o.s:6961   .debug_str:000000000000032e .LASF79
     /tmp/ccbs3j1o.s:6861   .debug_str:0000000000000006 .LASF80
     /tmp/ccbs3j1o.s:6969   .debug_str:000000000000038d .LASF82
     /tmp/ccbs3j1o.s:6951   .debug_str:00000000000002b5 .LASF83
     /tmp/ccbs3j1o.s:7067   .debug_str:0000000000000667 .LASF84
     /tmp/ccbs3j1o.s:6943   .debug_str:0000000000000289 .LASF85
     /tmp/ccbs3j1o.s:7087   .debug_str:00000000000006ec .LASF86
     /tmp/ccbs3j1o.s:7195   .debug_str:0000000000000a25 .LASF87
     /tmp/ccbs3j1o.s:7181   .debug_str:00000000000009d5 .LASF88
     /tmp/ccbs3j1o.s:6877   .debug_str:0000000000000087 .LASF89
     /tmp/ccbs3j1o.s:6883   .debug_str:00000000000000bc .LASF90
     /tmp/ccbs3j1o.s:6997   .debug_str:000000000000045f .LASF91
     /tmp/ccbs3j1o.s:7079   .debug_str:00000000000006b3 .LASF92
     /tmp/ccbs3j1o.s:7147   .debug_str:00000000000008b7 .LASF93
     /tmp/ccbs3j1o.s:6991   .debug_str:0000000000000425 .LASF94
     /tmp/ccbs3j1o.s:7007   .debug_str:00000000000004d1 .LASF95
     /tmp/ccbs3j1o.s:6965   .debug_str:0000000000000365 .LASF96
     /tmp/ccbs3j1o.s:7313   .debug_str:0000000000000de0 .LASF97
     /tmp/ccbs3j1o.s:7271   .debug_str:0000000000000cc7 .LASF98
     /tmp/ccbs3j1o.s:7245   .debug_str:0000000000000c20 .LASF99
     /tmp/ccbs3j1o.s:7109   .debug_str:00000000000007a4 .LASF100
     /tmp/ccbs3j1o.s:7231   .debug_str:0000000000000ba3 .LASF101
     /tmp/ccbs3j1o.s:6895   .debug_str:000000000000010d .LASF102
     /tmp/ccbs3j1o.s:6979   .debug_str:00000000000003bf .LASF105
     /tmp/ccbs3j1o.s:6909   .debug_str:0000000000000196 .LASF106
     /tmp/ccbs3j1o.s:7227   .debug_str:0000000000000b8c .LASF107
     /tmp/ccbs3j1o.s:7103   .debug_str:000000000000075d .LASF109
     /tmp/ccbs3j1o.s:6949   .debug_str:0000000000000299 .LASF110
     /tmp/ccbs3j1o.s:7023   .debug_str:0000000000000530 .LASF111
     /tmp/ccbs3j1o.s:6959   .debug_str:000000000000030f .LASF114
     /tmp/ccbs3j1o.s:7259   .debug_str:0000000000000c81 .LASF115
     /tmp/ccbs3j1o.s:7279   .debug_str:0000000000000cf3 .LASF116
     /tmp/ccbs3j1o.s:7325   .debug_str:0000000000000e45 .LASF117
     /tmp/ccbs3j1o.s:6999   .debug_str:0000000000000465 .LASF118
GAS LISTING /tmp/ccbs3j1o.s 			page 58


     /tmp/ccbs3j1o.s:7127   .debug_str:0000000000000830 .LASF119
     /tmp/ccbs3j1o.s:7165   .debug_str:0000000000000924 .LASF120
     /tmp/ccbs3j1o.s:7287   .debug_str:0000000000000d33 .LASF122
     /tmp/ccbs3j1o.s:7261   .debug_str:0000000000000c8a .LASF123
     /tmp/ccbs3j1o.s:7305   .debug_str:0000000000000da7 .LASF124
     /tmp/ccbs3j1o.s:7011   .debug_str:00000000000004e4 .LASF125
     /tmp/ccbs3j1o.s:7021   .debug_str:000000000000051e .LASF126
     /tmp/ccbs3j1o.s:7069   .debug_str:0000000000000674 .LASF127
     /tmp/ccbs3j1o.s:7041   .debug_str:00000000000005cd .LASF128
     /tmp/ccbs3j1o.s:7071   .debug_str:0000000000000679 .LASF129
     /tmp/ccbs3j1o.s:7225   .debug_str:0000000000000b83 .LASF130
     /tmp/ccbs3j1o.s:7099   .debug_str:0000000000000730 .LASF131
     /tmp/ccbs3j1o.s:6875   .debug_str:000000000000007f .LASF132
     /tmp/ccbs3j1o.s:6973   .debug_str:00000000000003aa .LASF133
     /tmp/ccbs3j1o.s:6859   .debug_str:0000000000000000 .LASF134
     /tmp/ccbs3j1o.s:7209   .debug_str:0000000000000a69 .LASF135
     /tmp/ccbs3j1o.s:7273   .debug_str:0000000000000cda .LASF136
     /tmp/ccbs3j1o.s:7031   .debug_str:0000000000000592 .LASF238
     /tmp/ccbs3j1o.s:7019   .debug_str:0000000000000515 .LASF137
     /tmp/ccbs3j1o.s:6873   .debug_str:0000000000000076 .LASF138
     /tmp/ccbs3j1o.s:7299   .debug_str:0000000000000d87 .LASF139
     /tmp/ccbs3j1o.s:6995   .debug_str:0000000000000454 .LASF141
     /tmp/ccbs3j1o.s:7005   .debug_str:00000000000004b9 .LASF143
     /tmp/ccbs3j1o.s:7043   .debug_str:00000000000005df .LASF144
     /tmp/ccbs3j1o.s:7241   .debug_str:0000000000000bf4 .LASF148
     /tmp/ccbs3j1o.s:7327   .debug_str:0000000000000e54 .LASF145
     /tmp/ccbs3j1o.s:7107   .debug_str:000000000000078f .LASF146
     /tmp/ccbs3j1o.s:7135   .debug_str:0000000000000862 .LASF147
     /tmp/ccbs3j1o.s:7137   .debug_str:0000000000000869 .LASF149
     /tmp/ccbs3j1o.s:7097   .debug_str:0000000000000729 .LASF150
     /tmp/ccbs3j1o.s:7029   .debug_str:000000000000057f .LASF151
     /tmp/ccbs3j1o.s:7291   .debug_str:0000000000000d60 .LASF152
     /tmp/ccbs3j1o.s:7189   .debug_str:00000000000009f8 .LASF153
     /tmp/ccbs3j1o.s:7093   .debug_str:000000000000071c .LASF154
     /tmp/ccbs3j1o.s:7317   .debug_str:0000000000000e03 .LASF155
     /tmp/ccbs3j1o.s:7053   .debug_str:0000000000000624 .LASF156
     /tmp/ccbs3j1o.s:7139   .debug_str:000000000000087c .LASF157
     /tmp/ccbs3j1o.s:7329   .debug_str:0000000000000e5d .LASF158
     /tmp/ccbs3j1o.s:7015   .debug_str:00000000000004ef .LASF159
     /tmp/ccbs3j1o.s:6931   .debug_str:000000000000023b .LASF160
     /tmp/ccbs3j1o.s:6925   .debug_str:000000000000020a .LASF161
     /tmp/ccbs3j1o.s:7167   .debug_str:0000000000000955 .LASF162
     /tmp/ccbs3j1o.s:6915   .debug_str:00000000000001ae .LASF163
     /tmp/ccbs3j1o.s:6945   .debug_str:000000000000028e .LASF164
     /tmp/ccbs3j1o.s:7003   .debug_str:00000000000004a7 .LASF165
     /tmp/ccbs3j1o.s:7013   .debug_str:00000000000004e9 .LASF166
     /tmp/ccbs3j1o.s:6935   .debug_str:0000000000000252 .LASF167
     /tmp/ccbs3j1o.s:6871   .debug_str:000000000000006b .LASF168
     /tmp/ccbs3j1o.s:7155   .debug_str:00000000000008ea .LASF169
     /tmp/ccbs3j1o.s:7149   .debug_str:00000000000008c7 .LASF170
     /tmp/ccbs3j1o.s:7321   .debug_str:0000000000000e22 .LASF171
     /tmp/ccbs3j1o.s:7215   .debug_str:0000000000000a98 .LASF172
     /tmp/ccbs3j1o.s:6923   .debug_str:00000000000001f4 .LASF173
     /tmp/ccbs3j1o.s:6913   .debug_str:00000000000001a4 .LASF174
     /tmp/ccbs3j1o.s:7075   .debug_str:0000000000000696 .LASF175
     /tmp/ccbs3j1o.s:7285   .debug_str:0000000000000d24 .LASF176
     /tmp/ccbs3j1o.s:6987   .debug_str:00000000000003fb .LASF177
GAS LISTING /tmp/ccbs3j1o.s 			page 59


     /tmp/ccbs3j1o.s:7323   .debug_str:0000000000000e3a .LASF178
     /tmp/ccbs3j1o.s:7247   .debug_str:0000000000000c27 .LASF179
     /tmp/ccbs3j1o.s:7123   .debug_str:000000000000080d .LASF180
     /tmp/ccbs3j1o.s:6957   .debug_str:00000000000002ed .LASF181
     /tmp/ccbs3j1o.s:7051   .debug_str:0000000000000614 .LASF182
     /tmp/ccbs3j1o.s:7129   .debug_str:0000000000000846 .LASF210
     /tmp/ccbs3j1o.s:7333   .debug_str:0000000000000e6f .LASF183
     /tmp/ccbs3j1o.s:6977   .debug_str:00000000000003b6 .LASF184
     /tmp/ccbs3j1o.s:7213   .debug_str:0000000000000a8a .LASF185
     /tmp/ccbs3j1o.s:7133   .debug_str:0000000000000856 .LASF186
     /tmp/ccbs3j1o.s:6933   .debug_str:0000000000000242 .LASF187
     /tmp/ccbs3j1o.s:6911   .debug_str:000000000000019b .LASF188
     /tmp/ccbs3j1o.s:6919   .debug_str:00000000000001d4 .LASF189
     /tmp/ccbs3j1o.s:7091   .debug_str:0000000000000713 .LASF190
     /tmp/ccbs3j1o.s:7159   .debug_str:000000000000090d .LASF191
     /tmp/ccbs3j1o.s:7301   .debug_str:0000000000000d90 .LASF192
     /tmp/ccbs3j1o.s:7283   .debug_str:0000000000000d1e .LASF193
     /tmp/ccbs3j1o.s:7235   .debug_str:0000000000000bda .LASF194
     /tmp/ccbs3j1o.s:7211   .debug_str:0000000000000a6e .LASF195
     /tmp/ccbs3j1o.s:7081   .debug_str:00000000000006c5 .LASF196
     /tmp/ccbs3j1o.s:6889   .debug_str:00000000000000e5 .LASF197
     /tmp/ccbs3j1o.s:7173   .debug_str:0000000000000978 .LASF198
     /tmp/ccbs3j1o.s:1590   .text:00000000000005f4 .LFB63
     /tmp/ccbs3j1o.s:1616   .text:0000000000000628 .LFE63
     /tmp/ccbs3j1o.s:1606   .text:0000000000000618 .LVL121
     /tmp/ccbs3j1o.s:6881   .debug_str:0000000000000092 .LASF199
     /tmp/ccbs3j1o.s:9      .text:0000000000000000 .LFB62
     /tmp/ccbs3j1o.s:75     .text:0000000000000058 .LFE62
     /tmp/ccbs3j1o.s:6993   .debug_str:0000000000000445 .LASF200
     /tmp/ccbs3j1o.s:7319   .debug_str:0000000000000e17 .LASF201
     /tmp/ccbs3j1o.s:38     .text:000000000000002c .LBB125
     /tmp/ccbs3j1o.s:49     .text:000000000000003c .LBE125
     /tmp/ccbs3j1o.s:6008   .debug_loc:0000000000000000 .LLST0
     /tmp/ccbs3j1o.s:50     .text:000000000000003c .LBB128
     /tmp/ccbs3j1o.s:61     .text:0000000000000048 .LBE128
     /tmp/ccbs3j1o.s:6017   .debug_loc:000000000000002c .LLST1
     /tmp/ccbs3j1o.s:62     .text:0000000000000048 .LBB131
     /tmp/ccbs3j1o.s:71     .text:0000000000000054 .LBE131
     /tmp/ccbs3j1o.s:6026   .debug_loc:0000000000000058 .LLST2
     /tmp/ccbs3j1o.s:6975   .debug_str:00000000000003b1 .LASF214
     /tmp/ccbs3j1o.s:6887   .debug_str:00000000000000d2 .LASF215
     /tmp/ccbs3j1o.s:121    .text:0000000000000078 .LFB58
     /tmp/ccbs3j1o.s:1585   .text:00000000000005f4 .LFE58
     /tmp/ccbs3j1o.s:7183   .debug_str:00000000000009e7 .LASF202
     /tmp/ccbs3j1o.s:6035   .debug_loc:0000000000000084 .LLST3
     /tmp/ccbs3j1o.s:6773   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccbs3j1o.s:7221   .debug_str:0000000000000b6e .LASF203
     /tmp/ccbs3j1o.s:7281   .debug_str:0000000000000d16 .LASF204
     /tmp/ccbs3j1o.s:7257   .debug_str:0000000000000c7c .LASF205
     /tmp/ccbs3j1o.s:6140   .debug_loc:0000000000000208 .LLST20
     /tmp/ccbs3j1o.s:572    .text:00000000000001b8 .LBB412
     /tmp/ccbs3j1o.s:628    .text:00000000000001e0 .LBE412
     /tmp/ccbs3j1o.s:7035   .debug_str:00000000000005a6 .LASF206
     /tmp/ccbs3j1o.s:6191   .debug_loc:00000000000002fc .LLST64
     /tmp/ccbs3j1o.s:7197   .debug_str:0000000000000a2c .LASF207
     /tmp/ccbs3j1o.s:6198   .debug_loc:000000000000031f .LLST65
     /tmp/ccbs3j1o.s:6210   .debug_loc:0000000000000356 .LLST66
GAS LISTING /tmp/ccbs3j1o.s 			page 60


     /tmp/ccbs3j1o.s:7077   .debug_str:00000000000006ac .LASF208
     /tmp/ccbs3j1o.s:6217   .debug_loc:0000000000000379 .LLST67
     /tmp/ccbs3j1o.s:626    .text:00000000000001e0 .LVL21
     /tmp/ccbs3j1o.s:795    .text:0000000000000268 .LBB374
     /tmp/ccbs3j1o.s:827    .text:0000000000000284 .LBE374
     /tmp/ccbs3j1o.s:6224   .debug_loc:000000000000039c .LLST56
     /tmp/ccbs3j1o.s:6885   .debug_str:00000000000000cd .LASF209
     /tmp/ccbs3j1o.s:6231   .debug_loc:00000000000003bf .LLST57
     /tmp/ccbs3j1o.s:826    .text:0000000000000284 .LVL43
     /tmp/ccbs3j1o.s:832    .text:0000000000000288 .LBB366
     /tmp/ccbs3j1o.s:847    .text:0000000000000290 .LBE366
     /tmp/ccbs3j1o.s:852    .text:0000000000000294 .LBB359
     /tmp/ccbs3j1o.s:871    .text:00000000000002a4 .LBE359
     /tmp/ccbs3j1o.s:6238   .debug_loc:00000000000003e2 .LLST55
     /tmp/ccbs3j1o.s:870    .text:00000000000002a4 .LVL48
     /tmp/ccbs3j1o.s:876    .text:00000000000002a8 .LBB353
     /tmp/ccbs3j1o.s:895    .text:00000000000002b8 .LBE353
     /tmp/ccbs3j1o.s:6245   .debug_loc:0000000000000405 .LLST54
     /tmp/ccbs3j1o.s:894    .text:00000000000002b8 .LVL51
     /tmp/ccbs3j1o.s:7037   .debug_str:00000000000005b4 .LASF211
     /tmp/ccbs3j1o.s:6252   .debug_loc:0000000000000428 .LLST27
     /tmp/ccbs3j1o.s:934    .text:00000000000002e0 .LBB322
     /tmp/ccbs3j1o.s:942    .text:00000000000002e8 .LBE322
     /tmp/ccbs3j1o.s:6267   .debug_loc:0000000000000471 .LLST28
     /tmp/ccbs3j1o.s:6275   .debug_loc:0000000000000495 .LLST29
     /tmp/ccbs3j1o.s:944    .text:00000000000002e8 .LBB324
     /tmp/ccbs3j1o.s:6282   .debug_loc:00000000000004b8 .LLST30
     /tmp/ccbs3j1o.s:6301   .debug_loc:0000000000000514 .LLST31
     /tmp/ccbs3j1o.s:6308   .debug_loc:0000000000000537 .LLST32
     /tmp/ccbs3j1o.s:6317   .debug_loc:0000000000000563 .LLST33
     /tmp/ccbs3j1o.s:6337   .debug_loc:00000000000005c0 .LLST34
     /tmp/ccbs3j1o.s:6356   .debug_loc:000000000000061c .LLST35
     /tmp/ccbs3j1o.s:1016   .text:0000000000000358 .LBB330
     /tmp/ccbs3j1o.s:1024   .text:0000000000000364 .LBE330
     /tmp/ccbs3j1o.s:6367   .debug_loc:0000000000000652 .LLST36
     /tmp/ccbs3j1o.s:6374   .debug_loc:0000000000000675 .LLST37
     /tmp/ccbs3j1o.s:6381   .debug_loc:0000000000000698 .LLST38
     /tmp/ccbs3j1o.s:6388   .debug_loc:00000000000006bb .LLST39
     /tmp/ccbs3j1o.s:1015   .text:0000000000000358 .LVL67
     /tmp/ccbs3j1o.s:1084   .text:0000000000000384 .LBB333
     /tmp/ccbs3j1o.s:1113   .text:00000000000003b8 .LBE333
     /tmp/ccbs3j1o.s:6395   .debug_loc:00000000000006de .LLST40
     /tmp/ccbs3j1o.s:1098   .text:00000000000003a4 .LBB334
     /tmp/ccbs3j1o.s:1106   .text:00000000000003b0 .LBE334
     /tmp/ccbs3j1o.s:6402   .debug_loc:0000000000000701 .LLST41
     /tmp/ccbs3j1o.s:6409   .debug_loc:0000000000000724 .LLST42
     /tmp/ccbs3j1o.s:6417   .debug_loc:0000000000000748 .LLST43
     /tmp/ccbs3j1o.s:6424   .debug_loc:000000000000076b .LLST44
     /tmp/ccbs3j1o.s:1089   .text:0000000000000390 .LVL71
     /tmp/ccbs3j1o.s:1117   .text:00000000000003bc .LBB336
     /tmp/ccbs3j1o.s:1156   .text:0000000000000408 .LBE336
     /tmp/ccbs3j1o.s:6431   .debug_loc:000000000000078e .LLST45
     /tmp/ccbs3j1o.s:1123   .text:00000000000003c8 .LBB337
     /tmp/ccbs3j1o.s:1133   .text:00000000000003dc .LBE337
     /tmp/ccbs3j1o.s:6438   .debug_loc:00000000000007b1 .LLST46
     /tmp/ccbs3j1o.s:6445   .debug_loc:00000000000007d4 .LLST47
     /tmp/ccbs3j1o.s:6453   .debug_loc:00000000000007ff .LLST48
GAS LISTING /tmp/ccbs3j1o.s 			page 61


     /tmp/ccbs3j1o.s:6460   .debug_loc:0000000000000822 .LLST49
     /tmp/ccbs3j1o.s:1122   .text:00000000000003c8 .LVL75
     /tmp/ccbs3j1o.s:988    .text:0000000000000328 .LBB341
     /tmp/ccbs3j1o.s:996    .text:0000000000000334 .LBE341
     /tmp/ccbs3j1o.s:6467   .debug_loc:0000000000000845 .LLST50
     /tmp/ccbs3j1o.s:6474   .debug_loc:0000000000000868 .LLST51
     /tmp/ccbs3j1o.s:6482   .debug_loc:000000000000088c .LLST52
     /tmp/ccbs3j1o.s:6489   .debug_loc:00000000000008af .LLST53
     /tmp/ccbs3j1o.s:987    .text:0000000000000328 .LVL64
     /tmp/ccbs3j1o.s:922    .text:00000000000002d0 .LVL55
     /tmp/ccbs3j1o.s:1173   .text:0000000000000414 .LBB314
     /tmp/ccbs3j1o.s:1241   .text:000000000000045c .LBE314
     /tmp/ccbs3j1o.s:6496   .debug_loc:00000000000008d2 .LLST24
     /tmp/ccbs3j1o.s:1202   .text:0000000000000438 .LBB315
     /tmp/ccbs3j1o.s:1213   .text:000000000000043c .LBE315
     /tmp/ccbs3j1o.s:6503   .debug_loc:00000000000008f5 .LLST25
     /tmp/ccbs3j1o.s:1218   .text:0000000000000440 .LBB317
     /tmp/ccbs3j1o.s:1232   .text:0000000000000448 .LBE317
     /tmp/ccbs3j1o.s:6510   .debug_loc:0000000000000918 .LLST26
     /tmp/ccbs3j1o.s:1192   .text:000000000000042c .LVL83
     /tmp/ccbs3j1o.s:1237   .text:0000000000000458 .LVL88
     /tmp/ccbs3j1o.s:1243   .text:000000000000045c .LBB313
     /tmp/ccbs3j1o.s:1264   .text:0000000000000478 .LBE313
     /tmp/ccbs3j1o.s:6517   .debug_loc:000000000000093b .LLST23
     /tmp/ccbs3j1o.s:1263   .text:0000000000000478 .LVL91
     /tmp/ccbs3j1o.s:477    .text:000000000000016c .LBB304
     /tmp/ccbs3j1o.s:562    .text:00000000000001b8 .LBE304
     /tmp/ccbs3j1o.s:479    .text:000000000000016c .LBB305
     /tmp/ccbs3j1o.s:495    .text:0000000000000178 .LBE305
     /tmp/ccbs3j1o.s:501    .text:0000000000000180 .LBB307
     /tmp/ccbs3j1o.s:516    .text:000000000000018c .LBE307
     /tmp/ccbs3j1o.s:531    .text:00000000000001a8 .LBB309
     /tmp/ccbs3j1o.s:542    .text:00000000000001ac .LBE309
     /tmp/ccbs3j1o.s:6524   .debug_loc:000000000000095e .LLST21
     /tmp/ccbs3j1o.s:547    .text:00000000000001b0 .LBB311
     /tmp/ccbs3j1o.s:561    .text:00000000000001b8 .LBE311
     /tmp/ccbs3j1o.s:6531   .debug_loc:0000000000000981 .LLST22
     /tmp/ccbs3j1o.s:526    .text:00000000000001a4 .LVL12
     /tmp/ccbs3j1o.s:199    .text:00000000000000e0 .LBB288
     /tmp/ccbs3j1o.s:214    .text:00000000000000ec .LBE288
     /tmp/ccbs3j1o.s:220    .text:00000000000000f4 .LBB290
     /tmp/ccbs3j1o.s:235    .text:0000000000000100 .LBE290
     /tmp/ccbs3j1o.s:763    .text:0000000000000258 .LBB383
     /tmp/ccbs3j1o.s:774    .text:000000000000025c .LBE383
     /tmp/ccbs3j1o.s:6538   .debug_loc:00000000000009a4 .LLST58
     /tmp/ccbs3j1o.s:779    .text:0000000000000260 .LBB385
     /tmp/ccbs3j1o.s:793    .text:0000000000000268 .LBE385
     /tmp/ccbs3j1o.s:6545   .debug_loc:00000000000009c7 .LLST59
     /tmp/ccbs3j1o.s:700    .text:000000000000021c .LBB396
     /tmp/ccbs3j1o.s:709    .text:0000000000000224 .LBE396
     /tmp/ccbs3j1o.s:6552   .debug_loc:00000000000009ea .LLST60
     /tmp/ccbs3j1o.s:6560   .debug_loc:0000000000000a0e .LLST61
     /tmp/ccbs3j1o.s:718    .text:0000000000000230 .LBB398
     /tmp/ccbs3j1o.s:729    .text:0000000000000234 .LBE398
     /tmp/ccbs3j1o.s:6567   .debug_loc:0000000000000a31 .LLST62
     /tmp/ccbs3j1o.s:734    .text:0000000000000238 .LBB400
     /tmp/ccbs3j1o.s:748    .text:0000000000000240 .LBE400
GAS LISTING /tmp/ccbs3j1o.s 			page 62


     /tmp/ccbs3j1o.s:6574   .debug_loc:0000000000000a54 .LLST63
     /tmp/ccbs3j1o.s:636    .text:00000000000001e4 .LBB449
     /tmp/ccbs3j1o.s:647    .text:00000000000001e8 .LBE449
     /tmp/ccbs3j1o.s:6581   .debug_loc:0000000000000a77 .LLST68
     /tmp/ccbs3j1o.s:652    .text:00000000000001ec .LBB451
     /tmp/ccbs3j1o.s:664    .text:00000000000001f0 .LBE451
     /tmp/ccbs3j1o.s:6588   .debug_loc:0000000000000a9a .LLST69
     /tmp/ccbs3j1o.s:713    .text:000000000000022c .LVL30
     /tmp/ccbs3j1o.s:758    .text:0000000000000254 .LVL36
     /tmp/ccbs3j1o.s:7309   .debug_str:0000000000000dc7 .LASF212
     /tmp/ccbs3j1o.s:6595   .debug_loc:0000000000000abd .LLST9
     /tmp/ccbs3j1o.s:6613   .debug_loc:0000000000000b09 .LLST10
     /tmp/ccbs3j1o.s:1365   .text:00000000000004d0 .LBB269
     /tmp/ccbs3j1o.s:1447   .text:0000000000000518 .LBE269
     /tmp/ccbs3j1o.s:1367   .text:00000000000004d0 .LBB270
     /tmp/ccbs3j1o.s:1382   .text:00000000000004dc .LBE270
     /tmp/ccbs3j1o.s:1386   .text:00000000000004e0 .LBB272
     /tmp/ccbs3j1o.s:1401   .text:00000000000004ec .LBE272
     /tmp/ccbs3j1o.s:1416   .text:0000000000000508 .LBB274
     /tmp/ccbs3j1o.s:1427   .text:000000000000050c .LBE274
     /tmp/ccbs3j1o.s:6628   .debug_loc:0000000000000b43 .LLST15
     /tmp/ccbs3j1o.s:1432   .text:0000000000000510 .LBB276
     /tmp/ccbs3j1o.s:1446   .text:0000000000000518 .LBE276
     /tmp/ccbs3j1o.s:6635   .debug_loc:0000000000000b66 .LLST16
     /tmp/ccbs3j1o.s:1411   .text:0000000000000504 .LVL103
     /tmp/ccbs3j1o.s:1284   .text:000000000000047c .LBB260
     /tmp/ccbs3j1o.s:1297   .text:000000000000048c .LBE260
     /tmp/ccbs3j1o.s:6642   .debug_loc:0000000000000b89 .LLST11
     /tmp/ccbs3j1o.s:1305   .text:0000000000000494 .LBB262
     /tmp/ccbs3j1o.s:1315   .text:000000000000049c .LBE262
     /tmp/ccbs3j1o.s:6651   .debug_loc:0000000000000bb5 .LLST12
     /tmp/ccbs3j1o.s:1330   .text:00000000000004a0 .LBB264
     /tmp/ccbs3j1o.s:1342   .text:00000000000004a8 .LBE264
     /tmp/ccbs3j1o.s:6660   .debug_loc:0000000000000be1 .LLST13
     /tmp/ccbs3j1o.s:1355   .text:00000000000004c8 .LBB267
     /tmp/ccbs3j1o.s:1362   .text:00000000000004cc .LBE267
     /tmp/ccbs3j1o.s:6668   .debug_loc:0000000000000c05 .LLST14
     /tmp/ccbs3j1o.s:1449   .text:0000000000000518 .LBB278
     /tmp/ccbs3j1o.s:1510   .text:0000000000000570 .LBE278
     /tmp/ccbs3j1o.s:6675   .debug_loc:0000000000000c28 .LLST17
     /tmp/ccbs3j1o.s:1460   .text:0000000000000524 .LBB281
     /tmp/ccbs3j1o.s:1467   .text:0000000000000528 .LBE281
     /tmp/ccbs3j1o.s:6686   .debug_loc:0000000000000c5e .LLST18
     /tmp/ccbs3j1o.s:6694   .debug_loc:0000000000000c82 .LLST19
     /tmp/ccbs3j1o.s:1472   .text:0000000000000534 .LVL110
     /tmp/ccbs3j1o.s:1504   .text:000000000000056c .LVL113
     /tmp/ccbs3j1o.s:6701   .debug_loc:0000000000000ca5 .LLST4
     /tmp/ccbs3j1o.s:6728   .debug_loc:0000000000000ceb .LLST5
     /tmp/ccbs3j1o.s:1548   .text:00000000000005c0 .LBB253
     /tmp/ccbs3j1o.s:1567   .text:00000000000005d8 .LBE253
     /tmp/ccbs3j1o.s:6736   .debug_loc:0000000000000d0f .LLST6
     /tmp/ccbs3j1o.s:6744   .debug_loc:0000000000000d33 .LLST7
     /tmp/ccbs3j1o.s:1557   .text:00000000000005d0 .LBB255
     /tmp/ccbs3j1o.s:1565   .text:00000000000005d8 .LBE255
     /tmp/ccbs3j1o.s:6751   .debug_loc:0000000000000d56 .LLST8
     /tmp/ccbs3j1o.s:1525   .text:0000000000000590 .LVL116
     /tmp/ccbs3j1o.s:1547   .text:00000000000005c0 .LVL117
GAS LISTING /tmp/ccbs3j1o.s 			page 63


     /tmp/ccbs3j1o.s:188    .text:00000000000000d8 .LVL6
     /tmp/ccbs3j1o.s:1577   .text:00000000000005f0 .LVL120
     /tmp/ccbs3j1o.s:141    .text:0000000000000098 .LBB246
     /tmp/ccbs3j1o.s:158    .text:00000000000000a4 .LBE246
     /tmp/ccbs3j1o.s:81     .text:0000000000000058 .LFB57
     /tmp/ccbs3j1o.s:110    .text:0000000000000078 .LFE57
     /tmp/ccbs3j1o.s:7263   .debug_str:0000000000000c91 .LASF213
     /tmp/ccbs3j1o.s:7073   .debug_str:0000000000000687 .LASF216
     /tmp/ccbs3j1o.s:7331   .debug_str:0000000000000e65 .LASF217
     /tmp/ccbs3j1o.s:7275   .debug_str:0000000000000ce0 .LASF218
     /tmp/ccbs3j1o.s:7145   .debug_str:00000000000008b0 .LASF219
     /tmp/ccbs3j1o.s:6879   .debug_str:000000000000008d .LASF220
     /tmp/ccbs3j1o.s:6947   .debug_str:0000000000000294 .LASF221
     /tmp/ccbs3j1o.s:6893   .debug_str:0000000000000108 .LASF222
     /tmp/ccbs3j1o.s:7119   .debug_str:00000000000007de .LASF223
     /tmp/ccbs3j1o.s:6963   .debug_str:000000000000033b .LASF224
     /tmp/ccbs3j1o.s:7249   .debug_str:0000000000000c32 .LASF225
     /tmp/ccbs3j1o.s:7065   .debug_str:000000000000065a .LASF227
     /tmp/ccbs3j1o.s:7121   .debug_str:00000000000007fa .LASF228
     /tmp/ccbs3j1o.s:7303   .debug_str:0000000000000d9b .LASF230
     /tmp/ccbs3j1o.s:7111   .debug_str:00000000000007b3 .LASF226
     /tmp/ccbs3j1o.s:7059   .debug_str:0000000000000644 .LASF229
     /tmp/ccbs3j1o.s:7125   .debug_str:0000000000000822 .LASF231
     /tmp/ccbs3j1o.s:37     .text:000000000000002c .LVL1
     /tmp/ccbs3j1o.s:46     .text:000000000000003c .LVL2
     /tmp/ccbs3j1o.s:58     .text:0000000000000048 .LVL3
     /tmp/ccbs3j1o.s:68     .text:0000000000000054 .LVL4
     /tmp/ccbs3j1o.s:156    .text:00000000000000a4 .LVL5
     /tmp/ccbs3j1o.s:192    .text:00000000000000e0 .LVL8
     /tmp/ccbs3j1o.s:255    .text:0000000000000110 .LVL10
     /tmp/ccbs3j1o.s:558    .text:00000000000001b8 .LVL16
     /tmp/ccbs3j1o.s:621    .text:00000000000001d8 .LVL20
     /tmp/ccbs3j1o.s:685    .text:0000000000000210 .LVL26
     /tmp/ccbs3j1o.s:745    .text:0000000000000240 .LVL34
     /tmp/ccbs3j1o.s:790    .text:0000000000000268 .LVL40
     /tmp/ccbs3j1o.s:829    .text:0000000000000288 .LVL44
     /tmp/ccbs3j1o.s:873    .text:00000000000002a8 .LVL49
     /tmp/ccbs3j1o.s:897    .text:00000000000002bc .LVL52
     /tmp/ccbs3j1o.s:917    .text:00000000000002c8 .LVL54
     /tmp/ccbs3j1o.s:925    .text:00000000000002d4 .LVL56
     /tmp/ccbs3j1o.s:1004   .text:0000000000000348 .LVL66
     /tmp/ccbs3j1o.s:1043   .text:000000000000037c .LVL70
     /tmp/ccbs3j1o.s:1115   .text:00000000000003bc .LVL74
     /tmp/ccbs3j1o.s:1163   .text:0000000000000414 .LVL81
     /tmp/ccbs3j1o.s:1239   .text:000000000000045c .LVL89
     /tmp/ccbs3j1o.s:1266   .text:000000000000047c .LVL92
     /tmp/ccbs3j1o.s:1289   .text:0000000000000484 .LVL93
     /tmp/ccbs3j1o.s:1301   .text:0000000000000490 .LVL95
     /tmp/ccbs3j1o.s:250    .text:000000000000010c .LVL9
     /tmp/ccbs3j1o.s:488    .text:0000000000000170 .LVL11
     /tmp/ccbs3j1o.s:697    .text:0000000000000218 .LVL27
     /tmp/ccbs3j1o.s:753    .text:0000000000000248 .LVL35
     /tmp/ccbs3j1o.s:845    .text:0000000000000290 .LVL45
     /tmp/ccbs3j1o.s:849    .text:0000000000000294 .LVL46
     /tmp/ccbs3j1o.s:931    .text:00000000000002dc .LVL57
     /tmp/ccbs3j1o.s:599    .text:00000000000001c8 .LVL18
     /tmp/ccbs3j1o.s:610    .text:00000000000001d0 .LVL19
GAS LISTING /tmp/ccbs3j1o.s 			page 64


     /tmp/ccbs3j1o.s:588    .text:00000000000001c0 .LVL17
     /tmp/ccbs3j1o.s:809    .text:0000000000000270 .LVL41
     /tmp/ccbs3j1o.s:820    .text:0000000000000278 .LVL42
     /tmp/ccbs3j1o.s:865    .text:000000000000029c .LVL47
     /tmp/ccbs3j1o.s:889    .text:00000000000002b0 .LVL50
     /tmp/ccbs3j1o.s:913    .text:00000000000002c4 .LVL53
     /tmp/ccbs3j1o.s:955    .text:00000000000002f8 .LVL60
     /tmp/ccbs3j1o.s:980    .text:000000000000031c .LVL63
     /tmp/ccbs3j1o.s:933    .text:00000000000002e0 .LVL58
     /tmp/ccbs3j1o.s:940    .text:00000000000002e8 .LVL59
     /tmp/ccbs3j1o.s:1035   .text:0000000000000374 .LVL69
     /tmp/ccbs3j1o.s:1097   .text:00000000000003a4 .LVL72
     /tmp/ccbs3j1o.s:1145   .text:00000000000003f4 .LVL78
     /tmp/ccbs3j1o.s:1148   .text:00000000000003fc .LVL79
     /tmp/ccbs3j1o.s:970    .text:0000000000000310 .LVL61
     /tmp/ccbs3j1o.s:977    .text:0000000000000318 .LVL62
     /tmp/ccbs3j1o.s:1022   .text:0000000000000364 .LVL68
     /tmp/ccbs3j1o.s:1154   .text:0000000000000408 .LVL80
     /tmp/ccbs3j1o.s:1104   .text:00000000000003b0 .LVL73
     /tmp/ccbs3j1o.s:1131   .text:00000000000003dc .LVL77
     /tmp/ccbs3j1o.s:1127   .text:00000000000003cc .LVL76
     /tmp/ccbs3j1o.s:994    .text:0000000000000334 .LVL65
     /tmp/ccbs3j1o.s:1186   .text:000000000000041c .LVL82
     /tmp/ccbs3j1o.s:1201   .text:0000000000000438 .LVL84
     /tmp/ccbs3j1o.s:1210   .text:000000000000043c .LVL85
     /tmp/ccbs3j1o.s:1217   .text:0000000000000440 .LVL86
     /tmp/ccbs3j1o.s:1229   .text:0000000000000448 .LVL87
     /tmp/ccbs3j1o.s:1256   .text:0000000000000464 .LVL90
     /tmp/ccbs3j1o.s:530    .text:00000000000001a8 .LVL13
     /tmp/ccbs3j1o.s:539    .text:00000000000001ac .LVL14
     /tmp/ccbs3j1o.s:546    .text:00000000000001b0 .LVL15
     /tmp/ccbs3j1o.s:762    .text:0000000000000258 .LVL37
     /tmp/ccbs3j1o.s:771    .text:000000000000025c .LVL38
     /tmp/ccbs3j1o.s:778    .text:0000000000000260 .LVL39
     /tmp/ccbs3j1o.s:699    .text:000000000000021c .LVL28
     /tmp/ccbs3j1o.s:707    .text:0000000000000224 .LVL29
     /tmp/ccbs3j1o.s:717    .text:0000000000000230 .LVL31
     /tmp/ccbs3j1o.s:726    .text:0000000000000234 .LVL32
     /tmp/ccbs3j1o.s:733    .text:0000000000000238 .LVL33
     /tmp/ccbs3j1o.s:635    .text:00000000000001e4 .LVL22
     /tmp/ccbs3j1o.s:644    .text:00000000000001e8 .LVL23
     /tmp/ccbs3j1o.s:651    .text:00000000000001ec .LVL24
     /tmp/ccbs3j1o.s:660    .text:00000000000001f0 .LVL25
     /tmp/ccbs3j1o.s:1295   .text:000000000000048c .LVL94
     /tmp/ccbs3j1o.s:1311   .text:0000000000000498 .LVL97
     /tmp/ccbs3j1o.s:1313   .text:000000000000049c .LVL98
     /tmp/ccbs3j1o.s:1327   .text:00000000000004a0 .LVL99
     /tmp/ccbs3j1o.s:1443   .text:0000000000000518 .LVL107
     /tmp/ccbs3j1o.s:1506   .text:0000000000000570 .LVL114
     /tmp/ccbs3j1o.s:1415   .text:0000000000000508 .LVL104
     /tmp/ccbs3j1o.s:1424   .text:000000000000050c .LVL105
     /tmp/ccbs3j1o.s:1431   .text:0000000000000510 .LVL106
     /tmp/ccbs3j1o.s:1304   .text:0000000000000494 .LVL96
     /tmp/ccbs3j1o.s:1339   .text:00000000000004a8 .LVL100
     /tmp/ccbs3j1o.s:1354   .text:00000000000004c8 .LVL101
     /tmp/ccbs3j1o.s:1360   .text:00000000000004cc .LVL102
     /tmp/ccbs3j1o.s:1476   .text:0000000000000538 .LVL111
GAS LISTING /tmp/ccbs3j1o.s 			page 65


     /tmp/ccbs3j1o.s:1491   .text:000000000000054c .LVL112
     /tmp/ccbs3j1o.s:1459   .text:0000000000000524 .LVL108
     /tmp/ccbs3j1o.s:1465   .text:0000000000000528 .LVL109
     /tmp/ccbs3j1o.s:190    .text:00000000000000dc .LVL7
     /tmp/ccbs3j1o.s:1519   .text:000000000000057c .LVL115
     /tmp/ccbs3j1o.s:1563   .text:00000000000005d8 .LVL119
     /tmp/ccbs3j1o.s:1556   .text:00000000000005d0 .LVL118
     /tmp/ccbs3j1o.s:1647   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccbs3j1o.s:184    .text:00000000000000d0 .LBB251
     /tmp/ccbs3j1o.s:194    .text:00000000000000e0 .LBE251
     /tmp/ccbs3j1o.s:1513   .text:0000000000000570 .LBB258
     /tmp/ccbs3j1o.s:1578   .text:00000000000005f0 .LBE258
     /tmp/ccbs3j1o.s:1514   .text:0000000000000570 .LBB252
     /tmp/ccbs3j1o.s:1527   .text:0000000000000590 .LBE252
     /tmp/ccbs3j1o.s:1537   .text:00000000000005a8 .LBB257
     /tmp/ccbs3j1o.s:1572   .text:00000000000005e4 .LBE257
     /tmp/ccbs3j1o.s:1282   .text:000000000000047c .LBB259
     /tmp/ccbs3j1o.s:1317   .text:000000000000049c .LBE259
     /tmp/ccbs3j1o.s:1324   .text:000000000000049c .LBB284
     /tmp/ccbs3j1o.s:1511   .text:0000000000000570 .LBE284
     /tmp/ccbs3j1o.s:1451   .text:0000000000000518 .LBB280
     /tmp/ccbs3j1o.s:1478   .text:0000000000000538 .LBE280
     /tmp/ccbs3j1o.s:1489   .text:000000000000054c .LBB283
     /tmp/ccbs3j1o.s:1508   .text:0000000000000570 .LBE283
     /tmp/ccbs3j1o.s:197    .text:00000000000000e0 .LBB287
     /tmp/ccbs3j1o.s:258    .text:0000000000000114 .LBE287
     /tmp/ccbs3j1o.s:262    .text:0000000000000114 .LBB455
     /tmp/ccbs3j1o.s:269    .text:000000000000011c .LBE455
     /tmp/ccbs3j1o.s:273    .text:000000000000011c .LBB456
     /tmp/ccbs3j1o.s:282    .text:0000000000000124 .LBE456
     /tmp/ccbs3j1o.s:286    .text:0000000000000124 .LBB457
     /tmp/ccbs3j1o.s:297    .text:000000000000012c .LBE457
     /tmp/ccbs3j1o.s:301    .text:000000000000012c .LBB458
     /tmp/ccbs3j1o.s:314    .text:0000000000000134 .LBE458
     /tmp/ccbs3j1o.s:318    .text:0000000000000134 .LBB459
     /tmp/ccbs3j1o.s:333    .text:000000000000013c .LBE459
     /tmp/ccbs3j1o.s:337    .text:000000000000013c .LBB460
     /tmp/ccbs3j1o.s:354    .text:0000000000000144 .LBE460
     /tmp/ccbs3j1o.s:358    .text:0000000000000144 .LBB461
     /tmp/ccbs3j1o.s:377    .text:000000000000014c .LBE461
     /tmp/ccbs3j1o.s:381    .text:000000000000014c .LBB462
     /tmp/ccbs3j1o.s:402    .text:0000000000000154 .LBE462
     /tmp/ccbs3j1o.s:406    .text:0000000000000154 .LBB463
     /tmp/ccbs3j1o.s:429    .text:000000000000015c .LBE463
     /tmp/ccbs3j1o.s:433    .text:000000000000015c .LBB464
     /tmp/ccbs3j1o.s:458    .text:0000000000000164 .LBE464
     /tmp/ccbs3j1o.s:462    .text:0000000000000164 .LBB465
     /tmp/ccbs3j1o.s:665    .text:00000000000001f0 .LBE465
     /tmp/ccbs3j1o.s:689    .text:0000000000000210 .LBB466
     /tmp/ccbs3j1o.s:1058   .text:000000000000037c .LBE466
     /tmp/ccbs3j1o.s:1062   .text:000000000000037c .LBB467
     /tmp/ccbs3j1o.s:1280   .text:000000000000047c .LBE467
     /tmp/ccbs3j1o.s:900    .text:00000000000002bc .LBB321
     /tmp/ccbs3j1o.s:923    .text:00000000000002d0 .LBE321
     /tmp/ccbs3j1o.s:927    .text:00000000000002d4 .LBB348
     /tmp/ccbs3j1o.s:1047   .text:000000000000037c .LBE348
     /tmp/ccbs3j1o.s:1073   .text:000000000000037c .LBB349
GAS LISTING /tmp/ccbs3j1o.s 			page 66


     /tmp/ccbs3j1o.s:1171   .text:0000000000000414 .LBE349
     /tmp/ccbs3j1o.s:1046   .text:000000000000037c .LBE324
     /tmp/ccbs3j1o.s:1074   .text:000000000000037c .LBB347
     /tmp/ccbs3j1o.s:1170   .text:0000000000000414 .LBE347
     /tmp/ccbs3j1o.s:952    .text:00000000000002f4 .LBB327
     /tmp/ccbs3j1o.s:982    .text:000000000000031c .LBE327
     /tmp/ccbs3j1o.s:1006   .text:0000000000000348 .LBB343
     /tmp/ccbs3j1o.s:1039   .text:0000000000000378 .LBE343
     /tmp/ccbs3j1o.s:1077   .text:000000000000037c .LBB344
     /tmp/ccbs3j1o.s:1167   .text:0000000000000414 .LBE344
     /tmp/ccbs3j1o.s:1010   .text:000000000000034c .LBB329
     /tmp/ccbs3j1o.s:1037   .text:0000000000000378 .LBE329
     /tmp/ccbs3j1o.s:1158   .text:0000000000000408 .LBB339
     /tmp/ccbs3j1o.s:1165   .text:0000000000000414 .LBE339

UNDEFINED SYMBOLS
plic_claim
_ZN3TCB16timeSliceCounterE
_ZN3TCB8dispatchEv
_ZN3TCB12createThreadEPPS_PFvPvES2_Pm
_ZN3TCB7runningE
_ZN4_sem15createSemaphoreEPPS_j
_ZN4_sem4waitEv
_ZN4_sem6signalEv
_Znwm
_ZN6Buffer4getcEv
_Z11printStringPKc
_ZN6Buffer4putcEc
_ZN9Scheduler3putEP3TCB
_ZdlPv
CONSOLE_RX_DATA
CONSOLE_STATUS
plic_complete
